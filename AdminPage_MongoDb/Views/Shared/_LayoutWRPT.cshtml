<html>
<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <style>
        video {
            background-color: #ddd;
            border-radius: 7px;
            margin: 10px 0px 0px 10px;
            width: 320px;
            height: 240px;
        }

        button {
            margin: 5px 0px 0px 10px !important;
            width: 654px;
        }
    </style>
</head>
<body onload="showMyFace()">
    <video id="yourVideo" autoplay muted></video>
    <video id="friendsVideo" autoplay></video>
    <br />
    <button onclick="showFriendsFace()" type="button" class="btn btn-primary btn-lg"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true"></span> Call</button>
    <script src="https://www.gstatic.com/firebasejs/5.9.1/firebase.js"></script>
    <script>
        // Initialize Firebase
        var config = {
            apiKey: "AIzaSyAw-gz7P_QZdpJ2GkjVvfZgjtYIq5e1lyU",
            authDomain: "mymesseger-d1532.firebaseapp.com",
            databaseURL: "https://mymesseger-d1532.firebaseio.com",
            projectId: "mymesseger-d1532",
            storageBucket: "mymesseger-d1532.appspot.com",
            messagingSenderId: "512808405717"
        };
        firebase.initializeApp(config);
    </script>
    <script>
        var database = firebase.database().ref();
        var yourVideo = document.getElementById("yourVideo");
        var friendsVideo = document.getElementById("friendsVideo");
        var yourId = Math.floor(Math.random() * 1000000000);
        var servers = {
            'iceServers': [
                { 'urls': 'stun:stun.services.mozilla.com' },
                { 'urls': 'stun:stun.l.google.com:19302' }
            ]
        };
        var pc = new RTCPeerConnection(servers);
        pc.onicecandidate = (event => event.candidate ? sendMessage(yourId, JSON.stringify({ 'ice': event.candidate })) : console.log("Sent All Ice"));
        pc.onaddstream = (event => friendsVideo.srcObject = event.stream);

        function sendMessage(senderId, data) {
            var msg = database.push({ sender: senderId, message: data });
            msg.remove();
        }

        function readMessage(data) {
            var msg = JSON.parse(data.val().message);
            var sender = data.val().sender;
            if (sender != yourId) {
                if (msg.ice != undefined) {
                    pc.addIceCandidate(new RTCIceCandidate(msg.ice));
                } else if (msg.sdp.type == "offer") {
                    pc.setRemoteDescription(new RTCSessionDescription(msg.sdp))
                        .then(() => pc.createAnswer())
                        .then(answer => pc.setLocalDescription(answer))
                        .then(() => sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription })));
                } else if (msg.sdp.type == "answer") {
                    pc.setRemoteDescription(new RTCSessionDescription(msg.sdp));
                }
            }
        };

        database.on('child_added', readMessage);

        function showMyFace() {
            navigator.mediaDevices.getUserMedia({ audio: true, video: true })
                .then(stream => yourVideo.srcObject = stream)
                .then(stream => pc.addStream(stream));
        }

        function showFriendsFace() {
            pc.createOffer()
                .then(offer => pc.setLocalDescription(offer))
                .then(() => sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription })));
        }
    </script>
    @RenderBody()
</body>
</html>