@{

    Layout = "~/Views/Shared/_LayoutStudent_NewUI.cshtml";
    var model = ViewBag.Model as BaseCustomerMVC.Models.DefaultModel;
    ViewData["Title"] = "My Courses";
    var subjects = ViewBag.Subjects as List<BaseCustomerEntity.Database.SubjectEntity>;
    var grades = ViewBag.Grades as List<BaseCustomerEntity.Database.GradeEntity>;
}

<script>
    setActiveMenu("course");
</script>
<script src="~/js/daterangepicker.min.js"></script>
<link href="~/css/daterangepicker.css" rel="stylesheet" />

<section class="module" id="dashboard_content">
    <div class="card-header">
        <div class="flex border-b padding-b25">
            <div class="box filter-box">
                <input type="text" value="01/08/2019 - 30/09/2019" name="dates">
                <span class="ic ic-picker"></span>
            </div>

            <div class="box filter-box w-152">
                <select v-model="subject" v-on:change="changeSubject()">
                    <option value="">Choose Subject</option>
                    <option v-for="(item,k) in list_subject" :value="item.ID">{{item.Name}}</option>
                </select>
            </div>
            <div class="box filter-box w-152">
                <select name="" v-model="grade" v-on:change="changeGrade()">
                    <option value="">Choose Level</option>
                    <option v-for="(item,k) in list_grades" :value="item.ID">{{item.Name}}</option>
                </select>
            </div>
            <div class="search-box">
                <button><i class="ic ic-find"></i></button>
                <input type="text" name="" placeholder="Search">
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="row row-list">
            <div class="col-md-3 course-item" v-for="(item,k) in list_course">
                <div class="box radius">
                    <a :href="'@Url.Action("Detail", "Course")/' + item.ID" class="thumb"><img :src="item.Thumb" :alt="item.Name"></a>
                    <div class="detail box">
                        <a :href="'@Url.Action("Detail", "Course")/' + item.ID" title="" class="title">{{item.Name}}</a>
                        <p><i class="ti-time"></i>{{formatShortDate(item.EndDate)}}</p>
                        <div class="c-bot flex">
                            <a :href="'@Url.Action("Detail", "Course")/' + item.ID" title="Học ngay" class="btn-learn">Học ngay</a>
                            <div class="c-right">
                                {{item.CompletePercent + '%'}}<span class="ic ic-subtag"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box margin-t20 flex">
            <div class="paging-view">
                Hiển thị:
                <select name="" v-model="view">
                    <option value="10">10 kết quả</option>
                    <option value="20">20 kết quả</option>
                    <option value="30">30 kết quả</option>
                </select>
            </div>
            <div class="page-control">
                <div class="inner">
                    <button><i class="ti-angle-left"></i></button>
                    <button><i class="ti-angle-double-left"></i></button>
                    <input type="text" v-model="page" />
                    <button><i class="ti-angle-double-right"></i></button>
                    <button><i class="ti-angle-right"></i></button>
                </div>
            </div>
        </div>
    </div>
</section>



@*<section class="module" id="dashboard_content">
        <div class="card-header">
            <div class="flex border-b padding-b25">
                <h2 class="title">@ViewData["Title"]</h2>
            </div>
        </div>
        <div class="main-container pl-3 pr-3">
            <div class="active-region">
                <div class="block-title pt-2 pb-2">
                    <h2>Ongoing</h2>
                </div>
                <table id="activeCourse" class="table" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th class="text-center">Index</th>
                            <th class="text-left">Subject</th>
                            <th class="text-left">Course</th>
                            <th class="text-center">Period</th>
                            <th class="text-center">Progress</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="past-region" style="display: none">
                <div class="block-title">
                    <h2>Past Enrollments</h2>
                </div>
                <table id="pastCourse" class="table" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th class="text-center">Index</th>
                            <th class="text-left">Subject</th>
                            <th class="text-left">Course</th>
                            <th class="text-center">Period</th>
                            <th class="text-center">Result</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </section>*@
<script>
    $('input[name="dates"]').daterangepicker();
</script>
@section Scripts{
    <script>

        new Vue({
            el: ".module",
            mounted() {
                var start = moment().subtract(29, 'days');
                var end = moment();
                $('input[name="dates"]').daterangepicker({
                    startDate: start,
                    endDate: end,
                    locale: {
                        format: "DD/MM/YYYY",
                    }
                });
                this.list_subject = @Html.Raw(Json.Serialize(subjects));
                this.list_grades_full = @Html.Raw(Json.Serialize(grades));
                //console.log(this.list_grades_full);
                this.changeSubject()
            },
            data: {
                list_course: [
                ],
                list_subject: [],
                list_grades_full: [],
                list_grades: [],
                subject:'',
                grade: '',
                view: 10,
                page: 1
            },
            watch: {
            },
            methods: {
                getCourse() {
                    let _that = this
                    let _form = new FormData()
                    _form.append('GradeID', _that.grade)
                    _form.append('SubjectID', _that.subject)
                    _form.append('PageSize', _that.view)
                    _form.append('PageIndex', _that.page)
                    let _url = '@Url.Action("GetList", "Course")'
                    axios.post(_url, _form)
                        .then(response => {
                            console.log(response.data)
                            _that.list_course = response.data.Data;
                            //console.log(_that.active_course);
                        }).catch(e => { })
                },
                changeSubject() {
                    let _that = this
                    //console.log(this.subject)
                    //console.log(this.list_grades_full)
                    _that.list_grades = [];

                    for (i = 0; i < _that.list_grades_full.length; i++)
                    {
                        //console.log(_that.list_grades_full[i].SubjectID)
                        if (_that.list_grades_full[i].SubjectID == _that.subject) {
                            _that.list_grades.push(_that.list_grades_full[i])
                        }
                    }
                    _that.grade = ""
                    _that.changeGrade()
                },
                changeGrade() {
                    let _that = this
                    _that.getCourse()
                },
                formatShortDate(date) {
                    if (moment(date) < moment(new Date(2000, 1, 1))) return "-";
                    return moment(date).format("DD/MM/YYYY")
                }
            }
        });

    </script>
}