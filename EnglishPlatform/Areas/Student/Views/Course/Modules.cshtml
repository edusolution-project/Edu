@{
    Layout = "~/Views/Shared/_LayoutStudent_NewUI.cshtml";
    var currentCs = ViewBag.ClassSubject as BaseCustomerMVC.Models.ClassSubjectViewModel;
    var completePercent = (int)ViewBag.CompletePercent;
    ViewData["Title"] = currentCs.ClassName + " - " + currentCs.SkillName;
}

<script>
    setActiveMenu("course");
</script>

<section class="module" id="dashboard_content">
    <div class="card-header">
        <div class="flex border-b padding-b25">
            <h2 class="title"><a href="@Url.Action("Detail","Course")/@currentCs.ClassID" title="@currentCs.ClassName"><i class="ti-arrow-left"></i></a>@currentCs.ClassName/<span class="end-break">@currentCs.SkillName</span></h2>
            <div class="c-right bad">
                <div class="flex">
                    <b-progress :value="7" :max="10" class="mb-3"></b-progress>
                    <span>@completePercent%</span>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="box">
            <ul class="list ls-pratice">
                <li class="col-md-12" v-if="list_data.length" v-for="(item,k) in list_data">
                    <div class="inner">
                        <a href="javascript:;" v-b-toggle="`prc-${k}`" class="btn-collapse" v-on:click="getSubList(item.ID, k)" :id="item.ID"><i class="ic ic-edit-small"></i>{{item.Name}}<i class="ic ic-collapse"></i></a>
                        <b-collapse :id="`prc-${k}`" accordion="my-accordion" role="tabpanel">
                            <b-card-body>
                                <ul class="list">

                                    <li class="sub-practice" v-if="item.detail.length" v-for="(lesson,j) in item.detail">
                                        <span class="c c1"> <a :href="'@Url.Action("Detail", "Lesson")/' + lesson.ID + '/@currentCs.ID'">{{lesson.Title}}</a></span>
                                        <template v-if="lesson.TemplateType === 2">
                                            <div class="c c2">
                                                <template v-if="isViewed(lesson.LastJoin)">
                                                    <span>Làm bài lần cuối</span>
                                                    <span>{{formatTime(lesson.LastJoin)}}</span>
                                                </template>
                                            </div>
                                            <div class="c c3">
                                                <template v-if="isViewed(lesson.LastJoin)">
                                                    <span v-bind:class="{'bg-danger' : parseInt(lesson.DoPoint)<50}">{{lesson.DoPoint}}</span>%
                                                </template>
                                            </div>
                                            <div class="c c4">
                                                <template v-if="isViewed(lesson.LastJoin)">
                                                    <a :href="'@Url.Action("Detail", "Lesson")/' + lesson.ID + '/@currentCs.ID'" v-if="isInDue(lesson.EndDate)" title="Làm lại" class="btn-act act">Làm lại</a>
                                                    <a v-else title="Hết hạn" class="btn-act act bg-secondary" v-on:click="lockNotify()">Hết hạn</a>
                                                    <a :href="'@Url.Action("Review", "Lesson")/' + lesson.ID + '/@currentCs.ID'" title="Xem đáp án" class="btn-act view">Xem đáp án</a>
                                                </template>
                                                <template v-else>
                                                    <a :href="'@Url.Action("Detail", "Lesson")/' + lesson.ID + '/@currentCs.ID'" title="Làm lại" class="btn-act act">Làm bài</a>
                                                </template>
                                            </div>
                                        </template>
                                        <template v-else>
                                            <div class="c c2">
                                                <template v-if="isViewed(lesson.LastJoin)">
                                                    <span>Học lần cuối</span>
                                                    <span>{{formatTime(lesson.LastJoin)}}</span>
                                                </template>
                                            </div>
                                            <div class="c c3" v-if()>
                                            </div>
                                            <div class="c c4">
                                                <a :href="'@Url.Action("Detail", "Lesson")/' + lesson.ID + '/@currentCs.ID'" title="isViewed(lesson.LastJoin) ? 'Học lại':'Học ngay'" class="btn-act act">{{isViewed(lesson.LastJoin) ? 'Học lại':'Học ngay'}}</a>
                                            </div>
                                        </template>
                                    </li>
                                </ul>
                            </b-card-body>
                        </b-collapse>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</section>

@section Scripts {
    <script>

        new Vue({
        el: "#dashboard_content",
		mounted(){
            this.getList()
		},
        data: {
            list_data : [
            ],
            view : 10,
            page : 1
        },
        watch : {
        },
        methods: {
            getList(){

                let _that = this
                let _form = new FormData()
                _form.append('ID', '@currentCs.ID')
                let _url = '@Url.Action("GetSchedules", "Lesson")'
                axios.post(_url, _form)
                    .then(response => {
                        console.log(response.data.Data)
                        _that.list_data = response.data.Data.Chapters

                        if (window.location.hash != "")
                        {

                        }

                        //console.log(_that.active_course);
                    }).catch(e => { })
            },
            getSubList(chapterId, pos){
                let _that = this
                console.log(_that.list_data[pos].detail);
                if (_that.list_data[pos].detail == null) {
                    var name = _that.list_data[pos].Name;
                    let _form = new FormData()
                    _that.list_data[pos].Name = _that.list_data[pos].Name + "...";
                    _form.append('ID', '@currentCs.ID')
                    _form.append('ChapterID', chapterId)
                    let _url = '@Url.Action("GetChapterContent", "Lesson")'
                    axios.post(_url, _form)
                        .then(response => {
                            console.log(response.data.Data);
                            _that.list_data[pos].detail = response.data.Data.Lessons;
                            _that.list_data[pos].Name = name;
                        }).catch(e => { })
                }
            },
            formatTime(time) {
                if (!this.isViewed(time)) return "-";
                return moment(time).format("DD/MM/YYYY hh:mm")
            },
            isViewed(time) {
                return (moment(time) > moment(new Date(2000, 1, 1)));
            },
            isInDue(time) {
                 return (moment(time) < moment(new Date(2000, 1, 1))) || (moment(time) > moment());
            },
            lockNotify() {
                alert("Lesson is overdue!");
            }
        }
    });
    </script>
}