
@{
    ViewData["Title"] = "Trang chủ - " + DateTime.Now.ToString("D");
    Layout = "~/Views/Shared/_LayoutStudent_NewUI.cshtml";
    var student = ViewBag.Student as BaseCustomerEntity.Database.StudentEntity;
    BaseCustomerEntity.Database.CenterEntity _center = ViewBag.Center as BaseCustomerEntity.Database.CenterEntity;
    var allcenters = ViewBag.AllCenters as List<BaseCustomerEntity.Database.CenterEntity>;
    var list_courses = ViewBag.List_Courses as List<BaseCustomerEntity.Database.NewsEntity>;
    string center = ViewContext.RouteData.Values["basis"]?.ToString();
    string processUrl(string act, string ctrl)
    {
        string url = Url.Action(act, ctrl);

        return $"/{center}{url}";
    }
}
<link href="~/css/animation/animationIsNew.css" rel="stylesheet" />
<script>
    setActiveMenu("home");
</script>

<section class="module" id="dashboard_content">
    <div class="card-header border-b" v-cloak>
        <div class="flex justify-content-between align-items-start">
            <div>
                <h2 class="title">Welcome to <font>@_center.Name</font></h2>
                <p>
                    @_center.Description
                </p>
            </div>
            @if (allcenters != null && allcenters.Count > 1)
            {
                <select id="owncenter" class="p-1 rounded" onchange="changeCenter()" style="display:none; border: solid 2px green; max-width:150px;">
                    @foreach (var ct in allcenters)
                    {
                        <option value="@ct.Code">@ct.Name</option>
                    }
                </select>
                @:<script>$(document).ready(function () { $('#owncenter').show().val('@center') });  var changeCenter = function () { document.location = "/" + $('#owncenter').val() + "/student" }</script>
            }
        </div>
    </div>

    <div id="main-route" class="main-route m-3" v-cloak>
        <ul class="route_holder" id="cid_0" cid="0">
            <li class="route_item start"><a class="route_title">{{formatDatenoYear(startDate)}}</a><span class="route_period"></span></li>
            <li v-for="(obj,index) in (parseInt(period/7) + (period % 7 > 0 ? 1: 0))" class="route_item"
                v-on:click="showWeekLesson(moment(startDate).add(index * 7 - padRoute, 'days'))"
                :class="moment(startDate).add((index + 1) * 7 + 1 - padRoute, 'days') < moment() ? 'passed' : (moment(startDate).add((index + 1) * 7 - 6 - padRoute, 'days') > moment() ? '': 'now')"><a class="route_title">{{formatDatenoYear(moment(startDate).add(index * 7 - padRoute, 'days'))}} - {{formatDatenoYear(moment(startDate).add((index * 7 + 6) > period ? (period - padRoute) : (index * 7 + 6 - padRoute), 'days'))}}</a><span class="route_period">Tuần {{index + 1}}</span></li>
            <li class="route_item end"><a class="route_title">{{formatDatenoYear(endDate)}}</a><span class="route_period"></span></li>
        </ul>
    </div>

    <div class="h4 m-3" v-cloak cloak-holder>
        <i class="fas fa-sync fa-spin"></i> Đang nạp dữ liệu ...
    </div>

    <div class="card-body" v-cloak>
        <div class="box mb-3">
            <div class="heading flex mb-2">
                <h4 class="box-head">Bài học tuần này ({{lesson_week != null ? lesson_week.length : 0}})</h4>
                @*<a href="@processUrl("Index","Course")" title="Xem tất cả" class="link-all">Xem tất cả <i class="ti-arrow-right"></i></a>*@
            </div>
            <div class="box bg-1 padding-15">
                <ul class="box list-scroll">
                    <li v-for="(item,k) in lesson_week">
                        <div class="box radius">
                            <div class="padding-15 inner" v-if="validDate(item)">
                                <a :href="'@processUrl("Detail", "Lesson")/' + item.lessonID + '/' + item.classSubjectID" :title="item.bookName" class="title"><h4 style="color: #47d9a5"><i class="ic ic-readbook-o"></i>{{item.bookName}}</h4></a>
                                <a :href="'@processUrl("Detail", "Lesson")/' + item.lessonID + '/' + item.classSubjectID" :title="item.title" class="title">{{item.title}}</a>
                                <div class="c-bot">
                                    <a :href="'@processUrl("Detail", "Lesson")/' + item.lessonID + '/' + item.classSubjectID" :title="item.className" class="title">{{item.className}}</a>
                                    <p><i class="ti-time"></i>{{formatTime(item.startDate)}}</p>
                                    <div class="flex-row">
                                        <span class="fo fo-check" v-if="item.isLearnt"></span><span class="fo fo-time" v-else></span>{{item.isLearnt ? 'Đã học' : 'Chưa học'}}
                                    </div>
                                </div>
                            </div>
                            <div class="padding-15 inner bg-light" v-else>
                                <a href="javascript:;" :title="item.subjectName" v-on:click="showLockNotify(item)" class="title"><h4 style="color: #47d9a5"><i class="ic ic-readbook-o"></i>{{item.bookName}}</h4></a>
                                <a href="javascript:;" :title="item.title" class="title" v-on:click="showLockNotify(item)">{{item.title}}</a>
                                <div class="c-bot">
                                    <a href="javascript:;" :title="item.className" class="title" v-on:click="showLockNotify(item)">{{item.className}}</a>
                                    <p><i class="ti-time"></i>{{formatTime(item.startDate)}}</p>
                                    <div class="flex-row">
                                        <span class="fo fo-check" v-if="item.isLearnt"></span><span class="fo fo-time" v-else></span>{{item.isLearnt ? 'Đã học' : 'Chưa học'}}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="box mb-3">
                    <div class="heading flex mb-2">
                        <h4 class="box-head">Các khóa học khác</h4>
                        <a href="@processUrl("OtherCourse", "Course")" title="Xem tất cả" class="link-all">Xem tất cả <i class="ti-arrow-right"></i></a>
                    </div>
                    <div class="box bg-1 padding-15 height-245" style="margin-bottom:20px">
                        <ul class="box list-scroll">
                            <li v-for="(item,k) in list_courses">
                                <a v-on:click="DetailProduct(item.ID)" :title="item.Title">
                                    <div class="box radius" style="height:240px;position:relative">

                                        <div class="thumb">
                                            <img src="~/pictures/1797093_orig.gif" id="isNew" v-if="item.IsHot" style=" position: absolute; top: 0px; right: 0px; width: 40px;" />
                                            <img v-if="item.Thumbnail" :src="cacheStatic(item.Thumbnail,256)" alt="" style="width:100%; max-width:initial">
                                        </div>
                                        <div class="padding-15 inner" style="word-break:break-word; white-space: unset; width: 100%; padding-top: 20px;">
                                            <a v-on:click="DetailProduct(item.ID)" :title="item.Title" class="title" style="height:42px; line-height:21px;">
                                                {{item.Title}}
                                            </a>
                                            <div class="c-bot" style="text-align:right; width:133px;position:absolute;bottom:20px">
                                                @*<div>
                                                        <div class="c-right" style="font-size:13px; font-weight:bold"></div>
                                                    </div>
                                                    <div v-if="item.Discount >= 0" class="price font-weight-bold text-danger ml-auto" style="font-size:115%; text-align:right;">
                                                        {{formatPrice(item.Discount) }} VNĐ
                                                    </div>
                                                    <div>
                                                        <span style="color: #999; text-decoration:line-through; font-size:85%;" class="mt-1 mb-1">({{formatPrice(item.Price)}} VNĐ)</span>
                                                        <span v-else class="price font-weight-bold text-danger ml-auto" style="font-size:130%; text-align:right;">{{formatPrice(item.Price)}} VNĐ</span>
                                                    </div>*@
                                                <div>
                                                    <button class="btn btn-danger w-100 mt-2 col-sm-12" style="padding-bottom: 5px" v-on:click="DetailProduct(item.ID)">Xem chi tiết</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="row d-none">
            <div class="col-md-12 margin-b20">
                <div class="heading flex">
                    <h4 class="box-head">Lớp học đã kết thúc</h4>
                    <a href="@processUrl("Index", "Course")" title="Xem tất cả" class="link-all">Xem tất cả <i class="ti-arrow-right"></i></a>
                </div>

                <div class="box bg-1 padding-15" style="margin-bottom: 20px;">
                    <ul class="box list-scroll mb-0">
                        <li class="less-done mb-0 list bg-white" v-for="(item,k) in finish_course" style="width: 165px;">
                            <div class="box radius">
                                <a :href="'@processUrl("Detail", "Course")/' + item.id" class="flex">
                                    <span class="per">{{item.per + '%'}}</span>
                                    <div class="info">
                                        <span>{{item.title}}</span>
                                        <span>{{item.score.toFixed(2)}}%</span>
                                    </div>
                                    @*<span class="arr-right ti-arrow-right"></span>*@
                                </a>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- Modal -->

        <div class="modal fade" id="DetailProduct" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-lg" style="max-width:90%; width:90%; position: absolute; top: 5%; bottom: 5%; left: 50%; margin-left: -45%;" role="document">
                <div class="modal-content h-100">
                    <div class="modal-header">
                        <h3 class="modal-title">{{detailProduct.Title}}</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="container-fluid">
                            <div class="col-sm-9" style="position: absolute; top: 10px; left: 0; right: 0; bottom: 10px; overflow: auto;">
                                @*<div class="form-group">
                                        <img name="thumbnail" />
                                    </div>*@
                                <div class="form-group" name="Content" v-html="detailProduct.Content" style="text-align:justify">
                                    @*{{detailProduct.Content}}*@
                                </div>
                            </div>
                            <div class="col-sm-3" style="position:absolute; right: 0; top: 10px;">
                                <div style=" border: solid 1px #CCC; border-radius:10px;" class="pt-4 pb-3">
                                    <div class="form-group col-sm-12" id="price">
                                        <span class="price font-weight-bold text-danger ml-auto col-sm-12" style="font-size:130%; text-align:right;">
                                            Giá bán: {{formatPrice(detailProduct.Discount)}} <span v-if="detailProduct.Discount > 0" style="color: #999; text-decoration:line-through; font-size:90%;"> ({{formatPrice(detailProduct.Price)}}) VNĐ</span>
                                        </span>
                                    </div>
                                    <div class="form-group col-sm-12" style="text-align:center">
                                        <button type="button" class="btn btn-danger w-100 pt-3 pb-3" v-on:click="BuyNow(detailProduct.ID)" v-if="detailProduct.SttPayment" disabled title="Mua ngay">Mua ngay</button>
                                        <button type="button" class="btn btn-danger w-100 pt-3 pb-3" v-on:click="BuyNow(detailProduct.ID)" v-else title="Mua ngay">Mua ngay</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <style>
        .height-245 {
            height: 268px;
        }

        #main-route {
            overflow: auto;
        }

        .route_holder {
            text-align: left;
            white-space: nowrap;
            height: 2px;
            margin: 50px 0 60px;
            font-size: 0;
        }

        .route_item {
            display: inline-block;
            width: 100px;
            height: 4px;
            overflow: visible;
            margin: 0;
            background: #969696;
            position: relative;
            font-weight: bold;
            opacity: 0.7;
            cursor: pointer;
            font-size: 14px;
        }

            .route_item:hover {
                opacity: 1;
                background: #13a6fb;
            }

                .route_item:hover::after {
                    border-color: #13a6fb;
                }

            .route_item.start {
                width: 50px;
                margin-left: 20px;
            }

            .route_item.passed,
            .route_item.start {
                background: #13a6fb;
            }

                .route_item.start::after,
                .route_item.passed::after {
                    border-color: #13a6fb;
                    background-color: #13a6fb;
                }

            .route_item.now {
                background-color: #D03239;
            }

                .route_item.now::after {
                    background-color: #D03239;
                    border-color: #D03239;
                }

            .route_item.start .route_period {
                left: 10px;
            }

            .route_item.end {
                width: 50px;
                text-align: right;
                /*margin-right: 20px;*/
            }

                .route_item.end .route_title {
                    text-align: right;
                    left: auto;
                    right: 0px;
                }

                .route_item.end .route_period {
                    right: 10px;
                }

                .route_item.end::after {
                    right: -10px;
                    left: auto;
                }

            .route_item::after {
                content: "";
                position: absolute;
                left: 50%;
                right: auto;
                -webkit-transform: translateX(-50%);
                -moz-transform: translateX(-50%);
                -ms-transform: translateX(-50%);
                -o-transform: translateX(-50%);
                transform: translateX(-50%);
                bottom: -12px;
                height: 20px;
                width: 20px;
                border-radius: 50%;
                border: 2px solid #969696;
                background: #969696 url(/images/calendar.png) no-repeat center center;
                -webkit-background-size: 14px auto;
                background-size: 14px auto;
                -webkit-transition: background-color .3s,border-color .3s;
                -moz-transition: background-color .3s,border-color .3s;
                -o-transition: background-color .3s,border-color .3s;
                transition: background-color .3s,border-color .3s;
                top: -8px;
                cursor: pointer;
            }

            .route_item.start::after {
                left: 10px;
            }

            .route_item .route_title {
                bottom: 20px;
                position: absolute;
                left: 50%;
                margin-left: -35px;
                width: 70px;
                text-align: center;
                overflow: hidden;
                max-height: 28px;
                white-space: break-spaces;
                line-height: 14px;
                font-size: 70%;
                font-weight: bold;
            }

            .route_item.start .route_title {
                margin-left: 0;
                left: -6px;
                text-align: left;
            }

            .route_item .route_period {
                top: 20px;
                position: absolute;
                left: 50%;
                margin-left: -25px;
                width: 50px;
                text-align: center;
            }

        .wkIdx {
            user-select: none;
            font-size: 110%;
            color: #007bff;
        }
    </style>

    <script>
    new Vue({
        el: "#main_content",
        mounted() {
            this.getWeekLesson();
            this.getActiveCourse();
            //this.getFinishCourse();
            this.getNewFeed();
            this.list_courses = @Html.Raw(Json.Serialize(list_courses));
            //this.getMyCourse();
        },
        data: {
            lesson_wk: [],
            weekTitle: '',
            startDate: moment(),
            padRoute: 0,
            endDate: moment(),
            period: 0,
            classSubjects: [],
            classes: [],

            lesson_week: [
            ],
            active_course: [
            ],
            list_courses: @Html.Raw(Json.Serialize(list_courses)),
            discussion: [
            ],
            finish_course: [
            ],
            detailProduct: [],
            list_mycourses:[]
        },
        watch: {
            lesson_week: function (val) {
                //console.log(val)
            }
        },
        methods: {
            getActiveCourse() {
                let _that = this
                // Truyen param vào đây
                let _form = new FormData()
                _form.append('today', '@DateTime.Now.ToString("yyyy-MM-dd")')
                let _url = '@processUrl("GetActiveListV2", "Course")'
                axios.post(_url, _form)
                    .then(response => {
                        //console.log("Active")
                        //console.log(response.data)
                        _that.active_course = response.data.data;

                         for (var i = 0; i < this.active_course.length; i++) {
                            var start = moment(this.active_course[i].startDate).toLocaleString();
                            if (this.startDate > moment(start))
                                this.startDate = moment(start);
                            var end = moment(this.active_course[i].endDate).toLocaleString();
                            if (this.endDate < moment(end))
                                this.endDate = moment(end);
                            this.period = this.endDate.diff(this.startDate, 'days')
                        }

                        this.padRoute = moment(this.startDate).day() - 1;
                        console.log(this.period);

                        Vue.nextTick(function () {
                            $('.main-route').scrollLeft($(".route_item").index($('.route_item.now')) * 100 - 400);
                            //console.log($(".route_item").index($('.route_item.now')) * 100);
                        })

                        //debugger
                        //console.log(_that.active_course);
                    }).catch(e => { })
            },
            getFinishCourse() {
                let _that = this
                // Truyen param vào đây
                let _form = new FormData()
                _form.append('today', '@DateTime.Now.ToString("yyyy-MM-dd")')
                _form.append('PageSize', 6)
                _form.append('PageIndex', 1)
                let _url = '@processUrl("GetFinishList", "Course")'

                axios.post(_url, _form)
                    .then(response => {
                        //console.log("Finish")
                        //console.log(response.data)
                        _that.finish_course = response.data.data
                        //console.log(_that.active_course);
                    }).catch(e => { })
            },
            getWeekLesson() {
                let _that = this
                // Truyen param vào đây
                let _form = new FormData()
                _form.append('today', '@DateTime.Now.ToString("yyyy-MM-dd")')
                let _url = '@processUrl("GetThisWeekLesson", "Course")'

                axios.post(_url, _form)
                    .then(response => {
                        //console.log("Week")
                        //console.log(response.data)
                        _that.lesson_week = response.data.data;
                        //console.log(_that.lesson_week);
                    }).catch(e => { })
            },
            getNewFeed() {
                let _that = this
                // Truyen param vào đây
                let _form = new FormData()
                let _url = '@Url.Action("GetLastestMessage", "EasyRealtime")'

                axios.get(_url, _form)
                    .then(response => {
                        //console.log("Week")
                        //console.log(response.data)
                        _that.discussion = response.data.data.messages;
                        //console.log(_that.discussion);
                    }).catch(e => { })},
            formatTime(time) {
                var _time = moment(time);
                if (time == null || !_time._isValid || _time < moment(new Date(2000, 1, 1))) return "-"
                return _time.format("DD/MM/YYYY HH:mm")
            },
            shortenString(str, length) {
                if (str.length <= length)
                    return str;
                return str.substring(0, length) + "...";
            },
            formatShortDate(date) {
                var _date = moment(date);
                if (date == null || !_date._isValid || _date < moment(new Date(2000, 1, 1))) return "-"
                return _date.format("DD/MM/YYYY")
            },
            formatDatenoYear(date) {
                var _date = moment(date);
                if (date == null || !_date._isValid || _date < moment(new Date(2000, 1, 1))) return "-"
                return _date.format("DD/MM")
            },
            validDate(item) {
                var now = moment().toDate();
                var start = moment(item.startDate).toDate()
                var end = moment(item.endDate).toDate();
                var invalid = start > now || end < now
                return (item.type == @BaseCustomerEntity.Database.LESSON_TEMPLATE.LECTURE) || !invalid
            },
            showLockNotify(item) {
                var now = moment().toDate()
                if (moment(item.startDate).toDate() > now)
                    Swal.fire({
                        title: 'Lưu ý',
                        html: 'Bài học sẽ mở lúc ' + this.formatTime(item.startDate),
                        icon: 'warning'
                    });
                else if (moment(item.endDate).toDate() < now)
                {
                    Swal.fire({
                        title: 'Lưu ý',
                        html: 'Bài học đã hết hạn lúc ' + this.formatTime(item.endDate),
                        icon: 'warning'
                    });
                }
                else {
                    document.location = '@processUrl("Detail","Lesson")/' + item.lessonID + '/' + item.classSubjectID
                }
            },
            formatPrice(value) {
                let val = (value / 1).toFixed(0).replace(',', '.')
                return val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
            },
            BuyNow(classid) {
                Swal.fire({
                    title: 'Lưu ý',
                    html: 'Cổng thanh toán đang nâng cấp, vui lòng quay lại sau',
                    icon: 'warning'
                });
                //window.location.href = '@processUrl("Payment", "Home")/' + classid;
            },
            DetailProduct(ID) {
                let _that = this
                let _form = new FormData();
                _form.append('ID', ID);
                let _url = '@processUrl("DetailProduct", "Home")';
                axios.post(_url, _form)
                    .then(response => {
                        //debugger
                        _that.detailProduct = response.data;
                        $("#DetailProduct").modal();
                    }).catch(e => { });
            },
            getMyCourse() {
                 let _that = this
                // Truyen param vào đây
                let _form = new FormData()
                @*_form.append('today', '@DateTime.Now.ToString("dd/MM/yyyy")')*@
                let _url = '@processUrl("GetMyCourse", "Course")'
                axios.post(_url, _form)
                    .then(response => {
                        _that.list_mycourses = response.data.data;
                        //console.log(_that.active_course);
                    }).catch(e => { })
            },
            showWeekLesson(start) {
                    let _that = this
                    let _form = new FormData()
                    var _date = moment(start);
                    if (!_date._isValid || _date < moment(new Date(2000, 1, 1)))
                        _date = moment();
                    date = _date.format("YYYY-MM-DD")
                    _form.append('today', date)
                    _form.append('seekStart', false)
                    let _url = '@processUrl("GetThisWeekLesson", "Course")'

                    axios.post(_url, _form)
                        .then(response => {
                        _that.lesson_wk = response.data.data;
                        }).catch(e => { })


                    this.weekTitle = "Danh sách bài - Tuần " + this.formatShortDate(_date) + " - " + this.formatShortDate(_date.add(6, 'days'));
                    this.$bvModal.show("model_week_lesson")
            },
            hideModal(id) {
                if (id == null)
                    $('.close').click();
                else
                    $('#' + id + ' .close').click();
            },
        }
    });
    </script>
}
@section Modals{
    <b-modal id="model_week_lesson" size="xl" :title="this.weekTitle">
        <div class="modal-body">
            <template v-if="lesson_wk.length > 0">
                <table id="id_table" class="table">
                    <thead>
                        <tr>
                            <th style="width:50px">STT</th>
                            <th>Bài</th>
                            <th>Chương</th>
                            <th>Học liệu</th>
                            <th>Lớp</th>
                            <th>Thời gian mở</th>
                            <th>Điểm</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item,k) in lesson_wk">
                            <td>{{k+1}}</td>
                            <td class="td_hover"><a :href="'@processUrl("Detail","Lesson")'+'/'+ item.lessonID +'/'+ item.classSubjectID" target="_blank">{{item.title}}</a></td>
                            <td>{{item.chapterName}}</td>
                            <td>{{item.bookName}}</td>
                            <td>{{item.className}}</td>
                            <td>{{formatTime(item.startDate)}} - {{formatTime(item.endDate)}}</td>
                            <td :class="item.lastPoint > 0 ? 'text-success':'text-danger'">{{item.lastPoint > 0 ? (item.lastPoint/10).toFixed(1) : '---'}}</td>
                        </tr>
                    </tbody>
                </table>
            </template>
            <template v-else>
                Không có bài
            </template>
        </div>
        <template v-slot:modal-footer="{ ok, cancel}">
            <b-button variant="danger" v-on:click="hideModal()">Đóng</b-button>
        </template>
    </b-modal>
}