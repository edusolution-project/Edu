@{

    Layout = "~/Views/Shared/_LayoutStudent_NewUI_noChat.cshtml";
    var model = ViewBag.Model as BaseCustomerMVC.Models.DefaultModel;
    var currentClass = ViewBag.Class as BaseCustomerEntity.Database.ClassEntity;
    var currentClassSubject = ViewBag.Subject as BaseCustomerEntity.Database.ClassSubjectEntity;
    var currentLesson = ViewBag.Lesson as BaseCustomerEntity.Database.LessonEntity;
    var currentCenter = ViewBag.Center as BaseCustomerEntity.Database.CenterEntity;
    var currentUser = ViewBag.CurrentUser as BaseCustomerEntity.Database.StudentEntity;

    var nextLesson = ViewBag.NextLesson as BaseCustomerEntity.Database.LessonEntity;
    var currentChapter = ViewBag.Chapter as BaseCustomerEntity.Database.ChapterEntity;
    double target = ViewBag.Target ?? 0;
    var failpass = ViewBag.FailPass ?? false;
    ViewData["Title"] = currentLesson.Title;
    string center = ViewContext.RouteData.Values["basis"]?.ToString();
    string processUrl(string act, string ctrl, Object param = null)
    {
        string url = Url.Action(act, ctrl, param);

        return $"/{center}{url}";
    }
}

@if (failpass)
{
    @section Sidebar
    {
        @await Html.PartialAsync("_sideBarStudentNewUI")
    }

    <section id="dashboard_content" class="module">
        <div class="h-100 m-5">
            Bài học sẽ được mở khi hoàn thành điều kiện <b class="text-danger"> @ViewBag.CondChap</b>
        </div>
    </section>
}
else
{
    @section Sidebar
    {
        @await Html.PartialAsync("_sidebarExam_Student")
    }
    <div class="left-col">
        <div class="main-container">
            <!-- Begin Page Content -->
            <div id="exam-student" class="h-100">
            </div>
            <!-- End of Main Content -->
            @*<input type="hidden" name="ExamID" id="ExamID" value="" />*@
        </div>

        <div id="lessonSummary" class="shadow">
        </div>
    </div>
    @section Footer{}
    @section Scripts{
        <style>
            .card-header[style*="display:none"] ~ .card-body {
                top: 0 !important;
            }

            .uimod_exam .card-body {
                padding-bottom: 7px !important;
            }
        </style>
        <script>
            $('.top-menu[for=home] span').text(@(Json.Serialize(currentUser.FullName)))
        </script>
        @*<script src="~/js/minify/detail.fn.min.js?20200615"></script>*@
        @*<script src="~/js/lib/jquery.ui.touch-punch.min.js"></script>*@
        <script src="~/js/lib/sweetalert2@9.js"></script>
        @if (currentLesson.TemplateType == BaseCustomerEntity.Database.LESSON_TEMPLATE.LECTURE)
        {
            <script src="~/js/content-render.js?@DateTime.Now.ToString("yyyyMMddhhmmss")"></script>
        }
        else
        {
            <script src="~/js/content-render-exam.js?@DateTime.Now.ToString("yyyyMMddhhmmss")"></script>
            <style>
                #sidebar, body, html, #exam-teacher {
                    background-color: #e8eff5 !important;
                }

                .right-content {
                    top: 45px !important;
                }

                #QuizNav {
                    display: none;
                    top: 46px;
                    right: 5px;
                    left: calc(50% + 522px) !important;
                    position: fixed;
                    bottom: 10px;
                    overflow: auto;
                }

                #PartNav {
                    border: solid 3px #CCC;
                    background: #FFF;
                    padding: 10px;
                    border-radius: 10px;
                    box-shadow: 1px 2px 7px #999;
                    display: none;
                    top: 46px;
                    width: 150px;
                    right: calc(50% + 522px) !important;
                    position: fixed;
                    overflow: auto;
                }

                .card-body {
                    top: 110px !important;
                }

                .lesson-box {
                    max-width: 1024px;
                    width: 100%;
                    border-left: solid 1px #CCC;
                    border-right: solid 1px #CCC;
                }

                .btn-answer-idx {
                    background: #6c757d;
                }

                .selection {
                    background: #d8dee8 !important;
                }

                .btn-answer-idx.selection {
                    background: #cc7923 !important;
                }

                .examHeader {
                    border: solid 2px #333;
                }

                @@media (max-width: 768px) {
                    .right-content {
                        top: 155px !important;
                        bottom: 50px;
                    }

                    #QuizNav {
                        top: 95px;
                        left: 5px !important;
                        height: 50px;
                    }

                        #QuizNav > div:first-child {
                            display: none;
                        }

                        #QuizNav .quiz-wrapper {
                            white-space: nowrap;
                            flex-wrap: nowrap;
                        }

                            #QuizNav .quiz-wrapper > button {
                                display: block;
                                min-width: 28px;
                            }

                    #PartNav {
                        right: 5px !important;
                        left: 5px;
                        bottom: 5px;
                        top: auto;
                        width: auto;
                        padding: 0px 10px;
                        z-index: 999;
                        overflow: scroll;
                        white-space: nowrap;
                    }

                        #PartNav > div {
                            display: inline-block;
                            margin-right: 7px;
                            border: none !important;
                        }

                            #PartNav > div::before {
                                content: "* ";
                            }
                }
            </style>

        }
        <script>
            var config = {
                container: "exam-student",
                mod: @Html.Raw(currentLesson.TemplateType == BaseCustomerEntity.Database.LESSON_TEMPLATE.EXAM ? "mod.STUDENT_EXAM" : "mod.STUDENT_LECTURE"),
                url: {
                    load: '@processUrl("GetLesson", "Lesson")',
                    current: '@processUrl("GetCurrentExam",  "Exam")',
                    start: '@processUrl("Create", "Exam")',
                    answer: '@processUrl("CreateDetail", "Exam")',
                    removeans: '@processUrl("RemoveDetail", "Exam")',
                    end: '@processUrl("CompleteExam", "Exam")',
                    review: '@processUrl("Review", "Lesson")',
                    oldAnswer: '@processUrl("GetDetailExam", "Exam")',
                    setTarget: '@processUrl("SetTarget", "ClassSubject")'
                },
                type: @currentLesson.TemplateType,
                lesson_id: '@currentLesson.ID',
                class_id: '@currentClass.ID',
                class_subject_id: '@currentClassSubject.ID',
                chap_id: '@currentLesson.ChapterID',
                class_name: '@currentClass.Name',
                class_subject_name: @Json.Serialize(currentClassSubject.CourseName),
                target: 0,
                teacher_target: @currentChapter.BasePoint,
                center_name: '@currentCenter.Name',
                student_name: '@currentUser' == null ? '...................................' : '@currentUser.FullName'
            }
            var widget = new Lesson.onReady(config);
        </script>
        <link href="~/css/detailui.css?20191512" rel="stylesheet" />
    }
}
