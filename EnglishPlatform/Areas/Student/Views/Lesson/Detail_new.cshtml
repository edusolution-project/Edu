@{

    Layout = "~/Views/Shared/_LayoutStudent_NewUI_noChat.cshtml";
    var model = ViewBag.Model as BaseCustomerMVC.Models.DefaultModel;
    var currentClass = ViewBag.Class as BaseCustomerEntity.Database.ClassEntity;
    var currentClassSubject = ViewBag.Subject as BaseCustomerEntity.Database.ClassSubjectEntity;
    var currentLesson = ViewBag.Lesson as BaseCustomerEntity.Database.LessonEntity;
    var nextLesson = ViewBag.NextLesson as BaseCustomerEntity.Database.LessonEntity;
    var currentChapter = ViewBag.Chapter as BaseCustomerEntity.Database.ChapterEntity;
    ViewData["Title"] = currentLesson.Title;
}
@section Sidebar
{
    @await Html.PartialAsync("_sidebarExam_Student")
}
<div class="left-col">
    <div class="main-container">
        <!-- Begin Page Content -->
        <div id="exam-student" class="h-100">
        </div>
        <!-- End of Main Content -->
        @*<input type="hidden" name="ExamID" id="ExamID" value="" />*@
    </div>

    <div id="lessonSummary" class="shadow">
    </div>

</div>
@section Footer{}
@section Scripts{
    <style>
        .card-header[style*="display:none"] ~ .card-body {
            top: 0 !important;
        }

        .uimod_exam .card-body {
            padding-bottom: 7px !important;
        }
    </style>
    <script src="~/js/detail.fn.min.js?20200420"></script>
    <script>
            var config = {
                container: "exam-student",
                mod: @Html.Raw(currentLesson.TemplateType == BaseCustomerEntity.Database.LESSON_TEMPLATE.EXAM ? "mod.STUDENT_EXAM" : "mod.STUDENT_LECTURE"),
                url: {
                    load: '@Url.Action("GetLesson", "Lesson")',
                    current: '@Url.Action("GetCurrentExam", "Exam")',
                    start: '@Url.Action("Create", "Exam")',
                    answer: '@Url.Action("CreateDetail", "Exam")',
                    removeans: '@Url.Action("RemoveDetail", "Exam")',
                    end: '@Url.Action("CompleteExam", "Exam")',
                    review: '@Url.Action("Review","Lesson")'
                },
                type: @currentLesson.TemplateType,
                lesson_id: '@currentLesson.ID',
                class_id: '@currentClass.ID',
                class_subject_id: '@currentClassSubject.ID',
                chap_id: '@currentLesson.ChapterID'
            }
            var widget = new Lesson.onReady(config);
    </script>
    <link href="~/css/detailui.css?20191512" rel="stylesheet" />
}

