@using BaseCustomerEntity.Database;
@{
    ViewData["Title"] = "Lịch dạy";
    Layout = "~/Views/Shared/_LayoutTeacher_NewUI.cshtml";
    var listClass = ViewBag.ClassList as List<ClassEntity>;
    var currentTeacher = ViewBag.CurrentTeacher as TeacherEntity;
    string ZoomUrl = "";
}

<link href="~/css/calendar/core.css" rel="stylesheet" />
<link href="~/css/calendar/daygrid.css" rel="stylesheet" />
<link href="~/css/calendar/list.css" rel="stylesheet" />
<link href="~/css/calendar/timegrid.css" rel="stylesheet" />
<link href="~/js/lib/datetimepicker/jq.datetimepicker.css" rel="stylesheet" />
<script src="~/js/lib/datetimepicker/php-date-formatter.min.js"></script>
<script src="~/js/lib/datetimepicker/jquery.mousewheel.js"></script>
<script src="~/js/lib/datetimepicker/jquery.datetimepicker.js"></script>
@*longht add 2020-01-12*@
<link href="~/js/calendar/css/sweetalert.css" rel="stylesheet" />
<link href="~/js/calendar/css/style.css" rel="stylesheet" />

<script>
    setActiveMenu("calendar");
</script>

<section class="module" id="dashboard_content">
    <div class="card-header">
    </div>
    <div id="schedule" class="pl-3 pr-3"></div>
</section>
<div id="skype-event" class="skype-event">

</div>
<div class="form-event" id="form-event">
    <div class="header-form-event">Sự kiện 
    <button class="btn btn-o btn-close-event" onclick="javascript: document.body.classList.remove('open-add-event'); document.body.classList.remove('open-add-event-class');" style="position: absolute;top: 0;right: 0;bottom: 0;width: 50px;height: 30px;">X</button></div>
    <div class="body-form-event">
        <input type="hidden" name="ID" value="" />
        <div class="item-event">
            <label for="Title">Tiêu đề</label>
            <input type="text" name="Title" class="form-control" placeholder="Nhập tiêu đề">
        </div>
        <div class="item-event">
            <label for="Thời gian">Thời gian</label>
            <div class="group-input-event">
                <input type="text" name="Time" class="form-control timepicker" placeholder="Nhập giờ">
                <input style="margin-left:5px;" type="date" value="" name="Date" class="form-control" placeholder="Nhập tiêu đề">
            </div>
        </div>
        <div class="item-event">
            <label for="Content">Nội dung</label>
            <textarea name="Content" id="Content" style="resize: none;" class="form-control"></textarea>
        </div>
    </div>
    <div class="footer-form-event">
        <button class="btn btn-primary btn-save-event" id="btn-save-event">Lưu</button>
        <button class="btn btn-o btn-cancel-event" id="btn-cancel-event">Hủy</button>
        <button class="btn btn-o btn-delete-event btn-danger" id="btn-delete-event">Xóa</button>
    </div>
</div>

<div class="form-event form-event-class" id="form-event-class">
    <div class="header-form-event">Thêm lớp học trực tuyến  <button class="btn btn-o btn-close-event" onclick="javascript: document.body.classList.remove('open-add-event'); document.body.classList.remove('open-add-event-class');" style="position: absolute;top: 0;right: 0;bottom: 0;width: 50px;height: 30px;">X</button></div>
    <div class="body-form-event">
        <input type="hidden" name="ID" value="" />
        <input type="hidden" name="Status" value="5" />
        <div class="item-event">
            <label for="Title">Tiêu đề</label>
            <input type="text" name="Title" class="form-control" placeholder="Nhập tiêu đề">
        </div>
        <div class="item-event">
            <label>Chọn lớp học </label>
            @if (listClass != null)
            {
                <select name="ClassID" class="form-control">
                    @for(int i = 0; i < listClass.Count; i++)
                    {
                        var item = listClass[i];
                        <option value="@item.ID">
                            @item.Name
                        </option>
                    }
                </select>
            }
        </div>
        <div class="item-event">
            <label for="Thời gian">Thời gian</label>
            <div class="group-input-event">
                <input type="text" name="Time" class="form-control timepicker" placeholder="Nhập giờ">
                <input style="margin-left:5px;" type="date" value="" name="Date" class="form-control" placeholder="Nhập tiêu đề">
            </div>
        </div>
        <div class="item-event">
            <label for="Content">Link lớp học </label>
            @if(currentTeacher != null)
            {
                ZoomUrl = string.IsNullOrEmpty(currentTeacher.ZoomID) ? "" : "https://zoom.us/wc/"+currentTeacher.ZoomID.Replace("-","")+"/join";
            }
            <input type="text" name="UrlRoom" value="@ZoomUrl" class="form-control" placeholder="appear / zoom / skype join">
        </div>
    </div>
    <div class="footer-form-event">
        <button class="btn btn-primary btn-save-event" id="btn-save-event-class">Lưu</button>
        <button class="btn btn-o btn-cancel-event" id="btn-cancel-event-class">Hủy</button>
        <button class="btn btn-o btn-delete-event btn-danger" id="btn-delete-event-class">Xóa</button>
    </div>
</div>

<div id="dark-smooke" class="dark-smooke" onclick="javascript: document.body.classList.remove('open-add-event'); document.body.classList.remove('open-add-event-class');"></div>

@section Scripts{
    @*longht add 2020-01-12*@
    <script src="~/js/calendar/js/jquery.timepicker.min.js"></script>
    <script src="~/js/calendar/js/sweetalert.min.js"></script>
    <script src="~/js/lib/schedule.js"></script>
    <script src="/js/calendar/js/Calendar.js"></script>
    <script>
        var changeTime = function (date) {
            var hours = date.getHours();
            var minute = date.getMinutes();
            if (hours >= 10) {
                if (hours > 12) {
                    var strPhut = minute >= 10 ? minute : `0${minute}`;
                    return `${hours}:${strPhut} PM`;
                }
                else {
                    var strPhut = minute >= 10 ? minute : `0${minute}`;
                    return `${hours}:${strPhut} AM`;
                }
            } else {
                var strPhut = minute >= 10 ? minute : `0${minute}`;
                return `0${hours}:${strPhut} AM`;
            }
        }
    </script>
    <script>
        var EduCalendar = new EduCalendar();
        EduCalendar.useEduTemplateTeacher().loadConfig({
            url: "@Url.Action("GetList","Calendar")",
            type: "teacher",
            isDev: !1,
            height: "parent",
            eventClick: function (info) {
                var eventInfo = info.event;
                getEventDetails(eventInfo.id, eventInfo.extendedProps.skype);
            }
        }).renderCalendar();
        var checkTime = function (date,min,max) {
            var now = new Date();
            var next = date;
            if (max == void 0) return ((next - now) / 6000 > min);
            else return ((next - now) / 6000 > min) && ((next - now) / 6000 < max);
        }
        var getEventDetails = function (id,skype) {
            EduCalendar.schedule.Ajax.PostAny("@Url.Action("GetDetail","Calendar")?id=" + id, null).then(function (data) {
                if (data != null) {
                    var jsonData = JSON.parse(data);
                    if (jsonData.CreateUser == "@User.FindFirst("UserID")?.Value" && jsonData.ScheduleID == null) {
                        if (jsonData.Status != 5) {
                            document.body.classList.add("open-add-event");
                            var startDate = new Date(jsonData.StartDate);
                            var timeEvent = changeTime(startDate);
                            var monthEvent = startDate.getMonth() + 1 >= 10 ? startDate.getMonth() + 1 : `0${startDate.getMonth() + 1}`;
                            var dayEvent = startDate.getDate() >= 10 ? startDate.getDate() : `0${startDate.getDate()}`;
                            var dateEvent = `${startDate.getFullYear()}-${monthEvent}-${dayEvent}`;
                            var formEvent = document.getElementById("form-event");
                            var bodyEvent = formEvent.querySelector(".body-form-event");
                            bodyEvent.querySelector('input[name="ID"]').value = jsonData.ID;
                            if (bodyEvent != null) {
                                var Title = bodyEvent.querySelector("input[name='Title']");
                                if (Title != null) {
                                    Title.value = jsonData.Title;
                                }
                                var Content = bodyEvent.querySelector("textarea[name='Content']");
                                if (Content != null) {
                                    Content.value = jsonData.Content != void 0
                                        ? jsonData.Content
                                        : "";
                                }
                                var time = bodyEvent.querySelector("input[name='Time']");
                                if (time != null) {
                                    time.value = timeEvent;
                                }
                                var date = bodyEvent.querySelector("input[name='Date']");
                                if (date != null) {
                                    date.value = dateEvent;
                                }
                                formEvent.classList.remove("view-form");
                                formEvent.classList.add("edit-form");
                            }
                            if (checkTime(new Date(jsonData.Created), 0)) {
                                // cho phép xóa
                            }
                        } else {
                            //teacher show
                            document.body.classList.add("open-add-event-class");
                            var startDate = new Date(jsonData.StartDate);
                            var timeEvent = changeTime(startDate);
                            var monthEvent = startDate.getMonth() + 1 >= 10 ? startDate.getMonth() + 1 : `0${startDate.getMonth() + 1}`;
                            var dayEvent = startDate.getDate() >= 10 ? startDate.getDate() : `0${startDate.getDate()}`;
                            var dateEvent = `${startDate.getFullYear()}-${monthEvent}-${dayEvent}`;
                            var formEvent = document.getElementById("form-event-class");
                            var bodyEvent = formEvent.querySelector(".body-form-event");
                            bodyEvent.querySelector('input[name="ID"]').value = jsonData.ID;
                            if (bodyEvent != null) {
                                var Title = bodyEvent.querySelector("input[name='Title']");
                                if (Title != null) {
                                    Title.value = jsonData.Title;
                                }
                                var Content = bodyEvent.querySelector("input[name='UrlRoom']");
                                if (Content != null) {
                                    Content.value = jsonData.UrlRoom != void 0
                                        ? jsonData.UrlRoom
                                        : "";
                                }
                                var time = bodyEvent.querySelector("input[name='Time']");
                                if (time != null) {
                                    time.value = timeEvent;
                                }
                                var date = bodyEvent.querySelector("input[name='Date']");
                                if (date != null) {
                                    date.value = dateEvent;
                                }
                                formEvent.classList.remove("view-form");
                                formEvent.classList.add("edit-form");
                            }
                            if (checkTime(new Date(jsonData.Created), 0)) {
                                // cho phép xóa
                            }
                        }
                    }
                    else {
                        if (jsonData.Status == 5) {
                            // student show
                            document.body.classList.add("open-add-event-class");


                        } else {
                            if (jsonData.Skype != "" && jsonData.Skype != null && jsonData.Skype != void 0) {
                                document.body.classList.remove("open-add-event");
                                var time = new Date(jsonData.Created);
                                var Title = `Time : ${time.getDate()}-${time.getMonth() + 1}-${time.getFullYear()}`;

                                var str = `Học viên : ${jsonData.StudentName}`;
                                swal({
                                    title: Title,
                                    type: "info",
                                    text: str,
                                    showCancelButton: true,
                                    confirmButtonClass: "btn-sm btn-primary",
                                    confirmButtonText: "Call skype",
                                    cancelButtonClass: "btn-sm",
                                    cancelButtonText: "close",
                                    closeOnConfirm: false
                                }, function () {
                                    swal.close();
                                    var _skype = jsonData.Skype;
                                    if (jsonData.Skype == null) {
                                        _skype = skype;
                                    }
                                    window.open(`skype:${_skype}?call`, "_blank");
                                });
                            } else {
                                document.body.classList.add("open-add-event");
                                var startDate = new Date(jsonData.StartDate);
                                var timeEvent = changeTime(startDate);
                                var monthEvent = startDate.getMonth() + 1 >= 10 ? startDate.getMonth() + 1 : `0${startDate.getMonth() + 1}`;
                                var dayEvent = startDate.getDate() >= 10 ? startDate.getDate() : `0${startDate.getDate()}`;
                                var dateEvent = `${startDate.getFullYear()}-${monthEvent}-${dayEvent}`;
                                var formEvent = document.getElementById("form-event");
                                var bodyEvent = formEvent.querySelector(".body-form-event");
                                bodyEvent.querySelector('input[name="ID"]').value = jsonData.ID;
                                if (bodyEvent != null) {
                                    var Title = bodyEvent.querySelector("input[name='Title']");
                                    if (Title != null) {
                                        Title.value = jsonData.Title;
                                    }
                                    var Content = bodyEvent.querySelector("textarea[name='Content']");
                                    if (Content != null) {
                                        Content.value = jsonData.Content != void 0
                                            ? jsonData.Content
                                            : "";
                                    }
                                    var time = bodyEvent.querySelector("input[name='Time']");
                                    if (time != null) {
                                        time.value = timeEvent;
                                    }
                                    var date = bodyEvent.querySelector("input[name='Date']");
                                    if (date != null) {
                                        date.value = dateEvent;
                                    }
                                    formEvent.classList.add("edit-form");
                                    formEvent.classList.add("view-form");
                                }
                            }
                        }
                    }
                } else {
                    document.body.classList.add("open-add-event");
                    var event = EduCalendar.schedule.EduCalendar.getEventById(id);
                    var timeEvent = changeTime(event.start);
                    var monthEvent = startDate.getMonth() + 1 >= 10 ? startDate.getMonth() + 1 : `0${startDate.getMonth() + 1}`;
                    var dayEvent = startDate.getDate() >= 10 ? startDate.getDate() : `0${startDate.getDate()}`;
                    var dateEvent = `${startDate.getFullYear()}-${monthEvent}-${dayEvent}`;
                    var formEvent = document.getElementById("form-event");
                    var bodyEvent = formEvent.querySelector(".body-form-event");
                        bodyEvent.querySelector('input[name="ID"]').value = jsonData.ID;
                    if (bodyEvent != null) {
                        var Title = bodyEvent.querySelector("input[name='Title']");
                        if (Title != null) {
                            Title.value = event.Title;
                        }
                        var Content = bodyEvent.querySelector("textarea[name='Content']");
                        if (Content != null) {
                            Content.value = event.Content != void 0
                                ? event.Content
                                : "";
                        }
                        var time = bodyEvent.querySelector("input[name='Time']");
                        if (time != null) {
                            time.value = timeEvent;
                        }
                        var date = bodyEvent.querySelector("input[name='Date']");
                        if (date != null) {
                            date.value = dateEvent;
                        }
                        formEvent.classList.add("view-form");
                    }
                }
            })
        }

    </script>
    <script>
        var formEvent = document.getElementById("form-event");
        document.getElementById("btn-cancel-event").onclick = function () {
             var formEvent = document.getElementById("form-event");
             var bodyEvent = formEvent.querySelector(".body-form-event");
            var Title = bodyEvent.querySelector("input[name='Title']");
            if (Title.value == "" || Title.value == null || Title.value == void 0) {
                document.body.classList.remove("open-add-event");
                return;
            }
            swal({
                title: "Bạn muốn hủy thông tin trên?",
                text: "Dữ liệu bạn đã ghi sẽ bị mất !!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Hủy",
                closeOnConfirm: false
            },
                function () {
                    var inputs = formEvent.querySelectorAll("input");
                    var textarea = formEvent.querySelector("textarea");
                    for (var i = 0; i < inputs.length; i++) {
                        var input = inputs[i];
                        input.value = "";
                    }
                    textarea.value = "";
                    document.body.classList.remove("open-add-event");
                    swal("Hủy!", "Đã hủy thành công.", "success");
                });
        }
        document.getElementById("btn-cancel-event-class").onclick = function () {
             var formEvent = document.getElementById("form-event");
             var bodyEvent = formEvent.querySelector(".body-form-event");
            var Title = bodyEvent.querySelector("input[name='Title']");
            if (Title.value == "" || Title.value == null || Title.value == void 0) {
                document.body.classList.remove("open-add-event");
                return;
            }
            swal({
                title: "Bạn muốn hủy thông tin trên?",
                text: "Dữ liệu bạn đã ghi sẽ bị mất !!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Hủy",
                closeOnConfirm: false
            },
                function () {
                    var inputs = formEvent.querySelectorAll("input");
                    var textarea = formEvent.querySelector("textarea");
                    for (var i = 0; i < inputs.length; i++) {
                        var input = inputs[i];
                        input.value = "";
                    }
                    if (textarea != null) textarea.value = "";
                    document.body.classList.remove("open-add-event");
                    document.body.classList.remove("open-add-event-class");
                    swal("Hủy!", "Đã hủy thành công.", "success");
                });
        }

        document.getElementById("btn-save-event").onclick = function () {
            var formEvent = document.getElementById("form-event");
            var bodyEvent = formEvent.querySelector(".body-form-event");
            var title = "", content = "", startdate = null;
            if (bodyEvent != null) {
                var Title = bodyEvent.querySelector("input[name='Title']");
                if (Title != null) {
                    title = Title.value;
                }
                var Content = bodyEvent.querySelector("textarea[name='Content']");
                if (Content != null) {
                    content = Content.value;
                }
                var time = bodyEvent.querySelector("input[name='Time']");
                var date = bodyEvent.querySelector("input[name='Date']");
                if (date != null && time != null) {
                    var timeEvent = time.value.replace('PM', "").replace("AM", "");
                    startdate = new Date(`${date.value} ${timeEvent}`);
                }
                var newFormData = new FormData();
                var ID = bodyEvent.querySelector("input[name='ID']").value;
                var isUpdate = false;
                if (ID != "") {
                    newFormData.append("ID", ID);
                    isUpdate = true;
                }

                if (title.length < 5) {
                    return swal("", "Tiêu đề không thể bỏ trống.", "warning");
                }

            newFormData.append("Title", title);
            newFormData.append("Content", content);
            newFormData.append("StartDate", `${date.value} ${timeEvent}`);
            newFormData.append("EndDate", `${date.value} ${timeEvent}`);
            newFormData.append("GroupID", '@User.FindFirst("UserID")?.Value');
            EduCalendar.schedule.Ajax.PostAny("@Url.Action("Create","Calendar")", newFormData).then(function (data) {
                if (data != null) {
                    var dataJson = JSON.parse(data);
                    if (dataJson.code == 201) {
                        if (isUpdate) {
                            swal("Update!", "Cập nhật thành công.", "success");
                            EduCalendar.schedule.EduCalendar.getEventById(dataJson.data.ID).remove();
                            var event = {
                                id: dataJson.data.ID,
                                title: dataJson.data.Title,
                                groupid: dataJson.data.GroupID,
                                start: dataJson.data.StartDate
                            };
                            EduCalendar.schedule.EduCalendar.addEvent(event);
                        }
                        else {
                            swal("Tạo mới!", "Đã tạo thành công.", "success");
                            var event = {
                                id: dataJson.data.ID,
                                title: dataJson.data.Title,
                                groupid: dataJson.data.GroupID,
                                start: dataJson.data.StartDate
                            };
                            EduCalendar.schedule.EduCalendar.addEvent(event);
                        }
                        
                    }
                    else
                        swal("Tạo mới!", dataJson.msg, "warning");
                } else {
                     swal("Tạo mới!", "thất bại", "warning");
                }
                document.body.classList.remove("open-add-event");
               
            })
            }

        }


        document.getElementById("btn-save-event-class").onclick = function () {
            var formEvent = document.getElementById("form-event-class");
            var bodyEvent = formEvent.querySelector(".body-form-event");
            var title = "", url = "", startdate = null, classID = "";
            if (bodyEvent != null) {
                var Title = bodyEvent.querySelector("input[name='Title']");
                if (Title != null) {
                    title = Title.value;
                }
                var Url = bodyEvent.querySelector("input[name='UrlRoom']");
                if (Url != null) {
                    url = Url.value;
                }
                var time = bodyEvent.querySelector("input[name='Time']");
                var date = bodyEvent.querySelector("input[name='Date']");
                if (date != null && time != null) {
                    var timeEvent = time.value.replace('PM', "").replace("AM", "");
                    startdate = new Date(`${date.value} ${timeEvent}`);
                }
                var newFormData = new FormData();
                var ID = bodyEvent.querySelector("input[name='ID']").value;
                var isUpdate = false;
                if (ID != "") {
                    newFormData.append("ID", ID);
                    isUpdate = true;
                }
                var group = bodyEvent.querySelector("select[name='ClassID']");
                if (group != null) {
                    classID = group.value;
                }

                if (title.length < 5) {
                    return swal("", "Tiêu đề không thể bỏ trống.", "warning");
                }

                newFormData.append("Title", title);
                newFormData.append("UrlRoom", url);
                newFormData.append("Status", 5);
                newFormData.append("StartDate", `${date.value} ${timeEvent}`);
                newFormData.append("EndDate", `${date.value} ${timeEvent}`);
                newFormData.append("GroupID", classID);
                EduCalendar.schedule.Ajax.PostAny("@Url.Action("Create","Calendar")", newFormData).then(function (data) {
                    if (data != null) {
                        var dataJson = JSON.parse(data);
                        if (dataJson.code == 201) {
                            if (isUpdate) {
                                swal("Update!", "Cập nhật thành công.", "success");
                                EduCalendar.schedule.EduCalendar.getEventById(dataJson.data.ID).remove();
                                var event = {
                                    id: dataJson.data.ID,
                                    title: dataJson.data.Title,
                                    groupid: dataJson.data.GroupID,
                                    start: dataJson.data.StartDate,
                                    status: 5
                                };
                                EduCalendar.schedule.EduCalendar.addEvent(event);
                            }
                            else {
                                swal("Tạo mới!", "Đã tạo thành công.", "success");
                                var event = {
                                    id: dataJson.data.ID,
                                    title: dataJson.data.Title,
                                    groupid: dataJson.data.GroupID,
                                    start: dataJson.data.StartDate
                                };
                                EduCalendar.schedule.EduCalendar.addEvent(event);
                            }
                        
                        }
                        else
                            swal("Tạo mới!", dataJson.msg, "warning");
                    } else {
                         swal("Tạo mới!", "thất bại", "warning");
                    }
                     document.body.classList.remove("open-add-event-class");
                })
            }

        }

        document.getElementById("btn-delete-event").onclick = function () {

            swal({
                title: "Bạn muốn xóa thông tin trên?",
                text: "Dữ liệu bạn đã ghi sẽ bị mất !!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Hủy",
                closeOnConfirm: false
            },
                function () {
                    document.body.classList.remove("open-add-event");
                    var formEvent = document.getElementById("form-event");
                    var bodyEvent = formEvent.querySelector(".body-form-event");
                    var id = bodyEvent.querySelector("input[name='ID']").value;
                    EduCalendar.schedule.Ajax.PostAny("@Url.Action("Delete","Calendar")?id=" + id, null).then(function (data) {
                        if (data == true || data == "true") {

                            var event = EduCalendar.schedule.EduCalendar.getEventById(id);
                            if (event != null) {
                                event.remove();
                                swal("Xóa!", "Đã hủy thành công.", "success");
                            }
                            else {
                                swal("Xóa!", "không thể xóa", "warning");
                            }
                        } else {
                            swal("Xóa!", "không thể xóa", "error");
                        }
                    })
                });


        }

        document.getElementById("btn-delete-event-class").onclick = function () {

            swal({
                title: "Bạn muốn xóa thông tin trên?",
                text: "Dữ liệu bạn đã ghi sẽ bị mất !!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Hủy",
                closeOnConfirm: false
            },
                function () {
                    document.body.classList.remove("open-add-event-class");
                    var formEvent = document.getElementById("form-event-class");
                    var bodyEvent = formEvent.querySelector(".body-form-event");
                    var id = bodyEvent.querySelector("input[name='ID']").value;
                    EduCalendar.schedule.Ajax.PostAny("@Url.Action("Delete","Calendar")?id=" + id, null).then(function (data) {
                        if (data == true || data == "true") {

                            var event = EduCalendar.schedule.EduCalendar.getEventById(id);
                            if (event != null) {
                                event.remove();
                                swal("Xóa!", "Đã hủy thành công.", "success");
                            }
                            else {
                                swal("Xóa!", "không thể xóa", "warning");
                            }
                        } else {
                            swal("Xóa!", "không thể xóa", "error");
                        }
                    })
                });


        }

        if ($ != void 0 && $('.timepicker') != void 0) {
            $('.timepicker').timepicker({
                timeFormat: 'HH:mm p',
                interval: 15,
                minTime: '0',
                maxTime: '11:00pm',
                defaultTime: '9',
                startTime: '01:00',
                dynamic: false,
                dropdown: true,
                scrollbar: false
            });
        }
    </script>
    <script>

    </script>
}
