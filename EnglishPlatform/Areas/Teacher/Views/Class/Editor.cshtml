@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    var Data = ViewBag.ClassSbj as BaseCustomerEntity.Database.ClassSubjectEntity;
    var _class = ViewBag.Class as BaseCustomerEntity.Database.ClassEntity;

    ViewData["Title"] = Data.CourseName;
    //var listChapter = ViewBag.Chapter as List<BaseCustomerEntity.Database.ChapterEntity>;
    var user = ViewBag.User as string;
    string center = ViewContext.RouteData.Values["basis"]?.ToString();
    string processUrl(string act, string ctrl, Object param = null)
    {
        string url = Url.Action(act, ctrl, param);

        return $"/{center}{url}";
    }
    var templateType = Data.TypeClass == BaseCustomerEntity.Database.CLASSSUBJECT_TYPE.EXAM ? BaseCustomerEntity.Database.LESSON_TEMPLATE.EXAM : BaseCustomerEntity.Database.LESSON_TEMPLATE.LECTURE;
}

<style>
    .red-color {
        color: #D03239 !important;
    }

    .red-bg {
        background-color: #D03239 !important;
    }

    .blue-color {
        color: #0194e4 !important;
    }

    .blue-bg {
        background-color: #0194e4 !important;
    }

    .green-color {
        color: #00bf7a !important;
    }

    .green-bg {
        background-color: #00bf7a !important;
    }

    .yellow-color {
        color: #F7971E !important;
    }

    .yellow-bg {
        background-color: #F7971E !important;
    }
</style>


@*<script>
        activeTab = "curriculum";
        activeSub = "modules";
    </script>*@

<div class="left-col" style="scroll-behavior: smooth;">
    <div class="page-title">
        <h1><a href="@processUrl("Detail","Class")/@_class.ID" class="blue-color">@_class.Name</a> / @Data.CourseName</h1>
    </div>
    <div class="main-container">
        <div class="main-content" data-spy="scroll" data-target="#tableContents">
            <div class="modules-wrapper mb-5">
                <div class="p-3">
                    <i class="fas fa-circle-notch fa-spin"></i> Loading ...
                </div>
            </div>
        </div>
    </div>

    <i class="fas fa-angle-double-up" onclick="fnbackToTop()" id="backToTop"></i>
</div>


@section Modals {

    <div class="modal fade edit-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="chapterModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Thêm chương</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="@processUrl("CreateOrUpdateChapter","Class")" name="chapterForm" enctype="multipart/form-data" method="post">
                        <input type="hidden" name="ID" />
                        <input type="hidden" name="ClassSubjectID" id="ClassSubjectID" value="@Data.ID" />
                        <div class="form-group">
                            <label class="col-form-label">Tên chương:</label>
                            <input type="text" class="form-control" name="Name" required>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Chương gốc:</label>
                            <select name="ParentID" class="form-control">
                                <option value="0">------</option>
                                @{
                                    for (int i = 0; ViewBag.Chapter != null && i < ViewBag.Chapter.Count; i++)
                                    {
                                        <option value="@ViewBag.Chapter[i].ID">@ViewBag.Chapter[i].Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Mô tả:</label>
                            <textarea class="form-control" name="Description" rows="3"></textarea>
                        </div>
                        <div class="row chooseOrder">
                            <div class="form-group col-md-12">
                                <label class="col-form-label">Thứ tự:</label>
                                <input type="text" class="form-control" name="Order" placeholder="Thứ tự hiển thị" value="---">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" onclick="return Submit('chapterForm', '@processUrl("CreateOrUpdateChapter","Class")','update' , AddChapterCallback)">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" id="lessonModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Thêm bài</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="@processUrl("CreateOrUpdateLesson","Class")" name="lessonForm" enctype="multipart/form-data" method="post">
                        <input type="hidden" name="ID" />
                        <input type="hidden" name="ChapterID" value="" />
                        <input type="hidden" name="ClassID" id="ClassID" value="@Data.ClassID" />
                        <input type="hidden" name="CourseID" id="CourseID" value="@Data.CourseID" />
                        <input type="hidden" name="ClassSubjectID" id="ClassSubjectID" value="@Data.ID" />
                        <div class="row">
                            <div class="form-group col-md-12">
                                <input type="hidden" name="TemplateType" value="@templateType" class="d-none" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label class="col-form-label">Tiêu đề:</label>
                                <input type="text" class="form-control" name="Title" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label class="col-form-label">Thời gian làm bài (phút):</label>
                                <input type="text" class="form-control" name="Timer" placeholder="0 = không giới hạn">
                            </div>
                            <div class="form-group col-md-6" for="examOnly">
                                <label class="col-form-label">Giới hạn số lượt làm bài:</label>
                                <input type="text" class="form-control" name="Limit" placeholder="0 = không giới hạn" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6" for="examOnly">
                                <label class="col-form-label">Kiểu bài kiểm tra:</label>
                                <select name="Etype" class="form-control" onchange="showCoefficient(this)" required>
                                    <option value="@BaseCustomerEntity.Database.LESSON_ETYPE.PRACTICE">Hệ số 1</option>
                                    <option value="@BaseCustomerEntity.Database.LESSON_ETYPE.WEEKLY">Giữa kì</option>
                                    <option value="@BaseCustomerEntity.Database.LESSON_ETYPE.CHECKPOINT">Cuối kì</option>
                                </select>
                            </div>

                            <div class="form-group col-md-6" for="examOnly">
                                <label class="col-form-label">Hệ số:</label>
                                <input type="text" class="form-control" name="Multiple" id="Multiple" placeholder="> 0" value="1" required readonly="readonly">
                            </div>
                        </div>
                        <div class="row chooseOrder" style="display:none">
                            <div class="form-group col-md-12">
                                <label class="col-form-label">Thứ tự:</label>
                                <input type="text" class="form-control" name="Order" placeholder="Thứ tự bài giảng">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" onclick="return Submit('lessonForm', '@processUrl("CreateOrUpdateLesson","Class")','update' , AddLessonCallback)">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <!--    Hòa thêm 8/7/2020    -->
    <div class="modal fade" role="dialog" id="copyLessonModel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="titleClone">Nhân bản </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="@processUrl("CopyLesson","ClassSubject")" name="copyLessonForm" enctype="multipart/form-data" method="post">
                        <input type="hidden" name="LessonID" value="" />
                        <input type="hidden" name="CourseID" value="@Data.ID" />
                        <input type="hidden" name="ChapterID" value="" />

                        <div class="row">
                            <div class="form-group col-md-12">
                                <label class="col-form-label">Tiêu đề:</label>
                                <input type="text" class="form-control" name="Title" required>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-12">
                                <label class="col-form-label">Chương:</label>
                                <select name="ParentID" id="ParentID" class="form-control">
                                    <option value="0">------</option>
                                    @*@{ for (int i = 0; ViewBag.Chapter != null && i < ViewBag.Chapter.Count; i++)
                                            {
                                                <option value="@ViewBag.Chapter[i].ID">@ViewBag.Chapter[i].Name</option>
                                            }
                                        }*@
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" onclick="return CloneLesson()">Lưu thay đổi</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" id="joinChapterModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Ghép nội dung</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="#" name="joinChapterModal" enctype="multipart/form-data" method="post">
                        <input type="hidden" name="ID" />
                        <input type="hidden" name="ChapterID" value="" />
                        <div class="form-group">
                            <label class="col-form-label">Ghép Chương: </label><br />
                            <label name="rootItem"></label><br />
                            <label class="col-form-label"> với: </label>
                            <select name="JoinChapter" class="form-control" required></select> <br />
                            <label class="col-form-label">Tạo chương mới</label>
                            <input type="checkbox" name="CreateNewChapter" id="CreateNewChapter" onchange="IsCreateNewChapter(this)" /> <br />
                            <label class="col-form-label hide" id="NewLable"> Tên chương mới: </label>
                            <input type="text" class="hide" name="newName" id="newName" placeholder="Tên chương mới" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" onclick="return Submit('joinChapterModal', '@processUrl("JoinChapter","Class")','join' , AddChapterCallback)">Lưu</button>
                </div>
            </div>
        </div>
    </div>
    <!-- End -->

    <div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" id="joinLessonModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Ghép nội dung</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="#" name="joinLessonModal" enctype="multipart/form-data" method="post">
                        <input type="hidden" name="ID" />
                        <input type="hidden" name="ChapterID" value="" />
                        <div class="form-group">
                            <label class="col-form-label">Ghép bài: </label><br />
                            <label name="rootItem"></label><br />
                            <label class="col-form-label"> với: </label>
                            <select name="JoinLesson" class="form-control" required></select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" onclick="return Submit('joinLessonModal', '@processUrl("JoinLesson","Class")','join' , MergeLessonCallback)">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    @*<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true" id="lessonFrameModal">
            <div class="modal-dialog modal-lg w-100 m-0" style="max-width:100%; display: flex; height: 100%;">
                <div class="modal-content">
                    <div class="modal-header p-2">
                        <h5 class="modal-title" id="modalTitle">Cập nhật nội dung</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeLessonFrame()">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body p-0">
                        <iframe width="100%" height="100%" style="display: flex; border:none;" src=""></iframe>
                    </div>
                    <div class="modal-footer p-2 d-none">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeLessonFrame()">Đóng</button>
                    </div>
                </div>
            </div>
        </div>*@
}

<style>
    .nav-item {
        position: relative;
    }

    .collapse-item {
        position: relative;
        display: block;
    }
</style>

<script>

    var chapters = [];
    var lessons = [];
    var wrapper = $('#course-detail ul');
    var modulesBody = $('.modules-wrapper');

    var RenderLesson = function (item) {
        var oldItem = $('#' + item.ID);
        var i = '@Data.ID';
        var rowData = $("<div>", { "class": "modules-content-item row item-row ml-0", id: item.ID });
        var leftPart = $("<div>", { "class": "col-md-10" });
        var rightPart = $("<div>", { "class": "col-md-2 text-right row-action" });
        leftPart.append($("<span>", { "class": "modules-content-item-icon" + (item.TemplateType === 2 ? (" assignment atype" + item.Etype) : "") }));
        rightPart.append();
        var itemData = $("<div>", { "class": "modules-content-item-info" });
        itemData.append($("<a>", {
            "class": "action-link",
            "name": "Title",
            "href": "@processUrl("Detail", "Lesson")/" + item.ID + "/@Data.ID",
            "target": "_blank",
            "lid": item.ID,
            "text": item.Title,
            //"onclick": "openLesson(this)",
            //"data-toggle": 'modal',
            //"data-target": "#lessonFrameModal"
        }));

        if (item.Description != null) {
            itemData.append($("<span>", { "class": "description", "text": item.Description }));
        }

        leftPart.append(itemData);

        //debugger
        rightPart.append($("<i>", {
            "class": "far fa-edit", "data-toggle": "modal", "data-target": "#lessonModal", "data-placement": "top", "title": "Sửa", "onclick": "return EditLesson(this,'" + item.ID + "'); return false;",
            "cid": item.ChapterID,
            "type": item.TemplateType,
            "point": item.Point,
            "timer": item.Timer,
            "etype": item.Etype,
            "mul": item.Multiple,
            "limit": item.Limit,
            "order": item.Order + 1
        }));
        rightPart.append($("<i>", { "class": "fas fa-copy", "data-toggle": "modal", "data-target": "#copyLessonModel", "data-placement": "top", "title": "Nhân bản", "onclick": "showCloneLesson('" + item.ID + "',this);return false" }));
        rightPart.append($("<i>", { "class": "fas fa-first-aid", "data-toggle": "modal", "data-target": "#joinLessonModal", "data-placement": "top", "title": "Ghép", "onclick": "JoinLesson(this,'" + item.ID + "'); return false;" }));
        rightPart.append($("<i>", { "class": "fas fa-trash", "data-toggle": "tooltip", "data-placement": "top", "title": "Xóa", "onclick": "DeleteLesson('" + item.ID + "'); return false;" }));
        rowData.append(leftPart);
        rowData.append(rightPart);

        if (oldItem.length > 0) {
            var oldPos = parseInt(oldItem.find('[order]').attr('order'));
            if (oldPos != item.Order + 1) { //change pos
                parent = oldItem.parent();
                oldItem.remove();
                parent.find('> .item-row:eq(' + item.Order + ')').before(rowData);
                startchange = item.Order + 1;
                //console.log(parent.find('> .item-row:gt(' + item.Order + ')'));
                parent.find('> .item-row:gt(' + item.Order + ')').each(function (i, row) {
                    startchange++;
                    $(row).find('[order]').attr('order', startchange);
                })
            }
            else {
                oldItem.after(rowData);
                oldItem.remove();
            }
        }
        else {

            if (item.ChapterID == null) {
                modulesBody.append(rowData);
            }
            else {
                parent = modulesBody.find(".modules[id=" + item.ChapterID + "] .modules-content:first");
                parent.append(rowData);
            }
        }
    }

    var RenderChapter = function (chapter) {
        var parent = modulesBody;

        var oldChap = $('#' + chapter.ID);

        if (chapter.ParentID == null) {
            chapter.ParentID = "0";
        }

        var chapContent = $("<div>", { "id": chapter.ID, "pid": chapter.ParentID, "class": "modules" });
        var chapTitle = $("<div>", { "class": "modules-title row item-row blue-color", "data-target": "#" + chapter.ID + " .modules-content:first" });
        var title_cPart = $("<div>", { "class": "col-md-10" });
        var title_ePart = $("<div>", { "class": "col-md-2 text-right row-action pr-0" })
        title_cPart.append($("<i>", { "class": "fa pr-1 fa-caret-down fa-caret-right", "onclick": "toggleCollapse(this, '" + chapter.ID + "')" }))
            .append($("<a>", {
                "class": "action-link",
                "name": "Name",
                "text": chapter.Name,
                "onclick": "toggleCollapse(this, '" + chapter.ID + "')",
                "value": chapter.ID
            }));
        title_cPart.append($("<input>", { "type": "hidden", "name": "Description", "value": chapter.Description }));
        title_cPart.append($("<input>", { "type": "hidden", "name": "Order", "value": chapter.Order + 1 }));
        title_ePart.append($("<i>", { "class": "far fa-folder", "data-toggle": "modal", "data-target": "#chapterModal", "data-placement": "top", "title": "Thêm chương", "onclick": "AddChapter('" + chapter.ID + "'); return false;" }));
        title_ePart.append($("<i>", { "class": "far fa-file", "data-toggle": "modal", "data-target": "#lessonModal", "data-placement": "top", "title": "Thêm bài", "onclick": "AddLesson('" + chapter.ID + "');" }));
        title_ePart.append($("<i>", { "class": "fas fa-edit", "data-toggle": "modal", "data-target": "#chapterModal", "data-placement": "top", "title": "Sửa", "pid": chapter.ParentID, "onclick": "EditChapter(this, '" + chapter.ID + "'); return false;" }));
        title_ePart.append($("<i>", { "class": "far fa-clone", "title": "Nhân bản chương", "onclick": "CloneChapter('" + chapter.ID + "',this); return false;" }));
        title_ePart.append($("<i>", { "class": "fas fa-first-aid", "data-toggle": "modal", "data-target": "#joinChapterModal", "data-placement": "top", "title": "Ghép", "onclick": "JoinChapter(this,'" + chapter.ID + "'); return false;" }));
        title_ePart.append($("<i>", { "class": "far fa-trash-alt", "data-toggle": "tooltip", "data-placement": "top", "title": "Xóa", "onclick": "DeleteChapter('" + chapter.ID + "')" }));
        title_ePart.append($("<i>", { "class": "far fa-minus-square show", "title": "Thu gọn", "onclick": "toggleCollapse(this, '" + chapter.ID + "')" }));

        chapTitle.append(title_cPart);
        chapTitle.append(title_ePart);

        if (oldChap.length > 0) {
            var oldPos = parseInt(oldChap.find('input[name=Order]').val());
            var oldParentID = oldChap.attr('pid');

            if (oldParentID != chapter.ParentID) //change root
            {
                var oldParent = oldChap.parent();

                if (chapter.ParentID === "0") {
                    modulesBody.append(oldChap);
                }
                else {
                    parent = modulesBody.find(".modules[id=" + chapter.ParentID + "] .modules-content:first");
                    if (parent.find('> .item-row').length > 0) //has lesson => add before lesson
                        parent.find('> .item-row:first').before(oldChap)
                    else
                        parent.append(oldChap);
                }

                //change order for old holder
                startchange = oldPos;
                oldParent.find('> .modules:gt(' + (oldPos - 1) + ')').each(function (i, row) {
                    startchange++;
                    $(row).find('input[name=Order]').val(startchange);
                })
            }

            oldChap.find('> .modules-title').after(chapTitle);
            oldChap.find('> .modules-title:first').remove();

            if (oldPos != chapter.Order + 1) { //change order
                parent = oldChap.parent();

                //console.log(oldChap);
                startchange = chapter.Order + 1;
                console.log(oldPos);
                if (oldPos < chapter.Order + 1) {
                    parent.find('> .modules[id!=0]:eq(' + chapter.Order + ')').after(oldChap);
                    startchange = oldPos;
                }
                else
                    parent.find('> .modules[id!=0]:eq(' + chapter.Order + ')').before(oldChap);
                var pos = startchange;
                oldChap.find('input[name=Order]').val(pos);
                console.log(parent.find('> .modules[id!=0]:gt(' + startchange + ')'));
                parent.find('> .modules[id!=0]:gt(' + startchange + ')').each(function (i, row) {
                    pos++;
                    $(row).find('input[name=Order]').val(pos);
                })
            }
            else {
                //oldChap.after(chapContent);
                //oldChap.remove();
            }
        }
        else {

            //console.log(chapter.ParentID);
            chapContent.append(chapTitle);

            var contentHolder = $("<div>", { "class": "modules-content collapse show" });
            chapContent.append(contentHolder);

            //add missing child
            contentHolder.append(
                modulesBody.find('.modules[pid=' + chapter.ID + ']')
            );

            if (chapter.ParentID === "0") {
                modulesBody.append(chapContent);
            }
            else {
                parent = modulesBody.find(".modules[id=" + chapter.ParentID + "] .modules-content:first");
                if (parent.length > 0) {
                    if (parent.find('> .item-row').length > 0) //has lesson => add before lesson
                        parent.find('> .item-row:first').before(chapContent)
                    else
                        parent.append(chapContent);
                }
                else {
                    modulesBody.append(chapContent);
                }
            }
        }
    }

    function LoadData() {
        chapters = [];
        lessons = [];

        $.ajax({
            type: "POST",
            url: '@processUrl("GetFullStructure", "ClassSubject")',
            data: { ID: "@Data.ID" },
            dataType:"json",
            success: function (data) {
                //debugger
                hideModal();
                modulesBody.html("");

                chapters = data.Data.Chapters;
                lessons = data.Data.Lessons;

                var rootContent = $("<div>", { "id": "0", "pid": "0", "class": "modules" });
                var rootLessons = $("<div>", {"class": "modules-content collapse show" });

                var rootAction = $("<div>", { "class": "modules-title row item-row blue-color" });
                title_cPart = $("<div>", { "class": "col-md-12" });
                title_cPart.append($("<i>", { "class": "far fa-folder mr-1 mt-1", "data-toggle": "modal", "data-target": "#chapterModal", "data-placement": "top", "title": "Thêm Chương", "onclick": "AddChapter('0'); return false;" }));
                title_cPart.append($("<span>", { "class": "align-top", "text": "Thêm chương", "data-toggle": "modal", "data-target": "#chapterModal", "data-placement": "top", "title": "Thêm Chương", "onclick": "AddChapter('0'); return false;" }));
                title_cPart.append($("<i>", { "class": "far fa-file ml-5 mr-1 mt-1", "data-toggle": "modal", "data-target": "#lessonModal", "data-placement": "top", "title": "Thêm bài kiểm tra", "onclick": "AddLesson('0'); return false;" }));
                title_cPart.append($("<span>", { "class": "align-top", "text": "Thêm bài kiểm tra", "data-toggle": "modal", "data-target": "#lessonModal", "data-placement": "top", "title": "Thêm bài kiểm tra", "onclick": "AddLesson('0'); return false;" }));

                rootAction.append(title_cPart);
                rootContent.append(rootAction);

                rootContent.append(rootLessons);
                modulesBody.append(rootContent);

                $('select#ParentID option:gt(0)').remove();

                if (chapters.length > 0) {
                    for (i = 0; i < chapters.length; ++i) {
                        var chapter = chapters[i];


                        //console.log(chapter);

                        if ($('select#ParentID option[value=' + chapter.ID + ']').length == 0) {
                            if (chapter.ParentID == "0") {
                                $('select#ParentID').append($("<option>", { value: chapter.ID, text: chapter.Name, "prt": chapter.ParentID }));
                            }
                            else {
                                if ($('select#ParentID option[prt=' + chapter.ParentID + ']').length == 0)
                                    $('select#ParentID option[value=' + chapter.ParentID + ']').after($("<option>", { value: chapter.ID, text: chapter.Name, "prt": chapter.ParentID }));
                                else
                                    $('select#ParentID option[prt=' + chapter.ParentID + ']').after($("<option>", { value: chapter.ID, text: chapter.Name, "prt": chapter.ParentID }));
                            }

                        }


                        RenderChapter(chapter);
                    }
                }

                if (lessons.length > 0) {
                    for (j = 0; j < lessons.length; j++) {
                        var item = lessons[j];
                        RenderLesson(item);
                    }
                }
                $('.row-action i').tooltip();

                renderTableContents();
            },
            error: function() {
            }
        });
    };

    function ChangeGrade(obj, wrapper) {
        var subject = $(obj).val();
        var grade = $(wrapper).val();
        $(wrapper).find('option[for!=' + subject + ']').hide();
        $(wrapper).find('option[for=' + subject + ']').show();
        if ($(wrapper).find('option[for!=' + subject + '][value=' + grade + ']:visible').length == 0) {
           $(wrapper).val($(wrapper).find('option[for=' + subject + ']:first').attr('value'));
        }
    }

    function ReloadCourse(res)
    {
        if (res != null) {
            var result = $.parseJSON(res);
            if (result.Error != null) {
                alert(result.Error);
                return false;
            }
        }
        document.location = document.location;
    }

    function MergeLessonCallback(res) {
        if (res != null) {
            var result = $.parseJSON(res);
            if (result.Error != null) {
                alert(result.Error);
                return false;
            }
            else {
                $('.modules-content-item#' + result.Del).remove();
                hideModal();
            }
        }
    }

    function AddLessonCallback(res) {
        //debugger
        if (res != null) {
            var result = $.parseJSON(res);
            if (result.Error != null) {
                alert(result.Error);
                return false;
            }
            else {
                lesson = result.Data;
                RenderLesson(lesson);

                hideModal();
            }
        }
    }

    function AddChapterCallback(res) {
        if (res != null) {
            var result = $.parseJSON(res);
            //console.log(result);
            if (result.Error != null) {

                alert(result.Error);
                return false;
            }
            else {

                chapter = result.Data;
                ///// jquerify the DOM object 'o' so we can use the html method
                //$(o).html(chapter.Name);
                //$("#ParentID").append(o);
                //RenderChapter(chapter);



                LoadData();
                hideModal();
            }
        }
    }

    function CloneChapterCallBack(res) {
        if (res != null) {
            var result = $.parseJSON(res);
            //console.log(result);
            if (result.Error != null) {
                alert(result.Error);
                return false;
            }
            else {
                alert("Đã nhân bản chương");
                chapter = result.Data;
                ////console.log("chapter " + chapter.ID);
                //$('[name=chapterForm] [name=ParentID] option[value=' + chapter.ID + ']').before($('<option>', { value: chapter.ID, text: chapter.Name })).remove();
                //var o = new Option(chapter.Name, chapter.ID);
                ///// jquerify the DOM object 'o' so we can use the html method
                //$(o).html(chapter.Name);
                //$("#ParentID").append(o);
                //RenderChapter(chapter);
                LoadData();
                hideModal();
                $('select#ParentID').append($("<option>", { value: chapter.ID, text: chapter.Name }));
            }
        }
    }

    function EditChapter(obj, ID) {
        var modal = $("#chapterModal");
        var modalTitle = modal.find("#modalTitle");
        modalTitle.text("Cập nhật thông tin");
        var name = $(obj).parent().parent().find("[name=Name]").text().trim();
        var description = $(obj).parent().parent().find("[name=Description]").val().trim();
        var order = $(obj).parent().parent().find("[name=Order]").val().trim();
        var parent = $(obj).attr("pid");

        //console.log(obj);
        modal.find("[name=Name]").val(name);
        modal.find("[name=Description]").val(description);
        modal.find("[name=ParentID]").val(parent);
        modal.find("[name=ParentID] option[value=" +  ID + "]").hide();
        modal.find("[name=Order]").val(order);
        modal.find("[name=ID]").val(ID);
    }

    function AddChapter(parentchap) {
        var modal = $("#chapterModal");
        var modalTitle = modal.find("#modalTitle");
        modalTitle.text("Thêm Chương");
        modal.find("[name=Name]").val("");
        modal.find("[name=ID]").val("");
        modal.find("[name=Order]").val("---");
        modal.find("[name=Description]").val("");
        modal.find("[name=ParentID]").val(parentchap);
    }

    function DeleteChapter(ID) {
        Swal.fire({
            title: 'Xác nhận xóa?',
            text: "Bạn sẽ không thể khôi phục lại dữ liệu này!",
            icon: 'warning',
            showCancelButton: true,
            focusConfirm: false,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#CCC',
            cancelButtonText: 'Hủy',
            confirmButtonText: 'Đồng ý xóa!'
        }).then((result) => {
            if (result.value) {
                ExcuteOnlyItem(ID, '@processUrl("RemoveChapter", "Class")', DeleteChapterCallback);
            }
        })
    }

    function AddLesson(ID)
    {
        //debugger
        var modal = $("#lessonModal");
        var modalTitle = modal.find("#modalTitle");
        modalTitle.text("Thêm bài");
        modal.find(".chooseOrder").hide();
        modal.find("[name=Title]").val("");
        modal.find("[name=ChapterID]").val(ID);
        modal.find("[name=ID]").val("");
        modal.find("[name=Point]").val("0");
        modal.find("[name=Timer]").val("0");
        SelectTemplate("@templateType");
        return false;
    }

    function EditLesson(obj, ID)
    {
        //debugger
        var modal = $("#lessonModal");
        var modalTitle = modal.find("#modalTitle");
        modal.find(".chooseOrder").show();
        modalTitle.text("Cập nhật thông tin");
        var title = $(obj).parent().parent().find("[name=Title]").text().trim();
        var chapter = $(obj).attr("cid");
        var type = $(obj).attr("type");
        var point = $(obj).attr("point");
        var timer = $(obj).attr("timer");
        var limit = $(obj).attr("limit");
        var multiple = $(obj).attr("mul");
        var etype = $(obj).attr("etype");
        var order = $(obj).attr("order");

        modal.find("[name=Title]").val(title);
        modal.find("[name=ChapterID]").val(chapter);
        modal.find("[name=ID]").val(ID);
        modal.find("[name=Point]").val(point);
        modal.find("[name=Timer]").val(timer);
        modal.find("[name=Limit]").val(limit);
        modal.find("[name=Multiple]").val(parseInt(etype) + 1);
        modal.find("[name=Etype]").val(etype);
        modal.find("[name=Order]").val(order);
        //modal.find("[name=coefficient]").val(parseInt(etype)+1);
        //debugger
        SelectTemplate(type);
        return false;
    }

    function JoinLesson(obj, ID) {
        //debugger
        var modal = $("#joinLessonModal");
        modal.find("[name=ID]").val(ID);
        var currentItem = $(obj).parent().parent();

        modal.find("[name=rootItem]").text($(currentItem).find("[name=Title]").text());
        var lessonholder = modal.find("[name=JoinLesson]");
        $(lessonholder).empty();
        $(currentItem).siblings().each(function () {
            var id = $(this).find("[lid]").attr("lid");
            $(lessonholder).append($("<option>", {"value": id, "text": $(this).find("[name=Title]").text()}));
        });

        return false;
    }

    function DeleteLesson(ID) {
        Swal.fire({
            title: 'Xác nhận xóa?',
            text: "Bạn sẽ không thể khôi phục lại dữ liệu này!",
            icon: 'warning',
            showCancelButton: true,
            focusConfirm: false,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#CCC',
            cancelButtonText: 'Hủy',
            confirmButtonText: 'Đồng ý xóa!'
        }).then((result) => {
            if (result.value) {
                ExcuteOnlyItem(ID, '@processUrl("RemoveLesson", "Class")', DeleteLessonCallback);
            }
        })
    }

    function CloneLesson(ID) {
        ExcuteOnlyItem(ID, '@processUrl("CopyLesson", "Class")', LoadData);
    }
    /*
     *Hòa thêm 10/7/2020
     */

    function CloneChapter(ID,_this) {
        var data = new FormData();
        data.append("ChapID", ID);
        _url = "@processUrl("CopyChapter", "Class")";
        _method = "POST";
        fn = CloneChapterCallBack;
        Ajax(_url, "POST", data, true).then(function (res) {
            if (fn != void 0) fn(res);
            return false;
        });
        //debugger
    }

    function showCloneLesson(id, _this) {
        $("#copyLessonModel").modal();
        var modal = $("#copyLessonModel");
        var title = $(_this).parent().parent().find("[name=Title]").text().trim();
        var chapter_ID = $(_this).parent().parent().parent().parent().children().find("[name=Name]").attr("value");
        var optionValue = chapter_ID;
        $("#ParentID").val(optionValue).find("option[value=" + optionValue + "]").attr('selected', true);

        modal.find("[name=LessonID]").val(id);
        modal.find("[name=Title]").val(title);
        //debugger
        return false;
    }

    function CloneLesson() {
        var modal = $("#copyLessonModel");
        var title = modal.find("[name=Title]").val();
        var id = modal.find("[name=LessonID]").val();
        var chapterid = document.getElementById("ParentID").value;
        var courseid = modal.find("[name=CourseID]").val();
        var data = new FormData();
        data.append("ArrID", id);
        data.append("Title", title);
        data.append("ChapterID", chapterid);
        data.append("CourseID", courseid);
        _url = "@processUrl("CopyLesson", "Class")";
        _method = "POST";
        fn = LoadData;
        $('#copyLessonModel').modal('hide');
        Ajax(_url, "POST", data, true).then(function (res) {
            if (fn != void 0) fn(res);
            console.log(res);
            return false;
        })
    }

    var JoinChapter = function (obj,ID) {
        //debugger
        var modal = $("#joinChapterModal");
        modal.find("[name=ID]").val(ID);
        var currentItem = $(obj).parent().parent();
        //debugger
        modal.find("[name=rootItem]").text($(currentItem).find("[name=Name]").text());
        modal.find("[name=newName]").val($(currentItem).find("[name=Name]").text());
        //debugger
        var lessonholder = modal.find("[name=JoinChapter]");
        $(lessonholder).empty();
        $(currentItem.parent()).siblings().each(function () {
            //var id = $(this).find("[lid]").attr("lid");
            var id = this.id;
            //debugger
            if (id != 0)
            $(lessonholder).append($("<option>", { "value": id, "text": $(this).find("[name=Name]").text()}));
        });

        return false;
    }

    function IsCreateNewChapter(obj) {
        //debugger
        var isCreateNewChapter = $('#CreateNewChapter').prop('checked')
        if (isCreateNewChapter == true) {
            $("#NewLable").attr("class", "col-form-label");
            $("#newName").attr("class", "form-control");
        }
        else {
            $("#NewLable").attr("class", "hide");
            $("#newName").attr("class", "hide");
        }
    }

    var showCoefficient = function (obj) {
        //alert(obj.value)
        var typeExam = obj.value;
        if (typeExam == '@BaseCustomerEntity.Database.LESSON_ETYPE.PRACTICE') {
            document.getElementById('Multiple').value = '1';
        }
        else if (typeExam == '@BaseCustomerEntity.Database.LESSON_ETYPE.WEEKLY') {
            document.getElementById('Multiple').value = '2';
        }
        else if (typeExam == '@BaseCustomerEntity.Database.LESSON_ETYPE.CHECKPOINT') {
            document.getElementById('Multiple').value = '3';
        }
        else {
            return false;
        }
    }

    /*
     * end Hòa thêm
     */

    function DeleteLessonCallback(res) {

        if (res != null) {
            var result = $.parseJSON(res);
            if (result.Error != null) {
                alert(result.Error);
                return false;
            }
            else {
                $('.modules-content-item#' + result.Data).remove();
            }
        }


    }

    function DeleteChapterCallback(res) {
        console.log(res);

        if (res != null) {
            var result = $.parseJSON(res);
            if (result.Error != null) {
                Swal.fire({
                        title: 'Có lỗi',
                        html: result.Error,
                        icon: 'error'
                    });
                return false;
            }
            else {
                $('.modules#' + result.Data).remove();
                //debugger
                $("#ParentID option[value=" + result.Data + "]").remove();
                $('.sidebar-holder [href="#' + result.Data + '"]').parent().remove();
            }
        }


    }

    function SelectTemplate(type)
    {
        //var modal = $("#lessonModal");
        //if(type != null && type != "")
        //    modal.find("[name=TemplateType]").val(type);
        //var template = modal.find("[name=TemplateType]").val();
        switch (type)
        {
            case "1": //bài giảng
                modal.find("[for=examOnly]").hide();
                modal.find("[for=examOnly] input").prop("required", false);
                break;
            default:
                modal.find("[for=examOnly]").show();
                modal.find("[for=examOnly] input").prop("required", true);
                break;
        }
    }

    function openLesson(obj) {
        var url = $(obj).attr("href");
        var title = $(obj).text();
        //console.log($(obj).text());
        window.open(url);
        //debugger
    }

    function closeLessonFrame() {
        var url = '@processUrl("Editor", "Class")/@Data.ID/@ViewBag.ClassID';
        var title = '@Data.CourseName';
        window.history.pushState({ frame: 0, url: url, title: title }, title, url);
        console.log("close");
        hideModal();
        console.log(window.history);
    }

    var renderTableContents = function () {
        $("#tableContents").empty();
        var modal = $('.modules-wrapper');
        for (i = 1; i < $(modal).children().length; i++) {
            var item = $(modal).children()[i];
            var li = item.children[0].children[0].children[1].text;
            var id = item.id;
            var child = $(item).find('[class=modules]');
            if ($(item).find('[class=modules]').length > 0) {
                $("#tableContents").append("<li style='border-radius:unset;border-bottom: 1px dotted #f0f3f4;'><a href='#" + id + "' style='text-decoration:none;'>" + li + "<i class='fas fa-caret-down' onclick='showDropDown(this,&#39;" + id + "&#39;)'></i></a></li>");
                for (j = 0; j < $(item).find('[class=modules]').length; j++) {
                    var chilItem = $(item).find('[class=modules]')[j];
                    var chilLi = chilItem.children[0].children[0].children[1].text;
                    ChilID = chilItem.id;
                    $("#tableContents").append("<ul id='chil" + id + "' style='padding-left: 10px;display:none;'></ul>");
                    $("#chil" + id + "").append("<li class='' style='border-radius:unset;border-bottom: 1px dotted #f0f3f4;'><a href='#" + ChilID + "' style='text-decoration:none;'>" + chilLi + "</a></li>");
                }
            }
            else {
                $("#tableContents").append("<li class='' style='border-radius:unset;border-bottom: 1px dotted #f0f3f4;'><a href='#" + id + "' style='text-decoration:none;'>" + li + "</a></li>");
            }
        }
        //var title = document.getElementsByClassName('page-title')[0].children[0].textContent;
        $('#title').text('@Html.Raw(Data.CourseName)')
    }

    //-------------------
    //Get the button
    var btnScroll = $("#backToTop");

    // When the user scrolls down 20px from the top of the document, show the button
    $(document).ready(function () {
        $(".left-col").scroll(function () {
            scrollFunction();
        });
    });

    var scrollFunction = function () {
        var scroll = $('.left-col');
        if ($(scroll).scrollTop() > 200) {
            btnScroll.attr('style', 'display:block');
        } else {
            btnScroll.attr('style', 'display:none');
        }
    }

// When the user clicks on the button, scroll to the top of the document

    var fnbackToTop = function () {
        var scroll = $('.left-col');
        //$(scroll).scrollTop(0);
        $(scroll).animate({ scrollTop: 0 }, 1000);
    }

    //----------------

    $(document).ready(function () {
        LoadData();
    });

    @*$(window).on('popstate', function (event) {
        //alert(1);
        //debugger
        var state = event.originalEvent.state;
        if (state != null && state.frame == 1) {
            var url = state.url;
            $("#lessonFrameModal iframe").attr("src", url + "?frameview=1");
            document.title = state.title;
            hideModal();
            $('#lessonFrameModal').modal('show').show();
            //console.log("open");
        }
        else if (state != null && state.frame == 0) {
            var url = '@processUrl("Modules", "ClassSubject")/@Data.ID';
            var title = '@Data.CourseName';
            window.history.pushState({ frame: 0, url: url, title: title }, title, url);
            //console.log("close");
            hideModal();
        }
    });*@

    var showDropDown = function (obj, id) {
        if (document.getElementById("chil" + id).getAttribute('style').includes('display'))
            document.getElementById("chil" + id).style.display = "";
        else
            document.getElementById("chil" + id).style.display = "none";
    }

    //var test = function (obj, id) {
    //    //debugger
    //    $(obj).parent().attr('class', 'active')
    //}

</script>

<style>
    #accordionSidebar .nav-item .nav-link #icon-submenu .fas {
        top: 0;
    }

    .sidebar .nav-item .nav-link {
        padding: 0.5rem 1rem;
    }

    .sidebar .nav-item .bg-white py-2 {
        padding: 0;
    }

    .collapse-item {
        position: relative;
    }

    #icon-submenu {
        top: 7px;
        right: 20px;
    }

        #icon-submenu .fas {
            padding: 5px;
            top: -1px;
            position: relative;
            margin: 0 3px;
        }

    .sidebar .nav-item .collapse .collapse-inner {
        padding: 0;
    }

    #backToTop {
        display: none;
        position: fixed;
        bottom: 40px;
        right: 30px;
        z-index: 99;
        font-size: 30px;
        border: none;
        outline: none;
        background-color: #CCC;
        color: white;
        cursor: pointer;
        padding: 7px 15px;
        border-radius: 4px;
        position: fixed;
        opacity: 0.8;
    }
</style>
