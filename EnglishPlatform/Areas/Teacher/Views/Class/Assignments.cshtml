@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    var currentClass = ViewBag.Class as BaseCustomerEntity.Database.ClassEntity;
    ViewData["Title"] = currentClass.Name + " - Assignments";
}

<script>
    activeTab = "course";
    modulesLink = "@Url.Action("Modules","Course")";
    activeSub = "assignments";
</script>
<div class="left-col">
    <div class="page-title">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="main-container">
        <div class="sub-sidebar">
            @await Html.PartialAsync("_subSidebarTeacher")
        </div>
        <div class="main-content">
            <div class="row">
                <div class="col-md-10">
                    <div class="detail pb-3 row">
                        <div class="text-left col-md-10">
                            <div class="lession-label d-inline-block">Period: <b>@currentClass.StartDate.ToString("dd/MM/yyyy") - @currentClass.EndDate.ToString("dd/MM/yyyy")</b></div> -
                            <div class="lession-label d-inline-block">
                                Status:
                                @if (currentClass.EndDate.Date > DateTime.Now.Date)
                                {
                                    <b>Ongoing</b>
                                }
                                else
                                {
                                    <b>Complete</b>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modules-wrapper">
                    </div>
                </div>
                <div class="col-md-2">
                    @await Html.PartialAsync("MiniCalendar")
                    @await Html.PartialAsync("Markbox")
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .text-holder {
        cursor: pointer;
        border: none;
        background: transparent;
        font-weight: 500;
        text-align: right;
        outline: none;
    }
</style>
@section Scripts {
    <script>

    var chapters = [];
    var lessons = [];
    var bodyWrapper = $('.modules-wrapper');

    function LoadSchedule() {
        chapters = [];
        lessons = [];

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAssignments", "LessonSchedule")',
            data: { ClassID: '@currentClass.ID' },
            dataType:"json",
            success: function (data) {
                scheduleCounter = 1;
                bodyWrapper.html("");

                lessons = data.Data.Lessons;

                var oContent = $("<div>", { "id": "ongoing", "class":"modules" });
                var oTitle = $("<div>", { "class":"modules-title row", "data-target":"#ongoing .modules-content:first"});
                var otitle_cPart = $("<div>", {"class":"col-md-11"});
                var otitle_ePart = $("<div>", {"class":"col-md-1 text-right"});
                otitle_ePart.append($("<i>", { "class": "far fa-minus-square show", "title": "Collapse", "onclick": "toggleCollapse(this, 'ongoing')" }));
                otitle_cPart.append($("<i>", {"class":"fa pr-1 fa-caret-down fa-caret-right", "onclick": "toggleCollapse(this, 'ongoing')"}))
                    .append($("<a>", {
                        "class":"action-link",
                        "text": "Ongoing",
                        "onclick": "toggleCollapse(this, 'ongoing')"
                        }));
                oTitle.append(otitle_cPart).append(otitle_ePart);
                oContent.append(oTitle);
                oContent.append($("<div>", { "class":"modules-content collapse show"}));

                var pContent = $("<div>", { "id": "past-assignment", "class":"modules" });
                var pTitle = $("<div>", { "class":"modules-title row", "data-target":"#past-assignment .modules-content:first"});
                var title_cPart = $("<div>", {"class":"col-md-11"});
                var title_ePart = $("<div>", {"class":"col-md-1 text-right"});
                title_ePart.append($("<i>", { "class": "far fa-minus-square show", "title": "Collapse", "onclick": "toggleCollapse(this, 'past-assignment')" }));
                title_cPart.append($("<i>", {"class":"fa pr-1 fa-caret-down fa-caret-right",  "onclick": "toggleCollapse(this, 'past-assignment')"}))
                            .append($("<a>", {
                                "class":"action-link",
                                "text": "Past Assignments",
                                "onclick": "toggleCollapse(this, 'past-assignment')"
                                }));
                pTitle.append(title_cPart).append(title_ePart);
                pContent.append(pTitle);
                pContent.append($("<div>", { "class":"modules-content collapse show"}));

                bodyWrapper.append(oContent);
                bodyWrapper.append(pContent);

                if (lessons.length > 0) {
                    for (j = 0; j < lessons.length; j++) {
                        var item = lessons[j];
                        var active = "";
                        if (item.IsActive) {
                            active = "<button type='button' data-toggle='button' aria-pressed='true' autocomplete='off' class='btn btn-lg btn-toggle active btn-success' onclick=\"ExcuteOnlyItem('" + item.ScheduleID + "','@Url.Action("unpublish", "LessonSchedule")',ToggleStatus(this))\"> <div class='handle'></div> </button>";
                        } else {
                            active = "<button type='button' data-toggle='button' aria-pressed='true' autocomplete='off' class='btn btn-lg btn-toggle btn-danger' onclick=\"ExcuteOnlyItem('" + item.ScheduleID + "','@Url.Action("publish", "LessonSchedule")',ToggleStatus(this))\"> <div class='handle'></div> </button>";
                        }

                        var startdate = "---";
                        if(moment(item.StartDate) > new Date(2018,1,1)) startdate = moment(item.StartDate).format('DD/MM/YYYY');
                        var enddate = "---";
                        if(moment(item.EndDate) > new Date(2018,1,1)) enddate = moment(item.EndDate).format('DD/MM/YYYY');

                        var rowData = $("<div>", {"class":"modules-content-item row"});
                        var leftPart = $("<div>", {"class":"col-md-6"});
                        var rightPart = $("<div>", {"class":"col-md-2 text-right"});
                        leftPart.append($("<span>", {"class":"modules-content-item-icon" + (item.TemplateType === 2? (" assignment atype" + item.Etype):"")}));
                        rightPart.append(active);
                        var itemData = $("<div>", {"class":"modules-content-item-info"});
                        itemData.append($("<a>", {
                                "class":"action-link",
                                "href": "@Url.Action("Detail", "Lesson")/" + item.ID + "/@currentClass.ID",
                                "text": item.Title
                            }));

                        if(item.Description != null)
                        {
                            itemData.append($("<span>", {"class":"description", "text": item.Description}));
                        }
                        leftPart.append(itemData);
                        rowData.append(leftPart)
                            .append($("<div>", {"class":"col-md-2 text-right"})
                                .append($("<input>", {"sid": item.ScheduleID, "target":"StartDate", "type":"text", "readonly":"readonly","class":"text-holder", "value": startdate, "onchange":"updateSchedule(this)"})))
                            .append($("<div>", {"class":"col-md-2 text-right"})
                                .append($("<input>",{"sid": item.ScheduleID, "target":"EndDate", "type":"text", "readonly":"readonly","class":"text-holder", "value": enddate, "onchange":"updateSchedule(this)"})))
                            .append(rightPart);

                        //rowData.append(itemData);

                        if (moment(item.EndDate) > new Date() && moment() || moment(item.EndDate) <= new Date(1900,1,1))
                            parent = bodyWrapper.find(".modules#ongoing .modules-content:first");
                        else
                            parent = bodyWrapper.find(".modules#past-assignment .modules-content:first");
                        parent.append(rowData);
                    }

                    $('.text-holder').datepicker({
                      changeMonth: true,
                      changeYear: true,
                      dateFormat: "dd/mm/yy"
                    });
                }
                if(window.location.hash != "")
                {
                    var anchor = window.location.hash;
                    $(function() {
                        $(document).scrollTop( $(anchor).offset().top );
                    });
                }
            },
            error: function (res) {
                console.log(res.responseText);
            }
        });
    }

    function updateSchedule(obj) {
        var currentval = $(obj).val();
        var scheduleid = $(obj).attr("sid");
        var startdate = moment($(obj).parent().parent().find("[target=StartDate]").val(),"DD/MM/YYYY").format("MM-DD-YYYY");
        var enddate = moment($(obj).parent().parent().find("[target=EndDate]").val(),"DD/MM/YYYY").format("MM-DD-YYYY");
        console.log(startdate);
        console.log(enddate);

        $(obj).val(currentval + "...")
        $.ajax({
                type: "POST",
                url: '@Url.Action("Update", "LessonSchedule")',
                data:
                {
                    ID: scheduleid,
                    StartDate: startdate,
                    EndDate: enddate
                },
                dataType:"json",
                success: function (data) {
                    $(obj).val(currentval);
                },
                error: function (res) {
                    console.log(res.responseText);
                }
            });

    }


    $(document).ready(function () {
        LoadSchedule();
    });

    </script>
}