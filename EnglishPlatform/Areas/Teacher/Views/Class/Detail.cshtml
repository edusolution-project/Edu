@{

    Layout = "~/Views/Shared/_LayoutTeacher_NewUI.cshtml";
    var currentClass = ViewBag.Class as BaseCustomerMVC.Models.ClassViewModel;
    ViewData["Title"] = currentClass.Name;
}
<script src="/libs/vuejs-datepicker.min.js"></script>
<script>
    setActiveMenu("course");
</script>

<section class="module" id="dashboard_content">
    <div class="card-header">
        <div class="flex mb-2">
            <h2 class="title"><a href="@Url.Action("Index", "Class")" title="Quản lý môn học"><i class="ti-arrow-left"></i></a>{{className}}</h2>
            <div class="search-box">
                <button><i class="ic ic-find"></i></button>
                <input type="text" name="" placeholder="Search">
            </div>
        </div>
        <div class="flex j-between border-b">
            <div class="tab bg-none">
                <ul class="flex">
                    <li v-bind:class="{active : tab[0]}"><a href="javascript:;" title="Tổng quan" v-on:click="tabChange()">Tổng quan</a></li>
                    <li v-bind:class="{active : tab[1]}"><a href="javascript:;" title="Môn học" v-on:click="tabChange(1)">Môn học</a></li>
                    <li v-bind:class="{active : tab[2]}"><a href="javascript:;" title="Học viên" v-on:click="tabChange(2)">Học viên</a></li>
                    <li v-bind:class="{active : tab[3]}"><a href="javascript:;" title="Tài liệu tham khảo" v-on:click="tabChange(3)">Tài liệu tham khảo</a></li>
                    <li v-bind:class="{active : tab[4]}"><a href="javascript:;" title="Trao đổi / thảo luận" v-on:click="tabChange(4)">Thảo luận</a></li>
                </ul>
            </div>
            <div class="c-right"></div>
        </div>
    </div>
    <div class="card-body">
        <div class="box" v-if="tab[0]">
            <ul class="box list ls-overview mb-3">
                <li class="flex margin-b20">
                    <a href="#" class="thumb"><img :src="classImg" alt="" /></a>
                    <div class="c-right">
                        <p><span class="label">Tên lớp: </span>{{className}}</p>
                        @*<p><span class="label">Mã lớp : </span>IELTS_PL5_1</p>*@
                        @*<p><span class="label">Cấp độ : </span>{{gradeName}}</p>*@
                        <p><span class="label">Chương trình: </span>{{subjectName}}</p>
                        <p><span class="label">Môn học: </span>{{skillName}}</p>
                        <ul class="time-line flex">
                            <li><i class="ti-time"></i>Bắt đầu: {{formatShortDate(startDate)}} </li>
                            <li><i class="ti-time"></i>Kết thúc: {{formatShortDate(endDate)}} </li>
                        </ul>
                    </div>
                </li>
            </ul>
            <div class="box info-practice">
                <h4>Chi tiết lớp học</h4>
                <p>{{classDescription}}</p>
            </div>
        </div>
        <div class="box" v-if="tab[1]">
            <ul class="list ls-pratice">
                <li v-for="(obj,i) in classSubjects">
                    <div class="inner">
                        <a href="javascript:;" v-b-toggle="`collapse-${i}`" class="btn-collapse parrent" v-on:click="loadContent(obj.ID)"><i class="ic ic-headphone-o" :style="'background-image:url(' + obj.Image + ')'"></i>{{obj.Title}}</a>
                        <b-collapse :id="`collapse-${i}`" accordion="my-accordion" role="tabpanel">
                            <ul class="list">
                                <chap-content v-for="(item,k) in list_chapters" v-if="matchedItem(item, obj.ID + '-')"
                                              v-bind:data="item"
                                              v-bind:pos="k"
                                              v-bind:subchaps="filterItem(item, list_chapters)"
                                              v-bind:lessons="filterItem(item, list_lessons)"></chap-content>
                            </ul>
                        </b-collapse>
                    </div>
                </li>
            </ul>
        </div>
        <div class="box" v-if="tab[2]">
            <table id="ed_table" class="table">
                <thead>
                    <tr>
                        <th v-for="(field,k) in fields">{{field.label}}</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item,k) in tableData" v-if="item.id > 0">
                        <td>{{k+1}}</td>
                        <td><a href="/teacher/student_detail.html" :title="item.name">{{item.name}}</a></td>
                        <td>{{item.email}}</td>
                        <td>{{item.phone}}</td>
                        <td v-bind:class="{good : (item.per > 50)}">{{item.per+'%'}}</td>
                        <td>{{item.last_update}}</td>
                        <td v-bind:class="{good : (item.score > 5)}">{{item.score + ' điểm'}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="box" v-if="tab[3]">
            <div class="row ls-doc">
                <div class="col-md-12">
                    <div class="inner">
                        <a href="#" title="" class="thumb">
                            <img src="/pictures/doc1.png" alt="">
                        </a>
                        <div class="entry">
                            <div class="flex j-between">
                                <div class="c-left">
                                    <a href="#" title="" class="title">IELTS Practice Tests</a>
                                    <div class="rating"><i class="icofont icofont-star"></i><i class="icofont icofont-star"></i></div>
                                </div>
                                <div class="c-right">
                                    <a href="#" title="Xem" class="btn-view">Xem</a>
                                    <a href="#" title="Tải về" class="btn-download">Tải về</a>
                                </div>
                            </div>
                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="inner">
                        <a href="#" title="" class="thumb">
                            <img src="/pictures/doc2.png" alt="">
                        </a>
                        <div class="entry">
                            <div class="flex j-between">
                                <div class="c-left">
                                    <a href="#" title="" class="title">IELTS Practice Tests</a>
                                    <div class="rating"><i class="icofont icofont-star"></i><i class="icofont icofont-star"></i></div>
                                </div>
                                <div class="c-right">
                                    <a href="#" title="Xem" class="btn-view">Xem</a>
                                    <a href="#" title="Tải về" class="btn-download">Tải về</a>
                                </div>
                            </div>
                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box" v-if="tab[4]">
            Thảo luận
        </div>
    </div>

</section>
@section Scripts{
    <script type="text/x-template" id="chapContentTemp">
        <li class="col-md-12">
            <div class="inner">
                <a href="javascript:;" v-b-toggle="`prc-${data.ID}-${pos}`" class="btn-collapse" v-on:click="loadContent(data.ClassSubject, data.ID)"><i class="ic ic-edit-small"></i>{{data.Title}}<i class="ic ic-collapse"></i></a>
                <b-collapse :id="`prc-${data.ID}-${pos}`" role="tabpanel">
                    <b-card-body>
                        <ul class="list">
                            <chap-content v-for="(subItem,j) in subchaps"
                                          v-bind:data="item"
                                          v-bind:pos="k"
                                          v-bind:subchaps="filterItem(item, subchaps)"
                                          v-bind:lessons="filterLesson(item, lessons)"></chap-content>
                            <lesson-item v-for="lesson in lessons" v-bind:data="lesson" v-bind:classSubject="data.ClassSubject"></lesson-item>
                        </ul>
                    </b-card-body>
                </b-collapse>
            </div>
        </li>
    </script>

    <script type="text/x-template" id="lessonItemTemp">
        <li class="sub-practice">
            <div class="flex j-between width-100">
                <a :href="'@Url.Action("Detail", "Lesson")/' + data.ID + '/' + classSubject"> <span class="width-100">{{data.Title}}</span></a>
                <div class="flex width-100 j-end picker-schedule">
                    <vuejs-datepicker v-model="data.StartDate" format="dd/M/yyyy" class="date st"></vuejs-datepicker>
                    <vuejs-datepicker v-model="data.EndDate" format="dd/M/yyyy" class="date ed"></vuejs-datepicker>
                </div>
            </div>
        </li>
    </script>

    <script>
        Vue.component('chap-content', {
            template: '#chapContentTemp',
            props: {
                subchaps: Array,
                lessons: Array,
                data: Object,
                pos: String
            }
        })
        Vue.component('lesson-item',{
            template: '#lessonItemTemp',
            props: {
                data: Object,
                classSubject: String
            }
        })
        new Vue({
            el: "#main",
            mounted() {
                this.loadClassDetail()
                window.loadContent = this.loadContent
            },
            components: {
                vuejsDatepicker
            },
            data: {
                classID: '@currentClass.ID',
                className: '@currentClass.Name',
                startDate: '@currentClass.StartDate',
                endDate: '@currentClass.EndDate',
                classDescription: '@currentClass.Description',
                classImg: '@currentClass.Image',
                subjectName: '@currentClass.SubjectName',
                skillName: '@currentClass.SkillName',
                classSubjects: [
                    //{
                    //    id: 1,
                    //    title: 'Listening',
                    //    icon: 'ic-headphone-o'
                    //},
                    //{
                    //    id: 2,
                    //    title: 'Speaking',
                    //    icon: 'ic-microphone-o'
                    //},
                    //{
                    //    id: 3,
                    //    title: 'Grammar',
                    //    icon: 'ic-grammar-o'
                    //},
                ],
                list_news: [
                    {
                        title: 'Đã đến lúc HLV Park',
                        description: 'Đây là lúc để HLV Park giải bài toán khó nhất của ông',
                        thumbnail: '/pictures/news1.png'
                    },
                    {
                        title: 'HLV Park: Có khi p',
                        description: 'Đây là lúc để HLV Park giải bài toán khó nhất của ông',
                        thumbnail: '/pictures/news2.png'
                    },
                    {
                        title: 'Tiến Dũng và Văn Toả',
                        description: 'Đây là lúc để HLV Park giải bài toán khó nhất của ông',
                        thumbnail: '/pictures/news3.png'
                    }
                ],
                list_data: [
                    {
                        title: 'Section 1',
                        id: 1,
                        detail: [
                            {
                                title: 'Exercise 1',
                                note: 'Làm bài lần cuối',
                                date: '20/11/2019 09:46:58 PM',
                                start_date: '20/11/2019',
                                end_date: '20/12/2019',
                                score: 7,
                                id: 1,
                                state: true
                            },
                            {
                                title: 'Exercise 1',
                                note: 'Làm bài lần cuối',
                                date: '20/11/2019 09:46:58 PM',
                                start_date: '20/11/2019',
                                end_date: '20/12/2019',
                                score: 7,
                                id: 1,
                                state: true
                            },
                            {
                                title: 'Exercise 1',
                                note: 'Làm bài lần cuối',
                                date: '20/11/2019 09:46:58 PM',
                                start_date: '20/11/2019',
                                end_date: '20/12/2019',
                                score: 7,
                                id: 1,
                                state: false
                            }
                        ]
                    },
                    {
                        title: 'Section 2',
                        id: 2,
                        detail: [
                            {
                                title: 'Ngữ pháp cơ bản',
                                note: 'Làm bài lần cuối',
                                date: '20/11/2019 09:46:58 PM',
                                start_date: '20/11/2019',
                                end_date: '20/12/2019',
                                score: 7,
                                id: 1,
                                state: false
                            },
                            {
                                title: 'Exercise 1',
                                note: 'Làm bài lần cuối',
                                date: '20/11/2019 09:46:58 PM',
                                start_date: '20/11/2019',
                                end_date: '20/12/2019',
                                score: 7,
                                id: 1,
                                state: false
                            },
                            {
                                title: 'Luyện nói nâng cao',
                                note: 'Làm bài lần cuối vào ngày',
                                date: '20/11/2019 09:46:58 PM',
                                start_date: '20/11/2019',
                                end_date: '20/12/2019',
                                score: 7,
                                id: 1,
                                state: false
                            }
                        ]
                    }

                ],
                list_subjects: [],
                list_chapters: [],
                list_lessons:[],
                loaded_chapter: [],
                loaded_subject: [],
                fields: [
                    {
                        key: 'stt',
                        label: '#'
                    },
                    {
                        key: 'name',
                        label: 'Họ tên'
                    },
                    {
                        key: 'email',
                        label: 'Email'
                    },
                    {
                        key: 'phone',
                        label: 'SĐT'
                    },
                    {
                        key: 'per',
                        label: 'Tiến độ'
                    },
                    {
                        key: 'last_update',
                        label: 'Lần cuối'
                    },
                    {
                        key: 'score',
                        label: 'Kết quả'
                    }
                ],
                tableData: [
                    {
                        id: 1,
                        name: 'Huong Ho',
                        email: 'lanhuongho0507@gmail.com',
                        phone: '0983750705',
                        per: 23,
                        last_update: '08:45 02/11/2019',
                        score: 4,
                    },
                    {
                        id: 2,
                        name: 'Nguyễn Thị Quỳnh Đan',
                        email: 'quynhdanhanu@gmail.com',
                        phone: '0983750705',
                        per: 51,
                        last_update: '08:45 02/11/2019',
                        score: 6,
                    },
                ],
                view: 10,
                page: 1,
                tab: [true, false, false, false, false]
                //tab1: true,
                //tab2: false,
                //tab3: false,
                //tab4: false,
                //tab5: false
            },
            watch: {
            },
            methods: {
                tabChange(a = 0) {
                    // có thể load data theo từng tab để tối ưu hiệu năng
                    // this.getData()
                    let _that = this
                    _that.tab.forEach(function (item, k) {
                        _that.tab[k] = false;
                    })
                    this.tab = _that.tab
                    this.tab[a] = true
                    switch (a) {
                        case 0:
                            this.loadClassDetail();
                            break;
                        case 1:
                            this.loadClassSubjects();
                            break;
                        case 2:
                            this.loadStudentManagement();
                            break;
                        case 3:
                            this.loadPreference();
                            break;
                        case 4:
                            this.loadComment();
                            break;
                    }
                    this.$forceUpdate()
                },
                loadClassDetail() {
                    let _that = this
                    let _form = new FormData()
                    _form.append('ID', _that.classID)
                    let _url = '@Url.Action("GetDetail", "Class")'
                    axios.post(_url, _form)
                        .then(response => {
                        var _data = response.data.Data;
                        _data.forEach(function (item, k)
                        {
                            _that.teacherSource.push({
                                ID: item.id,
                                FullName: item.fullname,
                                SubjectID: obj.SubjectID
                            })
                        })
                        _that.loaded_teacher.push(obj.SubjectID);
                    }).catch(e => { })
                },
                loadClassSubjects() {
                    let _that = this
                    if (_that.classSubjects.length > 0)
                        return;

                    let _form = new FormData()
                    _form.append('ClassID', _that.classID)
                    let _url = '@Url.Action("GetClassSubjects", "ClassSubject")'
                        axios.post(_url, _form)
                            .then(response => {
                                var _data = response.data.Data;
                                _that.classSubjects = [];
                                _data.forEach(function (item, k) {
                                    _that.classSubjects.push({
                                        ID: item.ID,
                                        Title: item.SkillName,
                                        Image:  item.SkillImage,
                                        Chapters: [],
                                        Lessons: []
                                    })
                                    //_that.changeAddSubject(item)
                                    //_that.changeAddGrade(item)
                                })

                                //_that.$forceUpdate()
                            }).catch(e => { })
                },
                loadContent(subject, chapter) {
                    let _that = this
                    let key = subject + "_" + chapter
                    if (_that.loaded_chapter.includes(key))
                        return;

                    let _form = new FormData()
                    _form.append('ID', subject)
                    if(chapter)
                        _form.append('Parent', chapter)
                    let _url = '@Url.Action("GetContents", "ClassSubject")'
                        axios.post(_url, _form)
                            .then(response => {
                                var _data = response.data.Data;
                                var _lesson = response.data.Lesson;
                                //_that.classSubjects.forEach(function (item, k)
                                //{
                                //    if (item.ID == subject) {

                                _data.forEach(function (chapter, k) {
                                    var parent = '';
                                    if (chapter.Parent)
                                        parent = chapter.parent;
                                            _that.list_chapters.push({
                                                ID: chapter.ID,
                                                Title: chapter.Name,
                                                ClassSubject: subject,
                                                Parent:  parent
                                            })
                                        })
                                _lesson.forEach(function (lesson, k) {
                                    var parent = '';
                                    if (lesson.ChapterID) parent = lesson.ChapterID;
                                            _that.list_lessons.push({
                                                ID: lesson.ID,
                                                Title: lesson.Title,
                                                ClassSubject: subject,
                                                Parent: parent,
                                                StartDate: lesson.StartDate,
                                                EndDate: lesson.EndDate,
                                                IsActive: lesson.IsActive
                                            })
                                        })
                                        //console.log(item.Lessons)
                                    //}
                                //})
                                this.loaded_chapter.push(key);
                                this.list_chapters = _that.list_chapters
                                this.list_lessons = _that.list_lessons
                                _that.$forceUpdate()
                            }).catch(e => { })
                },
                loadStudentManagement() {
                    console.log(3)
                },
                loadPreference() {
                    console.log(4)
                },
                loadComment() {
                    document.location = '@Url.Action("Index","Discuss", new { id = currentClass.ID })'
                    //console.log(5)
                },
                formatShortDate(date) {
                    if (moment(date) < moment(new Date(2000, 1, 1))) return "-"
                    return moment(date).format("DD/MM/YYYY")
                },
                matchedItem(obj, key) {
                    return (obj.ClassSubject + '-' + obj.Parent) == key
                },
                filterItem(obj, list) {
                    return list.filter((p) => {
        	            return p.Parent == obj.ID && p.ClassSubject == obj.ClassSubject
                    })
                },
            }
        });
    </script>
}

