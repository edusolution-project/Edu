@{

    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    ViewData["Title"] = "Student Management";
    var listGrade = ViewBag.Grade as List<BaseCustomerEntity.Database.GradeEntity>;
    var listSubject = ViewBag.Subject as List<BaseCustomerEntity.Database.SubjectEntity>;
    var listTeacher = ViewBag.Teacher as List<BaseCustomerEntity.Database.TeacherEntity>;
    var user = ViewBag.User as string;
    var hasManageRole = (bool)(ViewBag.Managable ?? false);
}

<script>
    activeTab = "students";
</script>

<div class="left-col">
    <div class="page-title">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="main-container">
        <div class="main-content">
            <div class="row">
                <div class="col-md-12">
                    @if (hasManageRole)
                    {
                        <div class="text-right pb-3">
                            <button id="btnAddStudent" type="button" onclick="ShowAddStudent()" class="btn btn-primary" data-placement="top" title="Add Student" data-toggle="modal"
                                    data-target="#addStudentModal" data-original-title="Add Student">
                                <i class="fas fa-plus"></i> Add Student
                            </button>
                        </div>
                    }
                    <div class="search-filter pt-3">
                        <div class="form-row">
                            <div class="form-group row col-md-3">
                                <label for="staticText" class="col-sm-3 col-form-label text-right">Subject</label>
                                <div class="col-sm-9">
                                    <select id="SubjectID" class="form-control" onchange="LoadGrade(); LoadTeachers();">
                                        @*<option value="">-- All --</option>*@
                                        @{
                                            for (int i = 0; listSubject != null && i < listSubject.Count; i++)
                                            {
                                                <option value="@listSubject[i].ID">@listSubject[i].Name</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row col-md-3">
                                <label for="staticText" class="col-sm-3 col-form-label text-right">Grade</label>
                                <div class="col-sm-9">
                                    <select id="GradeID" class="form-control" onchange="LoadClass()">
                                        @*<option value="">-- Not set --</option>*@
                                        @{
                                            for (int i = 0; listGrade != null && i < listGrade.Count; i++)
                                            {
                                                <option value="@listGrade[i].ID" for="@listGrade[i].SubjectID">@listGrade[i].Name</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row col-md-3">
                                <label for="staticText" class="col-sm-3 col-form-label text-right">Teacher</label>
                                <div class="col-sm-9">
                                    <select id="TeacherID" class="form-control" onchange="LoadClass()">
                                        <option value="">-- Not set --</option>
                                        @{
                                            for (int i = 0; listTeacher != null && i < listTeacher.Count; i++)
                                            {
                                                <option value="@listTeacher[i].ID" for="@listTeacher[i].TeacherId">@listTeacher[i].FullName</option>
                                            }

                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="form-group row col-md-3">
                                <label for="staticText" class="col-sm-3 col-form-label text-right">Class</label>
                                <div class="col-sm-9">
                                    <select id="ClassID" class="form-control" onchange="LoadData()">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>

                    <table id="membersTable" class="table" width="100%" cellspacing="0">
                        <thead>
                            <tr class="text-center align-middle">
                                <th class="text-center align-middle">Index</th>
                                <th class="text-center align-middle">Name</th>
                                <th class="text-center align-middle">Email</th>
                                <th class="text-center align-middle">Progress</th>
                                <th class="text-center align-middle">Last seen</th>
                                <th class="text-center align-middle">Result</th>
                                @if (hasManageRole)
                                {
                                    <th class="text-center align-middle"></th>
                                }
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        var membersBody = $('#membersTable tbody');

        function LoadData() {
            members = [];
            membersBody.html("");

            $('#btnAddStudent').prop("disabled", !($("#ClassID option").length > 0 && $("#ClassID option:selected[e]").length == 0));

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetListMember", "Class")',
                data: {ID: $("#ClassID").val()},
                dataType:"json",
                success: function (data) {
                    memberCounter = 1;
                    members = data.Data != null ? data.Data.Students : [];
                    if (members.length > 0) {
                        for (j = 0; j < members.length; j++) {
                            var student = members[j];

                            //var date = moment(new Date(student.DateBorn)).format('DD/MM/YYYY');
                            var lastdate = moment(new Date(student.LastJoinDate)).format('DD/MM/YYYY');

                            var row = $("<tr>", {id: "st" + student.ID});
                            row.append($("<td>", { class:"text-center", text: j + 1 }));
                            row.append($("<td>", { text: student.FullName }));
                            row.append($("<td>", { text: student.Email }));
                            var progress = $("<div>", { class: "progress" })
                                .append($("<div>", {
                                    class: "progress-bar bg-success",
                                    role: "progressbar",
                                    style: "width: 0%",
                                    "aria-valuenow": "0",
                                    "aria-valuemin": "0",
                                    "aria-valuemax": "100"
                                }))
                            row.append($("<td>").append(progress));
                            row.append($("<td>", { class: "text-center", text: lastdate }));
                            row.append($("<td>", { text: "---" }));
                            @if (hasManageRole)
                            {
                            @:var actionrow = $("<td>");
                            @:var btnRemove = $("<button>", { class: "btn btn-remove text-danger panel-transparent", "data-placement": "top", "data-trigger":"hover", title: "Remove", onclick: "if(confirm('Confirm Remove?')){ showLoading(); RemoveStudent('" + student.ID + "', '@Url.Action("RemoveStudent","Class")')}" });
                            @:btnRemove.append($("<i>", { class: "fas fa-trash" }));
                            @:actionrow.append(btnRemove);
                            @:row.append(actionrow);
                            @:btnRemove.tooltip();
                            }
                            membersBody.append(row);
                        }
                    }
                },
                error: function(e) {
                    console.log(e);
                }
            });
        }

        $(document).ready(function () {
            $("#SubjectID").change();
        });

        function LoadClass() {
            var classes = $("#ClassID");
            var data = {
                SubjectID: $("#SubjectID").val(),
                GradeID: $("#GradeID").val(),
                TeacherID: $("#TeacherID").val()
            }
            classes.empty();
            membersBody.html("");
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetManageList", "Class")',
                dataType: "json",
                data: data,
                success: function (res) {
                    if (res.Data != null) {
                        if (res.Data.length > 0) {
                            for (var i = 0; i < res.Data.length; i++) {
                                var item = res.Data[i];
                                var IsEnd = moment(item.EndDate) < moment(new Date());
                                console.log((!item.IsActive) || IsEnd);
                                classes.append("<option value='" + item.ID + "' s='" + item.SubjectID + "' g='" + item.GradeID + "' " + ((!item.IsActive || IsEnd)?"e='1'":"") + " >" + item.Name + (item.IsActive ? (IsEnd ? " (Ended)":""):" (Inactive)") + "</option>");
                            }
                            LoadData();
                            $('#btnAddStudent').prop("disabled", false);
                        }
                        else {
                            $('#btnAddStudent').prop("disabled", true);
                        }
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            })
        }

        function LoadGrade() {
            var subject = $("#SubjectID").val();
            $('#GradeID option[for!=' + subject + ']').hide();
            $('#GradeID option[for=' + subject + ']').show();
            $('#GradeID').val($('#GradeID option[for=' + subject + ']:first').attr('value'));
            LoadClass();
        }

        function LoadTeachers() {
            $("#TeacherID option:gt(0)").remove();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetListTeachers", "Home")',
                data: {
                    SubjectID: $("#SubjectID").val()
                },
                dataType: "json",
                success: function (data) {
                    var members = data.Data != null ? data.Data : [];
                    if (members.length > 0) {
                        for (j = 0; j < members.length; j++) {
                            var item = members[j];
                            $("#TeacherID").append("<option value='" + item.ID + "'>" + item.FullName + "</option>");
                        }
                    } else {
                        $('#ClassID').empty();
                        $('#btnAddStudent').prop("disabled", true);
                    }
                },
                error: function (e) {
                    console.log(e);
                }
            });
        }

        function RemoveStudent(studentid) {
            showLoading("Updating...");
            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveStudent", "StudentManage")',
                data: {
                    ClassID: $("#ClassID").val(),
                    StudentID: studentid
                },
                dataType: "json",
                success: function (data) {
                    hideLoading();
                    if (data.error != null) {
                        alert(data.error);
                    }
                    else {
                        membersBody.find('#st' + studentid).remove();
                    }
                },
                error: function (e) {
                    console.log(e);
                    hideLoading();
                }
            });
    }

        function ShowAddStudent() {
            $('#studentID').val('');
            $('#studentName').val('').focus().click();
        }

        function AddStudent() {
            var studentid = $('#studentID').val();
            if (studentid == '') {
                alert('Please select student from list');
                $('#studentName').focus().click();
                return false;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddStudent", "StudentManage")',
                data: {
                    ClassID: $("#ClassID").val(),
                    StudentID: studentid
                },
                dataType: "json",
                success: function (data) {
                    hideLoading();
                    if (data.error != null) {
                        alert(data.error);
                    }
                    else {
                        LoadData();
                        hideModal();
                    }
                },
                error: function () {
                    alert("Error");
                    hideLoading();
                }
            });
        }

        var cache = {};

        $("#studentName")
            .autocomplete({
                source: function (request, response) {

                    var term = request.term;
                    if ( term in cache ) {
                      response( cache[term] );
                      return;
                    }
                    $.ajax({
                        url: '@Url.Action("Search","StudentManage")',
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            cache[term] = data;
                            response(data);
                        }
                    });
                },
                minLength: 2,
                focus: function (event, ui) {
                    $("#studentName").val(ui.item.FullName);
                    return false;
                  },
                select: function (event, ui) {
                    //var terms = split( this.value );
                    //  // remove the current input
                    //  terms.pop();
                    //  // add the selected item
                    //terms.push(ui.item.label);
                    //  // add placeholder to get the comma-and-space at the end
                    //  terms.push( "" );
                    ////this.value = terms.join(", ");
                    //selected.push(ui.item.label);
                    //this.value = selected.join(", ");
                    //console.log(selected);
                    //return false;
                    $("#studentName").val(ui.item.FullName);
                    $("#studentID").val(ui.item.ID);
                    return false;
                }
            })
            .autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                    .append("<div>" + item.FullName + "<br>" + item.Email + "</div>")
                    .appendTo(ul);
                    };

    </script>
}

@section Modals{
    <div class="modal fade edit-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="addStudentModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add Student to Class</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="ID" />
                    <div class="form-group">
                        <label class="col-form-label">Find Student:</label>
                        <input type="text" class="form-control" id="studentName" name="Name" placeholder="Please type to search">
                        <input type="hidden" value="" id="studentID" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="AddStudent()">Add</button>
                </div>
            </div>
        </div>
    </div>
    <style>
        .ui-front {
            z-index: 9999
        }
    </style>
}