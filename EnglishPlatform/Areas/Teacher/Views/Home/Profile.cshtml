@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model BaseCustomerEntity.Database.TeacherEntity ;

@{
    Layout = "~/Views/Shared/_LayoutTeacher_NewUI.cshtml";
    ViewData["Title"] = "Update Account Info";
}


<script>
    setActiveMenu("profile");
</script>

<section class="module" id="dashboard_content">
    <div class="card-header">
        <div class="flex border-b padding-b25">
            <h2 class="title" v-if="isInfo">Thông tin cá nhân</h2>
            <h2 class="title" v-if="isPass"><a href="javascript:;" title="Quay lại" v-on:click="changeState()"><i class="ti-arrow-left"></i></a>Đổi mật khẩu</h2>
            <div class="c-right">
                <a href="javascript:;" title="logout" class="btn-logout" v-on:click="logout()">Log out <i class="ic ic-exit"></i></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="box">
            <div class="flex">
                <div id="avatar_box" v-if="isInfo">
                    <img v-on:error="errorImgUrl()" :src="avatar.src" alt="" v-if="avatar" />
                    <img v-else src="/images/no-avatar.png" />
                    <label for="in_avatar">Đổi hình đại diện</label>
                    <input type="file" :ref="`avatar`" v-on:change="previewThumb()" id="in_avatar">
                </div>
                <div class="box" id="profile_detail">
                    <div class="form-group" v-if="isInfo">
                        <label for="name">Họ và tên</label>
                        <input type="text" v-model="profile.FullName" class="form-control" placeholder="Họ tên" id="name">
                    </div>
                    <div class="form-group" v-if="isInfo">
                        <label for="msisdn">Số điện thoại</label>
                        <input type="text" v-model="profile.Phone" class="form-control" placeholder="Số điện thoại" id="msisdn">
                    </div>
                    <div class="form-group" v-if="isInfo">
                        <label for="mskype">Skype</label>
                        <input type="text" v-model="profile.Skype" class="form-control" placeholder="Skype" id="mskype">
                    </div>

                    <div class="form-group" v-if="isInfo">
                        <label for="msZoom">ZoomID</label>
                        <input type="text" v-model="profile.ZoomID" class="form-control" placeholder="ZoomID" id="msZoom">
                    </div>

                    <div class="form-group" v-if="isInfo">
                        <label for="email">Địa chỉ email</label>
                        <input type="text" v-model="profile.Email" class="form-control" placeholder="Email" id="email">
                    </div>
                    <div class="form-group" v-if="isInfo">
                        <label for="password">Mật khẩu</label>
                        <div class="relative">
                            <input :type="pass_type" v-model="password" class="form-control" placeholder="Mật khẩu" id="password">
                            <span class="ic ic-eye" v-on:mouseover="showPass()" v-on:mouseleave="showPass(0)"></span>
                        </div>
                    </div>
                    <!--  -->
                    <div class="form-group" v-if="isPass">
                        <label for="password_old">Mật khẩu cũ*</label>
                        <div class="relative">
                            <input :type="pass_type" v-model="password_old" class="form-control" placeholder="Mật khẩu" id="password_old">
                            <span class="ic ic-eye" v-on:mouseover="showPass()" v-on:mouseleave="showPass(0)"></span>
                        </div>
                    </div>
                    <div class="form-group" v-if="isPass">
                        <label for="password_new">Mật khẩu mới*</label>
                        <div class="relative">
                            <input :type="pass_type" v-model="password_new" class="form-control" placeholder="Mật khẩu" id="password_new">
                            <span class="ic ic-eye" v-on:mouseover="showPass()" v-on:mouseleave="showPass(0)"></span>
                        </div>
                    </div>
                    <div class="form-group" v-if="isPass">
                        <label for="password_confirm">Nhập lại mật khẩu mới</label>
                        <div class="relative">
                            <input :type="pass_type" v-model="password_confirm" class="form-control" placeholder="Mật khẩu" id="password_confirm">
                            <span class="ic ic-eye" v-on:mouseover="showPass()" v-on:mouseleave="showPass(0)"></span>
                        </div>
                    </div>
                    <div class="margin-t20">
                        <button class="btn btn-save" v-on:click="updateProfile()" v-if="isInfo">Lưu thay đổi</button>
                        <button class="btn btn-save" v-on:click="updatePassword()" v-if="isPass">Lưu thay đổi</button>
                        <a href="javascript:;" title="Đổi mật khẩu" class="link" v-if="isInfo" v-on:click="changeState(1)">Đổi mật khẩu <i class="ti-arrow-right"></i></a>
                        @*<a href="javascript:;" title="Đổi mật khẩu" class="link" v-if="isPass">Quên mật khẩu <i class="ti-arrow-right"></i></a>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{

    <script>
        new Vue({
            el: ".module",
            mounted() {
                this.getProfile()
            },
            data: {
                isInfo: true,
                isPass: false,
                profile: {
                },
                avatar: {
                    src: '/images/no-avatar.png',
                    file: null,
                    height: 150,
                    width: 150
                },
                password: '',
                password_old: '',
                password_new: '',
                password_confirm: '',
                view: 10,
                page: 1,
                pass_type: 'password',
            },
            watch: {
            },
            methods: {
                changeState(s = 0) {
                    let _that = this
                    switch (s) {
                        case 1:
                            _that.isPass = true
                            _that.isInfo = false
                            break;
                        default:
                            _that.isPass = false
                            _that.isInfo = true
                            break;
                    }
                    //console.log(s);
                },
                getProfile() {
                     let _url = '@Url.Action("GetProfile","Home")'
                     axios.get(_url)
                         .then(response =>{
                             //console.log(response.data);
                             if(response.data.StatusCode){
                                 this.profile = response.data.Data
                                 this.avatar.src = this.profile.Avatar
                                 this.avatar.file = this.profile.Avatar
                             }
                         }).catch(e =>{})
                    //this.avatar.src = this.profile.avatar
                    //this.avatar.file = this.profile.avatar
                },
                updateProfile() {
                    let _url = '@Url.Action("SaveProfile","Home")'
                    let _form = new FormData()
                    _form.append("FullName", this.profile.FullName);
                    _form.append("Phone", this.profile.Phone);
                    _form.append("Skype", this.profile.Skype);
                    _form.append("ZoomID", this.profile.ZoomID);
                    if (this.avatar.file) {
                        _form.append('fileUpload', this.avatar.file)
                    }
                    let _headers = {
                        headers: {
                            'Content-Type': 'multipart/form-data'
                        }
                    }
                    axios.post(_url, _form, _headers)
                        .then(response => {
                            if (response.data.Error == null) {
                                Swal.fire("Đã cập nhật thông tin", "" ,"success");
                            }
                            else
                                Swal.fire(response.data.Error, "" ,"error");
                        }).catch(e => { })
                },
                updatePassword() {
                    let _url = '@Url.Action("ChangePassword","Home")'
                    let _form = new FormData()
                    _form.append("oldpass", this.password_old);
                    _form.append("newpass", this.password_new);
                    _form.append("retypepass", this.password_confirm);
                    axios.post(_url, _form)
                        .then(response => {
                            if (response.data.Error == null) {
                                Swal.fire("Đã cập nhật mật khẩu", "", "success");
                                this.password_old = ''
                                this.password_new = ''
                                this.password_confirm = ''
                            }
                            else
                                Swal.fire(response.data.Error, "" ,"error");
                        }).catch(e => { })
                },
                errorImgUrl() {
                    this.avatar.src = null;
                    this.avatar.file = null;
                    this.$forceUpdate();
                },
                previewThumb() {
                    let _that = this
                    if (event.target.files[0]['type'] === 'image/jpeg' ||
                        event.target.files[0]['type'] === 'image/png' ||
                        event.target.files[0]['type'] === 'image/gif') {
                    } else {
                        return
                    }
                    _that.avatar.src = URL.createObjectURL(event.target.files[0])
                    _that.avatar.file = event.target.files[0]
                    var src = URL.createObjectURL(event.target.files[0])
                    //console.log(this.avatar);
                    setTimeout(function () {
                        var imgTesting = new Image();
                        imgTesting.src = src;
                        setTimeout(function () {
                            _that.avatar.height = imgTesting.height;
                            _that.avatar.width = imgTesting.width;
                        }, 1000);
                    }, 1000);
                },
                logout() {
                    window.location.href = '/logout'
                },
                showPass(t = 1) {
                    if (t) {
                        this.pass_type = 'text'
                    } else {
                        this.pass_type = 'password'
                    }
                },
            }
        });
    </script>
}
