@{
    ViewData["Title"] = ViewBag.Title;
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    var Data = ViewBag.Data as BaseCustomerEntity.Database.CourseEntity;
    var listChapter = ViewBag.Chapter as List<BaseCustomerEntity.Database.CourseChapterEntity>;
    var isLock = Data.IsActive;// || Data.IsUsed;
    var user = ViewBag.User as string;
    string center = ViewContext.RouteData.Values["basis"]?.ToString();
    string processUrl(string act, string ctrl, Object param = null)
    {
        string url = Url.Action(act, ctrl, param);

        return $"/{center}{url}";
    }
}
<style>
    .red-color {
        color: #D03239 !important;
    }

    .red-bg {
        background-color: #D03239 !important;
    }

    .blue-color {
        color: #0194e4 !important;
    }

    .blue-bg {
        background-color: #0194e4 !important;
    }

    .green-color {
        color: #00bf7a !important;
    }

    .green-bg {
        background-color: #00bf7a !important;
    }

    .yellow-color {
        color: #F7971E !important;
    }

    .yellow-bg {
        background-color: #F7971E !important;
    }
</style>

<div class="left-col" style="scroll-behavior: smooth;">
    <div class="page-title">
        <h1><a href="@processUrl("Index","Curriculum")" class="blue-color">Bài giảng</a> / @ViewData["Title"]</h1>
    </div>
    <div class="main-container">
        @*<div class="sub-sidebar">
                @await Html.PartialAsync("_subSidebarTeacher-Curriculum")
            </div>*@

        <div id="main-route" class="main-route">
            <div class="lane_holder" id="cid_0" cid="0">
                <div class="lane_header">
                    <div class="lane_title">Begin</div>
                    <div class="lane_toggle" onclick="toggleLane(this)"></div>
                </div>
            </div>
        </div>

        <style>
            .main-route {
                overflow: auto;
            }

            .lane_holder {
                display: inline-block;
                vertical-align: top;
            }

                .lane_holder > .lane_list {
                    padding-left: 5px;
                    display: none;
                }

                .lane_holder.expand > .lane_list {
                    display: block;
                }

            .lane_header {
                /*margin: 5px;*/
                /*padding-right: 25px;*/
                position: relative;
            }

            .lane_title {
                padding: 3px 7px;
                background: orange;
                border: solid 1px #333;
                cursor: pointer;
                /*border-radius: 5px;*/
                padding-right: 30px;
                height: 28px;
            }


            .lane_toggle {
                position: absolute;
                top: 1px;
                height: 26px;
                width: 26px;
                right: 1px;
                line-height: 26px;
                text-align: center;
                line-height: 17px;
                font-size: 30px;
                cursor: pointer;
                background: grey;
                /*border-radius: 5px;*/
                display: none;
                border-radius: 13px;
            }

            .lane_holder.hasChild > .lane_header:hover > .lane_toggle {
                display: block;
            }

            .lane_holder.expand > .lane_header > .lane_toggle::before {
                content: '-'
            }

            .lane_toggle::before {
                content: '+'
            }

            .route_lane, .chapter_holder {
                width: auto;
                min-width: 100px;
                background-color: grey;
                /*border: solid 1px #333;*/
                min-height: 26px;
                /*flex-direction: row;*/
                /*display: flex;*/
                white-space: nowrap;
                /*padding: 10px;*/
                overflow: hidden;
                text-overflow: ellipsis;
                padding: 3px 0;
                border-bottom: dotted 1px #CCC;
            }

            .chapter_holder {
                background-color: #ddd;
                margin-top: 10px;
            }

            .chapter_route, .lane_placeholder {
                cursor: pointer;
                width: auto;
                min-width: 50px;
                border: solid;
                min-height: 24px;
                /*height: 100%;*/
                display: inline-block;
                margin: 3px;
                vertical-align: top;
                white-space: break-spaces;
            }

            .chapter_route {
                background-color: orange;
            }

            .lane_placeholder {
                border: 1px dotted black;
                height: 28px;
                margin: 0;
            }
        </style>

    </div>

    <i class="fas fa-angle-double-up" onclick="fnbackToTop()" id="backToTop"></i>
</div>
@*<script src="~/js/jquery-sortable.js"></script>*@
@*<style>
        body {
            background-color: #f4f4f4;
        }

        ul {
            margin: 0;
            padding: 0;
            list-style: none;
        }

            ul.containers li {
                padding: 20px;
                margin: 0;
                border: 3px solid red;
                background-color: #fff;
            }

            ul.rows {
                min-height: 80px;
            }

                ul.rows li {
                    padding: 20px;
                    margin: 0;
                    border: 3px solid blue;
                    background-color: #fff;
                }

            ul li {
                margin-bottom: 15px !important;
                cursor: move;
            }

                ul li:last-child {
                    margin-bottom: 0;
                }

        .ui-state-highlight-container {
            border: 2px dashed red !important;
        }

        .ui-state-highlight-row {
            border: 2px dashed blue !important;
        }

        .button {
            display: block;
        }
    </style>*@



<script>

    var chapters = [];
    var lessons = [];
    var wrapper = $('#course-detail ul');
    var modulesBody = $('.modules-wrapper');

    var __start = function (event, ui, chapid) {
        var start_pos = ui.item.index();

        ui.item.data('prev', start_pos);
        var parent = $('#' + ui.item.attr('id')).parent();
        ui.item.data('pid', $(parent.attr('id')));

        console.log($(parent.attr('id')));

        if (parent.children('.lane_holder').length > 1 && parent.parent().find('.route_lane:empty').length == 0) {

            var newContainment = $('<div>', { class: 'lane-item route_lane' })
            parent.parent().append(newContainment);
            console.log(newContainment);
            __initContainment(newContainment, $(parent.attr('id')) );

            //parent.parent().append($(parent).clone().empty());
            //$(".route_lane").sortable();
            //$(".route_lane").sortable('refresh');
        }
    };

    var __initContainment = function (obj, chapid) {
        console.log(obj);
        $(obj).sortable({
            connectWith: "#cid_" + chapid + " > .lane_list > .route_lane",
            //containment: "#cid_" + chapid + " > .lane_list",
            handle: ".lane_title",
            cancel: ".lane_toggle",
            placeholder: "lane_placeholder ui-corner-all",
            start: function (event, ui) {
                __start(event, ui, chapid);
            },
            change: function (event, ui) { },
            update: function (event, ui) {
                __update(event, ui, chapid);
            }
        });
    }

    var __update = function (event, ui, chapid) {
        var toPos = ui.item.index();
        var toLane = $('#' + ui.item.attr('id')).parent().attr('id');
        var prevPos = ui.item.data('prev');
        var prevLane = ui.item.data('pid');

        if (ui.sender !== null) {

            $('#' + ui.item.attr('id')).parent().parent().find('.route_lane:empty').remove();
            $(".route_lane").sortable()
                .sortable('refresh');
                //.sortable('option', 'sort', null);
            //console.log('destroy');
            //__init(chapid);

            //console.log('from ' + ui.sender.attr('id') + ' to ' + $('#' + currentDragged).parent().attr('id'));
            //$(".route_lane").sortable();
            //$(".route_lane").sortable('refresh');
        }
        else {
            if (prevLane == toLane && prevPos != toPos) {
                console.log('change Pos : ' + prevPos + ' to ' + toPos);
            }
        }
    }

    var __init = function (chapid) {
        console.log("#cid_" + chapid + " > .lane_list > .route_lane");
        $("#cid_" + chapid + " > .lane_list > .route_lane").sortable({
            connectWith: "#cid_" + chapid + " > .lane_list > .route_lane",
            //containment: "#cid_" + chapid + " > .lane_list",
            handle: ".lane_title",
            cancel: ".lane_toggle",
            placeholder: "lane_placeholder ui-corner-all",
            start: function (event, ui) {
                __start(event, ui, chapid);
            },
            change: function (event, ui) { },
            update: function (event, ui) {
                __update(event, ui, chapid);
            }
        });
    }


    function LoadData() {
        chapters = [];
        lessons = [];

        $.ajax({
            type: "POST",
            url: '@processUrl("GetCourseDetail", "Curriculum")',
            data: {ID: "@Data.ID"},
            dataType:"json",
            success: function (data) {
                hideModal();
                modulesBody.html("");

                chapters = data.Data.Chapters;
                lessons = data.Data.Lessons;

                //modulesBody.append(rootContent);


                if (chapters.length > 0) {
                    for (i = 0; i < chapters.length; ++i) {
                        var chapter = chapters[i];

                        var parentId = chapter.ParentID;
                        console.log(parentId);
                        ////if ($('[cid=' + parentId + '] > ol').length == 0)
                        ////    $('[cid=' + parentId + ']').append($('<ol>').append($('<li>', { cid: chapter.ID, text: chapter.Name })));
                        ////else
                        //    $('[cid=' + parentId + ']').append($('<li>', { cid: chapter.ID, text: chapter.Name }).append($('<ol>')));



                        var chaproute = $('<div>', { class: 'lane_holder', id: 'cid_' + chapter.ID, cid: chapter.ID })
                            .append($('<div>', { class: 'lane_header' })
                                .append($('<div>', { class: 'lane_title', text: chapter.Name }))
                                .append($('<div>', { class: 'lane_toggle', onclick: 'toggleLane(this)' })));

                        if (chapter.ConnectID == null) {
                            if (chapter.ParentID != null) {
                                var laneList = $('.lane_holder#cid_' + chapter.ParentID + ' > .lane_list');
                                if (laneList.length == 0) {
                                    $('.lane_holder#cid_' + chapter.ParentID).addClass('hasChild');
                                    $('.lane_holder#cid_' + chapter.ParentID).append($('<div>', { class: 'lane_list' }));
                                    laneList = $('.lane_holder#cid_' + chapter.ParentID + ' > .lane_list');
                                }
                                laneList.append($('<div>', { class: 'lane-item route_lane' }).append(chaproute));
                            }
                            else {
                                $('cid_' + chapter.ConnectID).after(chapter)
                            }
                        }

                        //__init(chapter.ID);
                        //console.log(chapter);
                    }
                    //__init("0");
                }

                $(".lane_title").disableSelection();
                $('.lane_title').dblclick(function () {
                    var result = prompt("Nhập thời lượng học (ngày)");
                    var intR = parseInt(result);
                    $(this).css('width', intR * 10 + 'px');
                    }
                )


            },
            error: function() {
            }
        });
    };

    $(document).ready(function () {
        LoadData();
    });


    var oldContainer;
    $("ol.nested_with_switch").sortable({
        group: 'nested',
        afterMove: function (placeholder, container) {
            if (oldContainer != container) {
                if (oldContainer)
                    oldContainer.el.removeClass("active");
                container.el.addClass("active");

                oldContainer = container;
            }
        },
        onDrop: function ($item, container, _super) {
            container.el.removeClass("active");
            _super($item, container);
        }
    });

    $(".switch-container").on("click", ".switch", function (e) {
        var method = $(this).hasClass("active") ? "enable" : "disable";
        $(e.delegateTarget).next().sortable(method);
    });


    function toggleLane(obj) {
        $(obj).parent().parent().toggleClass('expand');
    }
</script>

<style>
    #accordionSidebar .nav-item .nav-link #icon-submenu .fas {
        top: 0;
    }

    .sidebar .nav-item .nav-link {
        padding: 0.5rem 1rem;
    }

    .sidebar .nav-item .bg-white py-2 {
        padding: 0;
    }

    .collapse-item {
        position: relative;
    }

    #icon-submenu {
        top: 7px;
        right: 20px;
    }

        #icon-submenu .fas {
            padding: 5px;
            top: -1px;
            position: relative;
            margin: 0 3px;
        }

    .sidebar .nav-item .collapse .collapse-inner {
        padding: 0;
    }

    #backToTop {
        display: none;
        position: fixed;
        bottom: 40px;
        right: 30px;
        z-index: 99;
        font-size: 30px;
        border: none;
        outline: none;
        background-color: #CCC;
        color: white;
        cursor: pointer;
        padding: 7px 15px;
        border-radius: 4px;
        position: fixed;
        opacity: 0.8;
    }
</style>

