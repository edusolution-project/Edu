
@{
    ViewData["Title"] = "Kho đề";
    Layout = "~/Views/Shared/_LayoutTeacher_NewUI.cshtml";

    var subjects = ViewBag.Subjects as List<BaseCustomerEntity.Database.SubjectEntity>;
    var grades = ViewBag.Grades as List<BaseCustomerEntity.Database.GradeEntity>;
    var classlist = ViewBag.ClassList as List<BaseCustomerEntity.Database.ClassEntity>;
    var currentUser = ViewBag.CurrentUser as BaseCustomerEntity.Database.TeacherEntity;
    string center = ViewContext.RouteData.Values["basis"]?.ToString();
    string processUrl(string act, string ctrl, Object param = null)
    {
        string url = Url.Action(act, ctrl, param);

        return $"/{center}{url}";
    }
}

<!-- Include vue-quill-editor -->
<script src="/libs/quill-editor/quill.min.js"></script>
<script src="/libs/quill-editor/quill-vue.min.js"></script>
<link href="/libs/quill-editor/quill.core.css" rel="stylesheet">
<link href="/libs/quill-editor/quill.snow.css" rel="stylesheet">
<link href="/libs/quill-editor/quill.bubble.css" rel="stylesheet">

<script>
    setActiveMenu("curriculum");
</script>

<section class="module" id="dashboard_content">
    @*<div class="h4 m-3" v-cloak cloak-holder>
            <i class="fas fa-sync fa-spin"></i> Đang nạp dữ liệu ...
        </div>*@
    <div class="card-header border-b">

        <div class="flex flex-wrap align-items-center">
            <div class="tab bg-none col-md-12 mt-2">
                <ul class="flex flex-row">
                    <li v-bind:class="{active : tab[0]}"><a href="javascript:;" title="Kì thi" v-on:click="tabChange(0)">Kì thi</a></li>
                    <li v-bind:class="{active : tab[1]}"><a href="javascript:;" title="Ngân hàng câu hỏi" v-on:click="tabChange(1)">Ngân hàng câu hỏi</a></li>
                    <li v-bind:class="{active : tab[2]}"><a href="javascript:;" title="Ma trận đề" v-on:click="tabChange(2)">Ma trận đề</a></li>
                </ul>
            </div>
        </div>

        <div class="flex flex-row flex-wrap align-items-center">
            <div class="box filter-box w-152 m-1 ">
                <select v-model="subject">
                    <option value="">Chương trình</option>
                    <option v-for="(item,k) in list_subject" :value="item.ID">{{item.Name}}</option>
                </select>
            </div>
            <div class="box filter-box w-152 m-1">
                <select name="" v-model="grade">
                    <option value="">Cấp độ</option>
                    <option v-for="(item,k) in list_grades_full" :value="item.ID" v-if="item.SubjectID == subject">{{item.Name}}</option>
                </select>
            </div>
            <div class="search-box m-1">
                <button><i class="ic ic-find"></i></button>
                @*<input type="text" name="" v-model="searchTerm" placeholder="Tên bài giảng cần tìm">*@
            </div>
            <div class="ml-0 ml-md-auto">
                <b-button class="btn-addevent btn-sm m-1" v-on:click="showEditItem()"><i class="ti-plus"></i>Thêm mới</b-button>
                @*<b-button class="btn-addevent btn-sm m-1 ml-0 ml-md-auto" v-on:click="showEditItem()"><i class="ti-plus"></i> Thêm bài giảng</b-button>*@
            </div>
        </div>
    </div>

    <!--Danh sách kì thì-->
    <div class="card-body" v-if="tab[0]">
        <template v-if="list_exams.length > 0">
            <table id="ed_table" class="table">
                <thead>
                    <tr>
                        <th class="text-center align-middle" style="width:30px">#</th>
                        <th class="text-center align-middle">Tên kì thi</th>
                        <th class="text-center align-middle">Ngày tạo</th>
                        <th class="text-center align-middle">Thời gian</th>
                        <th class="text-center align-middle">Lượt làm</th>
                        <th class="text-center align-middle">Số mã đề</th>
                        <th class="text-center align-middle">Lớp</th>
                        <th class="text-center align-middle">Người tạo</th>
                        <th class="text-center align-middle">Tác vụ</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(exam,k) in list_exams">
                        <td class="text-center align-middle">{{k+1}}</td>
                        <td class="text-center align-middle">
                            <a href="javascript:;" v-on:click="showListExam(exam.ListExam)">{{exam.Name}}</a>
                        </td>
                        <td class="text-center align-middle">{{formatShortDate(exam.Created)}}</td>
                        <td class="text-center align-middle">{{exam.Timer}}</td>
                        <td class="text-center align-middle">{{exam.Limit}}</td>
                        <td class="text-center align-middle">{{exam.TotalExam}}</td>
                        <td class="text-center align-middle">{{exam.ClassName}}</td>
                        <td class="text-center align-middle">{{exam.UserName}}</td>
                        <td class="text-center align-middle">
                            <button type="button" class="btn-act btn-edit" title="Sửa"><i class="ti-pencil-alt"></i></button>
                            <button type="button" class="btn-act btn-edit" title="Cài đặt" v-on:click="setupExam(exam)"><i class="ti-settings"></i></button>
                            <button type="button" class="btn-act btn-trash" title="Xoá"><i class="ti-trash"></i></button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </template>
        <template v-else>
            Không có dữ liệu về các kì thi.
        </template>
    </div>

    <div class="card-body" v-if="tab[1]">
        <template>
            <table id="ed_table" class="table">
                <thead>
                    <tr class="text-sm-center">
                        @*<td style="width:35px"><input type="checkbox" /></td>*@
                        <th>#</th>
                        <th>Tên</th>
                        <th>Cấp độ</th>
                        <th>Chương trình</th>
                        <th>Số câu</th>
                        <th style="width:150px;max-width:150px">Tác vụ</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item,k) in dataResult" :id="item.ID">
                        <td>{{(page - 1) * view + (k+1)}}</td>
                        <td><a :href="'@processUrl("StorageQuestion","ExamManage")/' + item.ID">{{item.Name}}</a></td>
                        <td>{{item.GradeName}}</td>
                        <td>{{item.SubjectName}}</td>
                        <td>{{item.TotalQuestion}}</td>
                        <td>
                            <div class="btn-group" style="display:block">
                                <a class="btn-act btn-edit" title="Sửa" href="javascript:;" v-on:click="showEditItem(item)"><i class="fas fa-edit"></i></a>
                                <a class="btn-act btn-edit" title="Tạo bài kiểm tra" href="javascript:;" v-on:click="showCreateExam(item.ID)"><i class="fas fa-pen-fancy"></i></a>
                                <button class="btn-act btn-trash" title="Xóa" v-on:click="removeItem(item)"><i class="fas fa-trash-alt"></i></button>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="box margin-t20 flex">
                <div class="paging-view">
                    Hiển thị:
                    <select v-model="view" v-on:change="getData()">
                        <option value="10">10 kết quả</option>
                        <option value="20">20 kết quả</option>
                        <option value="30">30 kết quả</option>
                    </select>
                </div>
                <div class="page-control">
                    <div class="right">
                        <b-pagination v-model="page"
                                      :total-rows="totalRec"
                                      :per-page="view"
                                      v-on:input="getData()"></b-pagination>
                    </div>
                </div>
            </div>
        </template>
    </div>

    <!--Ma trận-->
    <div class="card-body" v-if="tab[2]">
        <table id="ed_table" class="table">
            <thead>
                <tr class="text-sm-center">
                    <th>#</th>
                    <th>Tên</th>
                    <th>Người tạo</th>
                    <th style="width:150px;max-width:150px">Tác vụ</th>
                </tr>
            </thead>
            <tbody>
                @*<tr>
                        <td>1</td>
                        <td v-on:click="showModalExam()">Ma trận đề thi giữa kì khối 12</td>
                        <td>Nguyễn Văn Hoà</td>
                        <td>
                            <div class="btn-group" style="display:block">
                                <a class="btn-act btn-edit" title="Sửa" href="javascript:;" v-on:click="showEditItem(item)"><i class="fas fa-edit"></i></a>
                                <a class="btn-act btn-edit" title="Tạo bài kiểm tra" href="javascript:;" v-on:click="showCreateExam(item.ID)"><i class="fas fa-pen-fancy"></i></a>
                                <button class="btn-act btn-trash" title="Xóa" v-on:click="removeItem(item)"><i class="fas fa-trash-alt"></i></button>
                            </div>
                        </td>
                    </tr>*@
                <tr v-for="(matrix,k) in list_matrixs">
                    <td>{{k+1}}</td>
                    <td v-on:click="showModalExam(matrix.DetailFormat,matrix.Name,true)">{{matrix.Name}}</td>
                    <td></td>
                    <td>
                        <div class="btn-group" style="display:block">
                            <a class="btn-act btn-edit" title="Sửa" href="javascript:;" v-on:click="showModalExam(matrix.DetailFormat,matrix.Name)"><i class="fas fa-edit"></i></a>
                            <button class="btn-act btn-trash" title="Xóa" v-on:click="removeMatrix(matrix.ID,matrix.Name)"><i class="fas fa-trash-alt"></i></button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="box margin-t20 flex">
            <div class="paging-view">
                Hiển thị:
                <select v-model="view" v-on:change="getData()">
                    <option value="10">10 kết quả</option>
                    <option value="20">20 kết quả</option>
                    <option value="30">30 kết quả</option>
                </select>
            </div>
            <div class="page-control">
                <div class="right">
                    <b-pagination v-model="page"
                                  :total-rows="totalRec"
                                  :per-page="view"
                                  v-on:input="getData()"></b-pagination>
                </div>
            </div>
        </div>
    </div>

</section>

@section Scripts{
    <script>
        
        new Vue({
            el: "#main_content",
            mounted() {
                this.list_subject = @Html.Raw(Json.Serialize(subjects));
                this.list_grades_full = @Html.Raw(Json.Serialize(grades));
                this.currentUser = @Html.Raw(Json.Serialize(currentUser));
                this.list_classes = @Html.Raw(Json.Serialize(classlist));
                //this.getData();
                this.getExamManage()
                @*this.list_skills = @Html.Raw(Json.Serialize(skills));
                this.list_courses = @Html.Raw(Json.Serialize(courses));*@
            },
            components: {
                //Multiselect
            },
            data: {
                isLoading: false,
                currentUser:[],
                list_subject: [],
                list_grades_full:[],
                addItem: {
                    ID: '',
                    Name: '',
                    SubjectID: '',
                    GradeID: '',
                    Description: '',
                    CreateUser: ''
                },
                editorOption: {
                    theme: 'snow'
                },
                list_classes: [],
                subject: '',
                grade: '',
                view: 30,
                page: 1,
                totalRec: 0,
                searchTerm: '',
                dataResult: [],
                createExam: {
                    startTime: '',
                    endTime: '',
                    totalEasy: 0,
                    totalNormal: 0,
                    totalHard: 0,
                    totalQuestion:0,
                    classID: [],
                    name: '',
                    countQuestion: '',
                    timer: '', //
                    limit: '',
                    etype: 0, // mặc định là hệ số 1
                    multiple: '',
                    nameClass: '',
                    targetClasses: [],
                    displaySelect: false,
                    selectAll: false,
                    totalExam: 1, //số đề, ít nhất là 1
                    examQuestionArchiveID: '',// ma kho de
                    title:''
                },
                formatExam: {
                    titleFormat: '',//tên ma trận đề
                    titleExam: '', //tên kì thi, tên bài kiểm tra
                    timer: 1,
                    limit: 1,
                    template: '@BaseCustomerEntity.Database.CLASSSUBJECT_TYPE.EXAM',
                    totalExam: 1,
                    subject:'',
                    format: {
                        level: '',
                        tag: '',
                        levelKnow: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //nhận biết
                        levelUnderstanding: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //thông hiểu
                        levelManipulate: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //vận dụng
                        levelManipulateHighly: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //vận dụng cao
                        total: 0
                    }
                },
                list_Tags: [],
                tab: [true, false, false],
                list_matrixs: {
                    name: '',
                    id: '',
                    created: '',
                    detailFormat:[]
                },
                list_detailMatrix: {
                    name: '',
                    isHideFooter: false,
                    data: []
                },
                list_exams: [],
                list_detailExams: [],
                data_setupExam: {
                    id: '',
                    targetClasses: [],
                    nameClass: '',
                    nameExam: '',
                    startTime: '',
                    endTime: '',
                    timer: '',
                    limit: '',
                    selectAll: false
                }
            },
            computed: {},
            watch: {
            },
            methods: {
                getData() {
                    let _that = this
                    let _form = new FormData
                    _form.append('GradeID', _that.grade)
                    _form.append('SubjectID', _that.subject)
                    _form.append('PageSize', _that.view)
                    _form.append('PageIndex', _that.page)
                    _form.append('SearchText', _that.searchTerm)
                    let _url = '@processUrl("GetList", "ExamManage")'
                    axios.post(_url, _form)
                        .then(response => {
                            //debugger
                            var data = response.data.Data
                            var model = response.data.Model
                            _that.dataResult = data
                            this.dataResult = _that.dataResult
                        }).catch(e => {
                            alert(e)
                        })
                },
                showEditItem(item) {
                    let _that = this
                    this.addItem.CreateUser = this.currentUser.ID
                    this.addItem.displaySelect = false
                    this.addItem.SelectAll = false
                    if (!item) {
                        this.addItem.Name = ""
                        this.addItem.SubjectID = ""
                        this.addItem.GradeID = ""
                        this.addItem.Description = ""
                        this.addItem.NameClass = ""
                        this.addItem.TargetClasses = []
                    }
                    else {

                    }
                    _that.$bvModal.show('modal_event')
                },
                showCreateExam(itemID,item) {
                    let _that = this
                    this.getOptionFormatExam(itemID)
                    this.getCurrentClass();
                    if (item == undefined) {
                        _that.formatExam = {
                            examQuestionArchiveID: itemID,
                            titleFormat: '',
                            titleExam: '',
                            timer: 1,
                            limit: 1,
                            template: '@BaseCustomerEntity.Database.EXAM_TYPE.ISEXAM',
                            totalExam: 1,
                            format:[
                            {
                                level: '',
                                tag: '',
                                    levelKnow: {
                                        theory: 0,//lý thuyết
                                        exercise: 0 //bài tập
                                    }, //nhận biết
                                    levelUnderstanding: {
                                        theory: 0,//lý thuyết
                                        exercise: 0 //bài tập
                                    }, //thông hiểu
                                    levelManipulate: {
                                        theory: 0,//lý thuyết
                                        exercise: 0 //bài tập
                                    }, //vận dụng
                                    levelManipulateHighly: {
                                        theory: 0,//lý thuyết
                                        exercise: 0 //bài tập
                                    }, //vận dụng cao
                                total: 0
                                }
                            ]
                        }
                    }
                    //debugger
                    _that.$bvModal.show('create-exam-modal-xl')
                },
                saveItem() {
                    let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("CreateOrUpdate","ExamManage")'
                    _form.append("Name", _that.addItem.Name)
                    _form.append("SubjectID", _that.addItem.SubjectID)
                    _form.append("GradeID", _that.addItem.GradeID)
                    _form.append("Description", _that.addItem.Description)
                    //debugger
                    //for (var i = 0; i < _that.addItem.TargetClasses.length; i++) {
                    //    var item = _that.addItem.TargetClasses[i]
                    //    _form.append("TargetClasses", item)
                    //}
                    axios.post(_url, _form)
                        .then(response => {
                            var item = response.data.Data
                            var filter = this.dataResult.find(x => x.ID == item.ID)
                            if (filter == null) {
                                var array = []
                                array.push(item)
                                //array.concat(this.dataResult)
                                for (var i = 0; i < this.dataResult.length; i++) {
                                    array.push(this.dataResult[i])
                                }
                                this.dataResult = array
                            }
                            _that.isLoading = false

                        }).catch(e => {
                            _that.isLoading = false;
                            alert("Error: " + e)
                        })
                    _that.hideModal();
                },
                removeItem(item) {
                    if (window.confirm("Thầy/Cô @Html.Raw(currentUser == null ? "" : currentUser.FullName) xác nhận muốn xoá " + item.Name + "?")) {
                        let _that = this
                        let _form = new FormData
                        _form.append("IDs", item.ID)
                        let _url = '@processUrl("DeleteExamQuestionArchive", "ExamManage")'
                        axios.post(_url, _form)
                            .then(response => {
                                var data = response.data.IDs
                                if (data.length > 0) {
                                    for (var i = 0; i < data.length; i++) {
                                        var item = data[i]
                                        $("#" + item).remove()
                                    }
                                }
                                else {
                                    alert(response.data.Msg)
                                }
                            }).catch(e => {
                                alert(e)
                            })
                    }
                },
                showCoefficient() {
                    var typeExam = this.createExam.etype;
                    if (typeExam == '@BaseCustomerEntity.Database.LESSON_ETYPE.PRACTICE') {
                        this.createExam.multiple = '1'
                    }
                    else if (typeExam == '@BaseCustomerEntity.Database.LESSON_ETYPE.WEEKLY') {
                        this.createExam.multiple = '2';
                    }
                    else if (typeExam == '@BaseCustomerEntity.Database.LESSON_ETYPE.CHECKPOINT') {
                        this.createExam.multiple = '3';
                    }
                    else {
                        return false;
                    }
                },
                tabChange(a = 0) {
                    let _that = this
                    _that.tab.forEach(function (item, k) {
                        _that.tab[k] = false;
                    })
                    this.tab = _that.tab
                    this.tab[a] = true
                    switch (a) {
                        case 0:
                            history.replaceState({ tab: a }, "Kì thi", "#exam");
                            this.getExamManage();
                            break;
                        case 1:
                            history.replaceState({ tab: a }, "Ngân hàng câu hỏi", "#bank-question");
                            this.getData()
                            break;
                        case 2:
                            history.replaceState({ tab: a }, "Ma trận đề", "#matrix-exam");
                            this.getMatrixExams()
                            break;
                    }
                    this.$forceUpdate()
                },
                //
                createNewExam(isNew) {
                    let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("CreateOrUpdateExam", "ExamManage")'
                    _form.append("ExamQuestionArchiveID", _that.formatExam.examQuestionArchiveID)
                    //_form.append("ExamQuestionArchiveID", _that.formatExam.titleFormat)
                    _form.append("Title", _that.formatExam.titleExam)
                    _form.append("Timer", _that.formatExam.timer)
                    _form.append("Limit", _that.formatExam.limit)
                    _form.append("Template", _that.formatExam.template)
                    _form.append("TotalExam", _that.formatExam.totalExam)
                    _form.append("isNew", isNew)
                    for (var i = 0; i < _that.formatExam.format.length; i++) {
                        var itemFormat = _that.formatExam.format[i]
                        //debugger
                        _form.append("matrixExams[" + i + "].Level", itemFormat.level)
                        _form.append("matrixExams[" + i + "].Tags", itemFormat.tag)
                        _form.append("matrixExams[" + i + "].Know.Theory", itemFormat.levelKnow.theory)
                        _form.append("matrixExams[" + i + "].Know.Exercise", itemFormat.levelKnow.exercise)
                        //debugger
                        _form.append("matrixExams[" + i + "].Understanding.Theory", itemFormat.levelUnderstanding.theory)
                        _form.append("matrixExams[" + i + "].Understanding.Exercise", itemFormat.levelUnderstanding.exercise)
                        _form.append("matrixExams[" + i + "].Manipulate.Theory", itemFormat.levelManipulate.theory)
                        _form.append("matrixExams[" + i + "].Manipulate.Exercise", itemFormat.levelManipulate.exercise)
                        _form.append("matrixExams[" + i + "].ManipulateHighly.Theory", itemFormat.levelManipulateHighly.theory)
                        _form.append("matrixExams[" + i + "].ManipulateHighly.Exercise", itemFormat.levelManipulateHighly.exercise)
                        _form.append("matrixExams[" + i + "].Name", _that.formatExam.titleFormat)
                    }
                    axios.post(_url, _form)
                        .then(response =>
                        {
                            //debugger
                        })
                        .catch(e => { alert(e) })
                },
                addTdFormatExam(obj) {
                    //if (obj.length > 0) {
                    var currentFormatExam = this.formatExam.format
                    var template = {
                        level: '',
                        tag: '',
                        levelKnow: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //nhận biết
                        levelUnderstanding: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //thông hiểu
                        levelManipulate: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //vận dụng
                        levelManipulateHighly: {
                            theory: 0,//lý thuyết
                            exercise: 0 //bài tập
                        }, //vận dụng cao
                        total: 0
                    }
                    currentFormatExam.push(template)
                    //}
                },
                getOptionFormatExam(id) {
                    let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("GetOptionFormatExam", "ExamManage")'
                    _form.append("ID", id)
                    axios.post(_url, _form)
                        .then(response => {
                            var stt = response.data.Status
                            if (stt) {
                                //var data = response.data.Data
                                //this.list_Tags = data
                            }
                            else {
                                //alert(response.data.Msg)
                            }
                        })
                        .catch(e => {
                            //alert(e)
                        })
                },
                removeOption(k) {
                    this.formatExam.format.splice(k, 1);
                },
                refreshOption(k) {
                    var option = this.formatExam.format[k]
                    option.level = ''
                    option.levelKnow = {
                        theory: 0,//lý thuyết
                        exercise: 0 //bài tập
                    }
                    option.levelUnderstanding = {
                        theory: 0,//lý thuyết
                        exercise: 0 //bài tập
                    }
                    option.levelManipulate = {
                        theory: 0,//lý thuyết
                        exercise: 0 //bài tập
                    }
                    option.levelManipulateHighly = {
                        theory: 0,//lý thuyết
                        exercise: 0 //bài tập
                    }
                    option.tag = ''
                },
                getExamManage() {//load anh sach ki thi
                    let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("GetExamManage", "ExamManage")'
                    axios.post(_url, _form)
                        .then(response => {
                            //debugger
                            var stt = response.data.Status
                            if (stt) {
                                _that.list_exams = response.data.Data
                                _that.list_classes = response.data.Classes
                                this.list_exams = _that.list_exams
                                this.list_classes = _that.list_classes
                            }
                            else {
                                Swal.fire(
                                    'Lỗi',
                                    response.data.Msg,
                                    'error'
                                )
                            }
                        })
                        .catch(e => {
                            Swal.fire(
                                'Lỗi',
                                e,
                                'error'
                            )
                        })
                },
                getMatrixExams() {
                    let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("GetMatrixExams", "ExamManage")'
                    axios.post(_url, _form)
                        .then(response => {
                            var stt = response.data.Status
                            if (stt) {
                                var data = response.data.Data
                                _that.list_matrixs = data
                                this.list_matrixs = _that.list_matrixs
                                //debugger
                            }
                            else {
                                alert(response.data.Msg)
                            }
                        })
                        .catch(e => { alert(e) })
                },
                getCurrentClass() {
                    @*let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("GetClassList", "Class")'
                    axios.post(_url, _form)
                        .then(response => {
                            debugger
                        })
                        .catch(e => { alert(e) })*@
                },
                showModalExam(obj, name, isHideFooter) {
                    let _that = this
                    _that.list_detailMatrix.name = name
                    _that.list_detailMatrix.isHideFooter = isHideFooter
                    _that.list_detailMatrix.data = obj
                    _that.$bvModal.show('modal_exam')
                },
                removeMatrix(id,name) {
                    if (window.confirm("Bạn muốn xoá " + name + " ?")) {
                        let _that = this
                        let _form = new FormData()
                        _form.append("ID", id)
                        let _url = '@processUrl("RemoveMatrix","ExamManage")'
                        _that.isLoading = true
                        axios.post(_url, _form)
                            .then(response => {

                                _that.isLoading = false

                            }).catch(e => {
                                _that.isLoading = false;
                                alert("Error: " + e)
                            })
                        _that.hideModal();
                    }
                },
                showListExam(obj) {
                    let _that = this
                    if (obj.length > 0)
                        this.list_detailExams = obj
                    else
                        this.list_detailExams = []
                    _that.$bvModal.show('listexam-modal-xl')
                },
                setupExam(obj) {
                    let _that = this
                    this.data_setupExam.nameExam = obj.Name
                    this.data_setupExam.timer = obj.Timer
                    this.data_setupExam.limit = obj.Limit
                    this.data_setupExam.id = obj.ID
                    _that.$bvModal.show('setupexam-modal-xl')
                },
                SaveSetup() {
                    let _that = this
                    let _form = new FormData()
                    let _url = '@processUrl("","ExamManage")'

                },

                //support
                formatShortDate(date) {
                    if (moment(date) < moment(new Date(2000, 1, 1))) return "-"
                    return moment(date).format("DD/MM/YYYY")
                },
                formatShortDateYYYYMMDD(date) {
                    if (moment(date) < moment(new Date(2000, 1, 1))) return "-"
                    return moment(date).format("YYYY-MM-DD")
                },
                checkToggleAll() {
                    //if (this.createExam.selectAll) {
                    //    var _that = this
                    //    _that.createExam.targetClasses = []
                    //    if (_that.createExam.selectAll) {
                    //        _that.list_classes.forEach(function (item, pos) {
                    //            _that.createExam.targetClasses.push(item.ID)
                    //            _that.createExam.nameClass += item.Name + ", "
                    //        })
                    //    }
                    //}
                    //else {
                    //    this.createExam.nameClass = ""
                    //    this.createExam.targetClasses = []
                    //}
                },
                checkToggle(id) {
                    var sttInput = $("#" + id).prop("checked")
                    this.data_setupExam.selectAll = (this.data_setupExam.targetClasses.length == this.list_classes.length)
                    if (sttInput) {
                        this.data_setupExam.targetClasses.push(id)
                        var name = this.list_classes.find(x => x.ID == id).Name
                        this.data_setupExam.nameClass += name + "; "
                    }
                    else {
                        var index = this.data_setupExam.targetClasses.indexOf(id)
                        var name = this.list_classes.find(x => x.ID == id).Name + "; "
                        this.data_setupExam.nameClass = this.data_setupExam.nameClass.replace(name, "")
                        this.data_setupExam.targetClasses.splice(index,1)
                    }
                },
                toggleSelect() {
                    this.createExam.displaySelect = !this.createExam.displaySelect
                },
                hideModal() {
                    $('.close').click();
                },
                showSelectClass(id) {
                    var d_none = $("#" + id).attr('class')
                    if (d_none.includes("d-none")) {
                        var newnameclass = d_none.replace("d-none", "")
                        $("#" + id).attr('class', newnameclass)
                    }
                    else {
                        d_none += " d-none"
                        $("#" + id).attr('class', d_none)
                    }
                },
            }
        });
    </script>
    <style>
        #ed_table tr th:first-child,
        #ed_table tr td:first-child {
            width: 30px;
            max-width: 30px;
        }
    </style>
}

@section Modals{
    <b-modal id="modal_event" centered title="Kho đề thi" size="xl">
        <b-col class="form-group d-none">
            <input type="text" id="examQuestionArchiveID" v-model="createExam.examQuestionArchiveID" class="hide" disabled />
        </b-col>
        <b-col class="form-group">
            <label for="">Tên kho đề</label>
            <input type="text" name="" value="" class="form-control" placeholder="Tên bài giảng" v-model="addItem.Name">
        </b-col>
        <div class="d-flex">
            <b-col class="form-group">
                <label for="">Chương trình</label>
                <select class="form-control" v-model="addItem.SubjectID">
                    <option value="">Chọn chương trình</option>
                    <option v-for="(item,k) in list_subject" :value="item.ID">{{item.Name}}</option>
                </select>
            </b-col>
            <b-col class="form-group">
                <label for="">Cấp độ</label>
                <select class="form-control" v-model="addItem.GradeID">
                    <option value="">Chọn cấp độ</option>
                    <option v-for="(item,k) in list_grades_full" :value="item.ID" v-if="item.SubjectID == addItem.SubjectID">{{item.Name}}</option>
                </select>
            </b-col>
        </div>
        <div>
            <b-col class="form-group">
                <label for="">Giáo viên soạn thảo</label>
                <select class="form-control" v-model="addItem.CreateUser" style="z-index:1" disabled>
                    <option :value="currentUser.ID">{{currentUser.FullName}}</option>
                </select>
            </b-col>
        </div>

        @*<b-col class="form-group">
                <label for="">Mô tả</label>
                <quill-editor v-model="addItem.Description"
                              ref="quillEditorA"
                              :options="editorOption">
                </quill-editor>
            </b-col>*@
        <template v-slot:modal-footer="{ ok, cancel}">
            <template v-if="isLoading">
                <b-button>Đang thực hiện...</b-button>
            </template>
            <template v-else>
                <b-button variant="success" v-on:click="saveItem()">Lưu</b-button>
                <b-button variant="danger" v-on:click="hideModal()">Huỷ</b-button>
            </template>
        </template>
    </b-modal>

    <b-modal id="create-exam-modal-xl" size="xl" title="Tạo kỳ kiểm tra">
        <b-col>
            <div class="row">
                <div class="col-md-6">
                    <label class="label">Kì kiểm tra</label>
                    <input type="text" class="form-control" placeholder="Kì kiểm tra" v-model="formatExam.titleExam" />
                </div>
                <div class="col-md-6">
                    <label class="label">Tên ma trận đề</label>
                    <input type="text" class="form-control" placeholder="Tên ma trận đề" v-model="formatExam.titleFormat" />
                </div>
                @*<div class="col-md-6">
                        <label class="label">Tiêu đề</label>
                        <input type="text" class="form-control" placeholder="Tên đề" v-model="formatExam.titleExam"/>
                    </div>*@
            </div>

            <div class="row">
                <div class="col-md-6">
                    <label class="label">Thời gian làm bài</label>
                    <input type="number" min="1" class="form-control" v-model="formatExam.timer" />
                </div>
                <div class="col-md-6">
                    <label class="label">Lượt làm</label>
                    <input type="number" min="1" class="form-control" v-model="formatExam.limit" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <label class="label">Môn</label>
                    <select class="form-control" v-model="formatExam.Subject">
                        <option value="english">Tiếng anh</option>
                    </select>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <label class="label">Loại đề</label>
                    <select class="form-control" v-model="formatExam.template">
                        <option value="@BaseCustomerEntity.Database.CLASSSUBJECT_TYPE.EXAM">Kiểm tra</option>
                        <option value="@BaseCustomerEntity.Database.CLASSSUBJECT_TYPE.STANDARD">Luyện tập</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="label">Số đề</label>
                    <template v-if="formatExam.template == '@BaseCustomerEntity.Database.CLASSSUBJECT_TYPE.EXAM'">
                        <input type="number" min="1" class="form-control" v-model="formatExam.totalExam" />
                    </template>
                    <template v-else>
                        <input type="number" min="1" class="form-control" placeholder="Không giới hạn" disabled readonly />
                    </template>
                </div>
            </div>

            <div class="row mt-3">
                <label class="label">Cấu trúc</label>
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <td rowspan="2" class="text-center align-middle" style="width:35px">STT</td>
                            <td rowspan="2" class="text-center align-middle">Nội dung</td>
                            <td rowspan="2" class="text-center align-middle" style="width:80px">Số câu hỏi</td>
                            <td colspan="2" class="text-center align-middle">BL1 - Nhận biết</td>
                            <td colspan="2" class="text-center align-middle">BL2 - Thông hiểu</td>
                            <td colspan="2" class="text-center align-middle">BL3 - Vận dụng</td>
                            <td colspan="2" class="text-center align-middle">BL3+ - Vận dụng cao</td>
                            <td rowspan="2" class="text-center align-middle" style="width:85px">Tác vụ</td>
                        </tr>
                        <tr>
                            <td class="text-center align-middle" style="width:80px">LT</td>
                            <td class="text-center align-middle" style="width:80px">BT</td>
                            <td class="text-center align-middle" style="width:80px">LT</td>
                            <td class="text-center align-middle" style="width:80px">BT</td>
                            <td class="text-center align-middle" style="width:80px">LT</td>
                            <td class="text-center align-middle" style="width:80px">BT</td>
                            <td class="text-center align-middle" style="width:80px">LT</td>
                            <td class="text-center align-middle" style="width:80px">BT</td>
                        </tr>
                    </thead>

                    <tbody>
                        <tr v-for="(item,k) in formatExam.format" :id="'formatExam_' + k">
                            <td class="text-center align-middle">{{k+1}}</td>
                            <td>
                                <input type="text" class="form-control" v-model="item.tag" />
                            </td>

                            <td>
                                <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelKnow + item.levelUnderstanding + item.levelManipulate + item.levelManipulateHighly" disabled readonly />
                            </td>

                            <td v-for="(_item,i) in item.levelKnow">
                                <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelKnow[i]" />
                            </td>
                            @*<td>
                                    <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelKnow" />
                                </td>*@

                            <td v-for="(_item,i) in item.levelUnderstanding">
                                <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelUnderstanding[i]" />
                            </td>
                            @*<td>
                                    <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelUnderstanding.exercise" />
                                </td>*@

                            <td v-for="(_item,i) in item.levelManipulate">
                                <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelManipulate[i]" />
                            </td>
                            @*<td>
                                    <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelManipulate.exercise" />
                                </td>*@

                            <td v-for="(_item,i) in item.levelManipulateHighly">
                                <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelManipulateHighly[i]" />
                            </td>
                            @*<td>
                                    <input type="number" min="0" class="form-control text-center align-middle" v-model="item.levelManipulateHighly.exercise" />
                                </td>*@

                            <td class="text-center align-middle">
                                <button title="Xoá điều kiện" v-on:click="removeOption(k)" class="btn-act"><i class="ti-trash"></i></button>
                                <button title="Đặt lại" v-on:click="refreshOption(k)" class="btn-act"><i class="ti-reload"></i></button>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="12" class="text-right p-2">
                                <a class="btn-add-sub" title="Thêm điều kiện" href="javascript:;" v-on:click="addTdFormatExam(formatExam.format)"><i class="ic ic-plus-c"></i>Thêm điều kiện</a>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" class="text-center align-middle">Tổng</td>
                            <td class="text-center align-middle">
                                <input type="number" class="form-control text-center align-middle" disabled readonly />
                            </td>
                            <td colspan="2">
                                <input type="number" class="form-control text-center align-middle" disabled readonly />
                            </td>
                            <td colspan="2">
                                <input type="number" class="form-control text-center align-middle" disabled readonly />
                            </td>
                            <td colspan="2">
                                <input type="number" class="form-control text-center align-middle" disabled readonly />
                            </td>
                            <td colspan="2">
                                <input type="number" class="form-control text-center align-middle" disabled readonly />
                            </td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </b-col>
        <template v-slot:modal-footer="{ ok, cancel}">
            <template v-if="isLoading">
                <b-button>Đang thực hiện...</b-button>
            </template>
            <template v-else>
                <b-button variant="primary" v-on:click="createNewExam(true)">Tạo mới</b-button>
                <b-button variant="success" v-on:click="createNewExam(false)">Lưu</b-button>
                <b-button variant="danger" v-on:click="hideModal()">Huỷ</b-button>
            </template>
        </template>
    </b-modal>

    <b-modal id="modal_exam" centered :title="list_detailMatrix.name" size="xl" v-bind:hide-footer="list_detailMatrix.isHideFooter">
        <table class="table table-bordered table-sm">
            <thead>
                <tr>
                    <td rowspan="2" class="text-center align-middle">Nội dung</td>
                    <td rowspan="2" class="text-center align-middle" style="width:80px">Số câu hỏi</td>
                    <td colspan="2" class="text-center align-middle">BL1 - Nhận biết</td>
                    <td colspan="2" class="text-center align-middle">BL2 - Thông hiểu</td>
                    <td colspan="2" class="text-center align-middle">BL3 - Vận dụng</td>
                    <td colspan="2" class="text-center align-middle">BL3+ - Vận dụng cao</td>
                </tr>
                <tr>
                    <td class="text-center align-middle" style="width:80px">LT</td>
                    <td class="text-center align-middle" style="width:80px">BT</td>
                    <td class="text-center align-middle" style="width:80px">LT</td>
                    <td class="text-center align-middle" style="width:80px">BT</td>
                    <td class="text-center align-middle" style="width:80px">LT</td>
                    <td class="text-center align-middle" style="width:80px">BT</td>
                    <td class="text-center align-middle" style="width:80px">LT</td>
                    <td class="text-center align-middle" style="width:80px">BT</td>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(detail,k) in list_detailMatrix.data">
                    @*<td>{{k+1}}</td>*@
                    <td>
                        <input type="text" class="form-control" v-model="detail.Tags" />
                    </td>
                    <td>
                        <input type="number" class="form-control" :value="detail.Know.Total + detail.Understanding.Total + detail.Manipulate.Total + detail.ManipulateHighly.Total" disabled readonly />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.Know.Theory" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.Know.Exercise" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.Understanding.Theory" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.Understanding.Exercise" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.Manipulate.Theory" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.Manipulate.Exercise" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.ManipulateHighly.Theory" />
                    </td>
                    <td>
                        <input type="number" class="form-control text-center" v-model="detail.ManipulateHighly.Exercise" />
                    </td>
                </tr>
                @*<tr>
                        <td>
                            <select class="form-control">
                                <option value="">Sự điện ly</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="1" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Cacbon - Silic</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="1" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Nito - Photpho</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="1" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Hidrocacbon</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="3" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Đại cương về kim loại</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="4" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Kim loại kiềm, kim loại kiềm thổ, nhôm và hợp chất</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="6" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Kim loại kiềm, kim loại kiềm thổ, nhôm và hợp chất</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="6" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Sắt - một số kim loại nhóm B và hợp chất</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="5" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Tổng hợp hoá học vô cơ</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="2" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Este - Lipit</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="8" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Amin, amino axit, protein</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="4" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Cacbohidrat</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="3" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Polime, vật liệu</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="1" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <select class="form-control">
                                <option value="">Tổng hợp nội dung hoá học hữu cơ</option>
                            </select>
                        </td>
                        <td>
                            <input type="number" value="1" class="form-control" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" />
                        </td>
                    </tr>

                    <tr>
                        <td style="font-weight:bold" class="text-center align-middle">
                            Tổng câu
                        </td>
                        <td>
                            <input type="number" value="40" class="form-control" style="font-weight:bold" disabled />
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                        <td>
                            <input type="number" class="form-control text-center" style="font-weight:bold"/>
                        </td>
                    </tr>*@
            </tbody>
        </table>
    </b-modal>

    <b-modal id="listexam-modal-xl" size="xl" title="Danh sách đề kiểm tra" hide-footer>
        <b-col>
            <template v-if="list_detailExams.length > 0">
                <table class="table">
                    <thead class="text-center align-middle">
                        <tr>
                            <th style="width:50px">#</th>
                            <th>Mã</th>
                            <th style="width:150px"></th>
                        </tr>
                    </thead>

                    <tbody class="text-center align-middle">
                        <tr v-for="(exam,k) in list_detailExams">
                            <td>{{k+1}}</td>
                            <td>{{exam.CodeExam}}</td>
                            <td>
                                <a href="#">Xem chi tiết</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </template>
            <template v-else>
                Không có dữ liệu
            </template>
        </b-col>
    </b-modal>

    <b-modal id="setupexam-modal-xl" size="xl" :title="data_setupExam.nameExam">
        <b-col>
            <div class="row">
                <div class="col-sm-6">
                    <label class="label">Thời gian</label>
                    <input type="number" class="form-control" v-model="data_setupExam.timer"/>
                </div>
                <div class="col-sm-6">
                    <label class="label">Lượt làm</label>
                    <input type="number" class="form-control" v-model="data_setupExam.limit"/>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <label class="label">Ngày bắt đầu</label>
                    <input type="date" class="form-control" v-model="data_setupExam.startTime"/>
                </div>
                <div class="col-sm-6">
                    <label class="label">Ngày kết thúc</label>
                    <input type="date" class="form-control" v-model="data_setupExam.endTime"/>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6" style="position:relative">
                    <label class="label">Chọn lớp</label>
                    <input type="text" class="form-control" readonly v-on:click="showSelectClass('selectClass')" v-model="data_setupExam.nameClass"/>
                    <div class="col-sm-11 pt-1 d-none" id="selectClass" style="position:absolute;background-color:white;z-index:3">
                        <template v-if="list_classes.length > 0">
                            <ul style="list-style:none">
                                <li class="pt-1 pb-1" v-for="(_class,k) in list_classes">
                                    {{_class.Name}}<input type="checkbox" class="checkbox float-md-right" :id="_class.ID" v-on:click="checkToggle(_class.ID)"/>
                                </li>
                            </ul>
                        </template>
                        <template v-else>
                            Không có lớp nào đang hoạt động
                        </template>
                    </div>
                </div>
            </div>
        </b-col>

        <template v-slot:modal-footer="{ ok, cancel}">
            <template v-if="isLoading">
                <b-button>Đang gửi dữ liệu ...</b-button>
            </template>
            <template v-else>
                <b-button variant="success" v-on:click="SaveSetup()">Lưu</b-button>
                <b-button variant="danger" v-on:click="hideModal()">Huỷ</b-button>
            </template>
        </template>
    </b-modal>
}
