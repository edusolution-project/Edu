@{
    ViewData["Title"] = "Quản lý role";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var data = ViewBag.Data as BaseCustomerEntity.Database.RoleEntity;
}

@TempData["Error_Permision"]
<!-- Begin Page Content -->
<div class="container-fluid">
    @using (Html.BeginForm(FormMethod.Post, new { name = "FormControl" }))
    {
        <input type="hidden" name="ArrID" value="" />
        <!-- DataTales Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <div class="row">
                    <div class="col-lg-6">
                        <h4 class="m-0 font-weight-bold text-primary">@ViewData["Title"] 
                        @if (data != null)
                        {
                            <span style="font-size:0.5em; color:gray">(Quyển hạn của bạn : <b class="font-weight-bold text-primary">@data.Name</b>)</span>
                        }
                        </h4>
                    </div>
                    <div class="col-lg-6">
                        <div class="text-right">
                            <button type="button" class="btn btn-primary" onclick="Add(this)" data-toggle="modal" data-target="#ModalCenter"> <i class="fas fa-plus"></i> </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="role-wrapper">
                            <button type="button" class="btn btn-sm btn-success">+</button>
                            <div class="role-content">
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    }
</div>
<!-- Modal Create Form -->
<div class="modal fade" id="ModalCenter" tabindex="-1" role="dialog" aria-labelledby="ModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalCenterTitle">Tạo nhóm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <div class="form-row">
                                <label for="staticText" class="col-md-4 col-form-label">Tên nhóm:</label>
                                <input type="text" class="form-control col-md-8" data-name="name" placeholder="tên group">
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <div class="form-row">
                                <label for="staticText" class="col-md-4 col-form-label">Nhóm chính:</label>
                                <div class="col-md-8">
                                    <select data-name="parent" class="form-control">
                                        <option value="" selected>---- Root ----</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group row col-md-6">
                            <label for="staticText" class="col-md-4 col-form-label">Trạng thái:</label>
                            <div class="col-md-8">
                                <select data-name="active" class="form-control">
                                    <option value="true" selected>Hoạt động</option>
                                    <option value="false">Không hoạt động</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clear()">Đóng</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="savedata()">Lưu lại</button>
            </div>
        </div>
    </div>
</div>
<script>

    var g_Ajax = function (url, data, method, async) {
        var request = new XMLHttpRequest();
        return new Promise(function (resolve, reject) {
            request.onreadystatechange = function () {
                if (request.readyState == 4) {
                    // Process the response
                    if (request.status >= 200 && request.status < 300) {
                        // If successful
                        resolve(request.response);
                    } else {
                        var arrStatus = [
                            "UNSENT	Client has been created.open() not called yet.",
                            "OPENED	open() has been called.",
                            "HEADERS_RECEIVED	send() has been called, and headers and status are available.",
                            "LOADING	Downloading; responseText holds partial data.",
                            "DONE	The operation is complete."
                        ];
                        reject({
                            status: request.status,
                            statusText: request.statusText
                        });
                    }
                }
            }
            request.open(method || 'POST', url, async || true);
            //request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded;multipart/form-data;application/json');
            // Send the request
            request.setRequestHeader('Content-type', 'application/json; charset=utf-8');
            request.send(data);
        });
    }

    function LoadData() { var searchText = $("#searchText").val();var startDate = $("#startDate_sort").val();var endDate = $("#endDate_sort").val();

        $.ajax({
            type: "GET",
            url: '@Url.Action("get", "role")',
            data: {SearchText: searchText,StartDate: startDate,EndDate: endDate},
            dataType:"json",
            success: function (data) {
                var body = $('#dataTable tbody');
                body.html("");
                if (data.data.length > 0)
                {
                    for (i = 0; i < data.data.length; ++i) {
                        item = data.data[i];
                        console.log(item);
                        var active = "";
                        if (item.IsActive) {
                            active = "<td><button onclick=\"ExcuteOnlyItem('" + item.ID + "','@Url.Action("approved","role")',LoadData)\" type='button' data-toggle='button' aria-pressed='true' autocomplete='off' class='btn btn-lg btn-toggle active btn-success'> <div class='handle'></div> </button></td>";
                        } else {
                            active = "<td><button onclick=\"ExcuteOnlyItem('" + item.ID + "','@Url.Action("approved","role")',LoadData)\" type='button' data-toggle='button' aria-pressed='true' autocomplete='off' class='btn btn-lg btn-toggle btn-danger'> <div class='handle'></div> </button></td>";
                        }
                        var url = '@Url.Action("Detail","Role")';
                        body.append("<tr>" +
                            "<td><div class='input-group'><input name='cid' type='checkbox' value='" + item.ID +"' onclick=\"setToggle('dataTable')\"/></div></td>"+
                            "<td>" + (i + 1) + "</td>" +
                            "<td><a href='" + url + "/" + item.ID + "'>" + item.Name + "</a></td>" +
                            "<td>" +  item.Type +"</td>"+active +
                            "<td><button onclick=\"Edit('" + item.ID + "','@Url.Action("getdetails","role")','@Url.Action("create","role")',this)\" type='button' class='btn btn-primary' data-toggle='modal' data-target='#ModalCenter'> <i class='fas fa-edit'></i> </button>" +
                            "<button onclick=\"var result = confirm('bạn muốn xóa đối tượng " + item.Code + " ? '); if(result) ExcuteOnlyItem('" + item.ID + "','@Url.Action("delete","role")',LoadData); else return;\" type='button' class='btn btn-danger'> <i class='fas fa-trash'></i> </button>" +
                            "</td > " +
                            "</tr>"
                        );
                    }
                    $('.btn').tooltip({ trigger:'hover' });
                }
            },
            error: function() {
                alert("Error");
            }
        });
    };

    $(document).ready(function () {
        LoadData();
    });

    var savedata = function () {
        var ModalCenter = document.getElementById("ModalCenter");
        var name = ModalCenter.querySelector('input[data-name="name"]').value;
        var parent = ModalCenter.querySelector('[data-name="parent"]').value;
        var active = ModalCenter.querySelector('[data-name="active"]').value;
        var data = {
            Name: name,
            ParentID: parent,
            IsActive: active
        };
        g_Ajax("@Url.Action("Create","Role")", JSON.stringify(data), "POST").then(function (res) {
            var dataJson = JSON.parse(res);
            if (dataJson != null && dataJson.code == 200) {
                //success
                location.reload();
            }
        });
    }
    var clear = function () {
        var ModalCenter = document.getElementById("ModalCenter");
        ModalCenter.querySelector('input[data-name="name"]').value = "";
        ModalCenter.querySelector('[data-name="parent"]').value = "";
    }
    //[JsonProperty("Name")]
    //    public string Name { get; set; }
    //[JsonProperty("Code")]
    //    public string Code { get; set; }
    //[JsonProperty("Type")]
    //    public string Type { get; set; }
    //[JsonProperty("IsActive")]
    //    public bool IsActive { get; set; }
    //[JsonProperty("UserCreate")]
    //    public string UserCreate { get; set; }
    //[JsonProperty("CreateDate")]
    //    public DateTime CreateDate { get; set; }
    //[JsonProperty("ParentID")]
    //    public string ParentID { get; set; }
    //[JsonProperty("Level")]
    //    public int Level { get; set; }
    //[JsonProperty("Group")]
    //    public int Group { get; set; }
</script>