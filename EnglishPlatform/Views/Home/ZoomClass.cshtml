
@{
    ViewData["Title"] = "OnlineClass";
    int role = User.FindFirst("Type")?.Value == "teacher" ? 1 : 0;
    var roomid = ViewBag.RoomID;
}

<link type="text/css" rel="stylesheet" href="https://source.zoom.us/1.9.0/css/bootstrap.css" />
<link type="text/css" rel="stylesheet" href="https://source.zoom.us/1.9.0/css/react-select.css" />

<style>
    /*body {
        padding-top: 50px;
    }*/
    .footer__leave-btn {
        display: none;
    }

    #nav-tool {
        /*display: none !important;*/
    }
</style>

<div id="stuName" style="display:none">
    @User.Identity.Name
</div>
<nav id="nav-tool" class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <a class="navbar-brand d-none" href="#">VÀO LỚP HỌC</a>
        </div>
        <div id="navbar">
            <form class="navbar-form navbar-right" id="meeting_form">
                <div class="form-group">
                    <input type="password" name="password" id="password" value="" placeholder="Nhập mật khẩu của lớp học" class="form-control" required>
                </div>
                <button type="submit" class="btn btn-primary" id="join_meeting">Vào lớp</button>
            </form>
        </div><!--/.navbar-collapse -->
    </div>
</nav>

<script src="https://source.zoom.us/1.9.0/lib/vendor/react.min.js"></script>
<script src="https://source.zoom.us/1.9.0/lib/vendor/react-dom.min.js"></script>
<script src="https://source.zoom.us/1.9.0/lib/vendor/redux.min.js"></script>
<script src="https://source.zoom.us/1.9.0/lib/vendor/redux-thunk.min.js"></script>
<script src="https://source.zoom.us/1.8.1/lib/vendor/jquery.min.js"></script>
<script src="https://source.zoom.us/1.9.0/lib/vendor/lodash.min.js"></script>

<script src="https://source.zoom.us/zoom-meeting-1.9.0.min.js"></script>

<script>
        (function () {

            console.log('checkSystemRequirements');
            console.log(JSON.stringify(ZoomMtg.checkSystemRequirements()));

            ZoomMtg.preLoadWasm();
            ZoomMtg.prepareJssdk();
            var API_KEY = 'LIW6nUl8RkKDxDbi_kbk6A';

            /**
             * NEVER PUT YOUR ACTUAL API SECRET IN CLIENT SIDE CODE, THIS IS JUST FOR QUICK PROTOTYPING
             * The below generateSignature should be done server side as not to expose your api secret in public
             * You can find an eaxmple in here: https://marketplace.zoom.us/docs/sdk/native-sdks/Web-Client-SDK/tutorial/generate-signature
             */
            var API_SECRET = 'NpzsHyH0EWMM9QmKdrGRmGt0fWQWDPCmyhgh';

            var joinRoom = function (e) {

                if (e != null) {
                     e.preventDefault();

                    if (document.getElementById('password').value == "") {
                        alert("Vui lòng nhập mật khẩu đã được cấp");
                        return false;
                    }
                }

                $('#nav-tool').hide();
                name = document.getElementById("stuName").innerHTML;
                console.log(name);
                var meetConfig = {
                    apiKey: API_KEY,
                    apiSecret: API_SECRET,
                    // tên zoom mặc định của longht (ZOOMID = 9083792841) = 1 host
                    meetingNumber:@roomid,
                    userName: name,//document.getElementById('display_name').value,
                    passWord: document.getElementById('password').value,
                    leaveUrl: "https://eduso.vn",
                    role: 0 // 0 member - 1 admin
                };
                var signature = ZoomMtg.generateSignature({
                    meetingNumber:
                        meetConfig.meetingNumber,
                    apiKey: meetConfig.apiKey,
                    apiSecret: meetConfig.apiSecret,
                    role: meetConfig.role,
                    success: function (res) {
                        console.log(res.result);
                    }
                });

                ZoomMtg.init({
                    leaveUrl: 'https://eduso.vn',
                    isSupportAV: true,
                    success: function () {
                        ZoomMtg.join(
                            {
                                meetingNumber: meetConfig.meetingNumber,
                                userName: meetConfig.userName,
                                signature: signature,
                                apiKey: meetConfig.apiKey,
                                userEmail: 'email@gmail.com',
                                passWord: meetConfig.passWord,
                                success: function (res) {
                                    $('#nav-tool').hide();
                                    console.log('join meeting success');
                                },
                                error: function (res) {
                                    console.log(res);
                                }
                            }
                        );
                    },
                    error: function (res) {
                        console.log(res);
                    }
                });
            }

            document.getElementById('join_meeting').addEventListener('click', function (e) {
                joinRoom(e)
            });

            //joinRoom();
        })();
</script>

