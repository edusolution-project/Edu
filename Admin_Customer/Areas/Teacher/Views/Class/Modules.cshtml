@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    var currentClass = ViewBag.Class as BaseCustomerEntity.Database.ClassEntity;
    ViewData["Title"] = currentClass.Name + " - Chương trình học";
}

<script>
    activeTab = "course";
    modulesLink = "@Url.Action("Modules", "Course")";
    activeSub = "modules";
</script>
<div class="left-col">
    <div class="page-title">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="main-container">
        <div class="sub-sidebar">
            @await Html.PartialAsync("_subSidebarTeacher")
        </div>
        <div class="main-content">
            <div class="modules-wrapper">
            </div>
        </div>
    </div>
</div>
<style>
    .text-holder {
        cursor: pointer;
        border: none;
        background: transparent;
        font-weight: 500;
        text-align: right;
        outline: none;
    }
</style>
@section Scripts {
    <script>

    var chapters = [];
    var lessons = [];
    var scheduleBody = $('.modules-wrapper');

    function LoadSchedule() {
        chapters = [];
        lessons = [];

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSchedules", "Class")',
            data: { ID: '@currentClass.ID' },
            dataType:"json",
            success: function (data) {
                scheduleCounter = 1;
                scheduleBody.html("");

                chapters = data.Data.Chapters;
                lessons = data.Data.Lessons;

                if (chapters.length > 0) {
                    for (i = 0; i < chapters.length; ++i) {
                        var chapter = chapters[i];
                        var parent = scheduleBody;

                        if (chapter.ParentID == null) {
                            chapter.ParentID = "0";
                        }

                        var chapContent = $("<div>", { "id": chapter.ID, "pid": chapter.ParentID, "class":"modules" });
                        var chapTitle = $("<div>", { "class":"modules-title row", "data-target":"#" + chapter.ID + " .modules-content:first", "onclick":"toggleCollapse(this)" });
                        var title_cPart = $("<div>", {"class":"col-md-12"});
                        var title_ePart = $("<div>", {"class":"col-md-0 text-right"})
                        title_cPart.append($("<i>", {"class":"expand toggleExpand"}))
                            .append($("<a>", {
                                "class":"action-link",
                                "href": modulesLink + "#" + chapter.ID,
                                "text": chapter.Name
                                }));
                        chapTitle.append(title_cPart).append(title_ePart);
                        chapContent.append(chapTitle);
                        chapContent.append($("<div>", { "class":"modules-content collapse show"}));


                        if (chapter.ParentID === "0")
                        {
                            scheduleBody.append(chapContent);
                        }
                        else
                        {
                            parent = scheduleBody.find(".modules[id=" + chapter.ParentID +"] .modules-content:first");
                            parent.append(chapContent);
                        }
                    }
                }

                if (lessons.length > 0) {
                    for (j = 0; j < lessons.length; j++) {
                        var item = lessons[j];
                        var active = "";
                        if (item.IsActive) {
                            active = "<button type='button' data-toggle='button' aria-pressed='true' autocomplete='off' class='btn btn-lg btn-toggle active btn-success' onclick=\"ExcuteOnlyItem('" + item.ScheduleID + "','@Url.Action("unpublish", "LessonSchedule")',ToggleStatus(this))\"> <div class='handle'></div> </button>";
                        } else {
                            active = "<button type='button' data-toggle='button' aria-pressed='true' autocomplete='off' class='btn btn-lg btn-toggle btn-danger' onclick=\"ExcuteOnlyItem('" + item.ScheduleID + "','@Url.Action("publish", "LessonSchedule")',ToggleStatus(this))\"> <div class='handle'></div> </button>";
                        }

                        var startdate = moment(item.StartDate).format('DD/MM/YYYY');
                        var enddate = moment(item.EndDate).format('DD/MM/YYYY');

                        var rowData = $("<div>", {"class":"modules-content-item row"});
                        var leftPart = $("<div>", {"class":"col-md-6"});
                        var rightPart = $("<div>", {"class":"col-md-2 text-right"});
                        leftPart.append($("<span>", {"class":"modules-content-item-icon" + (item.TemplateType === 2? (" assignment atype" + item.Etype):"")}));
                        rightPart.append(active);
                        var itemData = $("<div>", {"class":"modules-content-item-info"});
                        itemData.append($("<a>", {
                                "class":"action-link",
                                "href": "@Url.Action("Detail", "Lesson")/" + item.ID + "/@currentClass.ID",
                                "text": item.Title
                            }));

                        if(item.Description != null)
                        {
                            itemData.append($("<span>", {"class":"description", "text": item.Description}));
                        }

                        leftPart.append(itemData);
                        rowData.append(leftPart)
                            .append($("<div>", {"class":"col-md-2 text-right"})
                                .append($("<input>", {"sid": item.ScheduleID, "target":"StartDate", "type":"text", "readonly":"readonly","class":"text-holder", "value": startdate, "onchange":"updateSchedule(this)"})))
                            .append($("<div>", {"class":"col-md-2 text-right"})
                                .append($("<input>",{"sid": item.ScheduleID, "target":"EndDate", "type":"text", "readonly":"readonly","class":"text-holder", "value": enddate, "onchange":"updateSchedule(this)"})))
                            .append(rightPart);

                        if (item.ChapterID == null) {
                            scheduleBody.append(rowData);
                        }
                        else
                        {
                            parent = scheduleBody.find(".modules[id=" + item.ChapterID +"] .modules-content:first");
                            parent.append(rowData);
                        }
                    }

                    $('.text-holder').datepicker({
                      changeMonth: true,
                      changeYear: true,
                      dateFormat: "dd/mm/yy"
                    });
                }
                if(window.location.hash != "")
                {
                    var anchor = window.location.hash;
                    $(function() {
                        $(document).scrollTop( $(anchor).offset().top );
                    });
                }
            },
            error: function (res) {
                console.log(res.responseText);
            }
        });
    }

    function updateSchedule(obj) {
        var currentval = $(obj).val();
        var scheduleid = $(obj).attr("sid");
        var startdate = moment($(obj).parent().parent().find("[target=StartDate]").val(),"DD/MM/YYYY").format("MM-DD-YYYY");
        var enddate = moment($(obj).parent().parent().find("[target=EndDate]").val(),"DD/MM/YYYY").format("MM-DD-YYYY");
        console.log(startdate);
        console.log(enddate);

        $(obj).val(currentval + "...")
        $.ajax({
                type: "POST",
                url: '@Url.Action("Update", "LessonSchedule")',
                data:
                {
                    ID: scheduleid,
                    StartDate: startdate,
                    EndDate: enddate
                },
                dataType:"json",
                success: function (data) {
                    $(obj).val(currentval);
                },
                error: function (res) {
                    console.log(res.responseText);
                }
            });

    }

    $(document).ready(function () {
        LoadSchedule();
    });

    </script>
}