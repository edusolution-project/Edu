@using BaseCustomerEntity.Database;
@using BaseCustomerMVC.Globals;
@using MongoDB.Driver;
@using EmailTemplate.Controllers;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var dataCenter= ViewBag.DataCenter as Dictionary<string, Dictionary<int, double[]>>;
    var centerName = ViewBag.CenterName as Dictionary<string,string>;
}

<div id="list-data"></div>
<!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>-->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    var root = document.getElementById("list-data");
    var countSendMail = 0;
    var sendData = function (arrayData) {
        return $.ajax({
            type: "POST",
            url: '/email/SendMonthlyReport',
            data: { Data: arrayData },
            success: function (res) {
                console.log(res)
            },
            timeout: 5000
        });
    }
</script>

@{ 
    List<string> centerIDs = dataCenter.Keys?.ToList();
    var totalCenter = centerIDs.Count;
    for(int i = 0; i < totalCenter; i++)
    {
        string centerID = centerIDs[i];
        string _centerName = centerName[centerID];
        var data = dataCenter[centerID];

        Boolean isHasW5 = data.Count > 4;
        double[] w1 = data[0];
        double[] w2 = data[1];
        double[] w3 = data[2];
        double[] w4 = data[3];

        List<double> w5=new List<double>() { 0, 0, 0, 0, 0, 0, 0 };
        if (isHasW5)
        {
            w5 = data[4].ToList();
        };
    <script>
            var arrayData = [];
            setTimeout(function () {
            var centerID = "@centerID";
            @*var _class = '@id';*@
            var div = document.createElement("canvas");
            var id = "myChart_@centerID";
            div.id = id;
            root.appendChild(div);
            var isW5 = '@isHasW5'.toLowerCase() == "true";
            var ctx = document.getElementById(id).getContext('2d');
            //classStudent.ToString(),stChuaVaoLop.ToString(),min8.ToString(),min5.ToString(),min2.ToString(),min0.ToString(),chualam.ToString()
            var labels = isW5 ? ['Tuần 1', 'Tuần 2', 'Tuần 3', 'Tuần 4', 'Tuần 5'] : ['Tuần 1', 'Tuần 2', 'Tuần 3', 'Tuần 4'];

            var siso = isW5 ? [parseFloat('@w1[0]'), parseFloat('@w2[0]'), parseFloat('@w3[0]'), parseFloat('@w4[0]'), parseFloat('@w5[0]')] : [parseFloat('@w1[0]'), parseFloat('@w2[0]'), parseFloat('@w3[0]'), parseFloat('@w4[0]')];
            var stChuaVaoLop = isW5 ? [parseFloat('@w1[1]'), parseFloat('@w2[1]'), parseFloat('@w3[1]'), parseFloat('@w4[1]'), parseFloat('@w5[1]')] : [parseFloat('@w1[1]'), parseFloat('@w2[1]'), parseFloat('@w3[1]'), parseFloat('@w4[1]')];
            var min8 = isW5 ? [parseFloat('@w1[2]'), parseFloat('@w2[2]'), parseFloat('@w3[2]'), parseFloat('@w4[2]'), parseFloat('@w5[2]')] : [parseFloat('@w1[2]'), parseFloat('@w2[2]'), parseFloat('@w3[2]'), parseFloat('@w4[2]')]
            var min5 = isW5 ? [parseFloat('@w1[3]'), parseFloat('@w2[3]'), parseFloat('@w3[3]'), parseFloat('@w4[3]'), parseFloat('@w5[3]')] : [parseFloat('@w1[3]'), parseFloat('@w2[3]'), parseFloat('@w3[3]'), parseFloat('@w4[3]')]
            var min2 = isW5 ? [parseFloat('@w1[4]'), parseFloat('@w2[4]'), parseFloat('@w3[4]'), parseFloat('@w4[4]'), parseFloat('@w5[4]')] : [parseFloat('@w1[4]'), parseFloat('@w2[4]'), parseFloat('@w3[4]'), parseFloat('@w4[4]')]
            var min0 = isW5 ? [parseFloat('@w1[5]'), parseFloat('@w2[5]'), parseFloat('@w3[5]'), parseFloat('@w4[5]'), parseFloat('@w5[5]')] : [parseFloat('@w1[5]'), parseFloat('@w2[5]'), parseFloat('@w3[5]'), parseFloat('@w4[5]')]
            var chualam = isW5 ? [parseFloat('@w1[6]'), parseFloat('@w2[6]'), parseFloat('@w3[6]'), parseFloat('@w4[6]'), parseFloat('@w5[6]')] : [parseFloat('@w1[6]'), parseFloat('@w2[6]'), parseFloat('@w3[6]'), parseFloat('@w4[6]')]

            var chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'bar', //'bar', //line , radar, Doughnut and Pie , Polar Area,bubble,scatter

                // The data for our dataset
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Sĩ số',
                            backgroundColor: '#8f00ff',
                            borderColor: '#8f00ff',
                            minBarLength: 1,//type=bar
                            data: siso
                        },
                        {
                            label: 'Học sinh chưa vào lớp',
                            backgroundColor: '#ff7f00',
                            borderColor: '#ff7f00',
                            minBarLength: 1,//type=bar
                            data: stChuaVaoLop
                        },
                        {
                            label: '8.0 -> 10',
                            backgroundColor: 'lightgreen',
                            borderColor: 'green',
                            minBarLength: 1,//type=bar
                            data: min8
                        },
                        {
                            label: '5.0 -> 7.9',
                            backgroundColor: 'lightblue',
                            borderColor: 'blue',
                            minBarLength: 1,//type=bar
                            data: min5
                        },
                        {
                            label: '2.0 -> 4.9',
                            backgroundColor: '#ffff33',
                            borderColor: 'yellow',
                            minBarLength: 1,//type=bar
                            data: min2
                        },
                        {
                            label: '0.0 -> 1.9',
                            backgroundColor: '#ff454d',
                            borderColor: 'red',
                            minBarLength: 1,//type=bar
                            data: min0
                        },
                        {
                            label: 'Chưa làm',
                            backgroundColor: '#4b0082',
                            borderColor: '#4b0082',
                            minBarLength: 1,//type=bar
                            data: chualam
                        }
                    ]
                },

                // Configuration options go here
                options: {
                    @*title: {
                        display: true,
                        text: 'Báo cáo tháng kết quả học tập ' + '@_centerName.ToString()' + ' tháng ' + (new Date().getMonth() + 1)
                    }*@
                },
                plugins: [{
                    afterRender: async function () {
                        var x = chart.toBase64Image();
                        var centerID = '@centerID';
                        arrayData.push(
                            {
                                Image: x,
                                CenterID: centerID
                            }
                        );
                        console.log(countSendMail++);
                        if (countSendMail == @totalCenter) {
                            //if (countSendMail == 1) {
                            //debugger
                            //sendData(arrayData);
                        }
                    }
                }]
            });

            }());
    </script>
    }
}