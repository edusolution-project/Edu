@using BasePublisherMVC.Globals;
@{ 
    var data = new WebMenu();
    var menu = data.GetAdminMenu.Where(o=>o.Type == MenuType.Mod && o.IShow == true).OrderByDescending(o=>o.Order).ToList();
    string _action = @Url.Action().Split('/')[1] == null || @Url.Action().Split('/')[1] == "" ? "active" : string.Empty;
}
<div class="sidebar" data-color="danger" data-background-color="white">
    <div class="logo">
        <a href="#" class="simple-text logo-normal">
            Publisher Manager
        </a>
    </div>
    <div>
        
    </div>
    <div class="sidebar-wrapper">
        <ul class="nav">
            <li class="nav-item @_action">
                <a class="nav-link" href="@Url.Action("Index","cphome")">
                    <i class="material-icons">home</i>
                    <p>Home</p>
                </a>
            </li>
            @{
                for (int i = 0; menu != null && i < menu.Count; i++)
                {
                    var item = menu[i];
                    if (!string.IsNullOrEmpty(Url.Action("Index", item.CModule)))
                    {
                        string _active = Url.Action().Split('/')[1] == item.CModule ? "active" : string.Empty;
                    <li class="nav-item @_active">
                        <a class="nav-link" href="@Url.Action("Index", item.CModule)">
                            <i class="material-icons">@item.Icon</i>
                            <p>@item.Name</p>
                        </a>
                    </li>
                    }
                }
            }
        </ul>
    </div>
</div>